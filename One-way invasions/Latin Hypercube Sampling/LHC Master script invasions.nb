(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1330871,      25048]
NotebookOptionsPosition[   1278256,      24127]
NotebookOutlinePosition[   1324558,      24980]
CellTagsIndexPosition[   1324515,      24977]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Mathematica", " ", "Sheet", " ", "for", " ", "Latin", " ", "Hypercube", 
    " ", "Sampling", " ", "for", " ", "Parental", " ", "Care"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Making", " ", "a", " ", "sheet", " ", "like", " ", "the", " ", "R", " ", 
    "one", " ", "where", " ", "you", " ", "just", " ", "have", " ", "to", " ",
     "change", " ", "values", " ", "of", " ", "cf", " ", "and", " ", "cm", 
    " ", "and", " ", "cfres", " ", "and", " ", "cm", " ", "res"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"This", " ", "defines", " ", "the", " ", "number", " ", "of", " ", 
    RowBox[{"samples", "/", "bins"}], " ", "to", " ", "create"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"n", "=", "4000"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "These", " ", "next", " ", "blocks", " ", "of", " ", "code", " ", 
     "define", " ", "a", " ", "range", " ", "for", " ", "each", " ", 
     "parameter", " ", "and", " ", "using", " ", "a", " ", "uniform", " ", 
     "distribution", " ", "generate", " ", "samples", " ", "within", " ", 
     "in", " ", "each", " ", "bin"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"expanding", " ", "the", " ", "range", " ", "of", " ", "z"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmino", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxo", "=", "8"}], ";", 
    RowBox[{"reso", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kmino", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxo", "-", "kmino"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kmino", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxo", "-", "kmino"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kmino", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxo", "-", "kmino"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kmino", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxo", "-", "kmino"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ao", "=", "reso"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ao", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kminu", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxu", "=", "0.7"}], ";", 
    RowBox[{"resu", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kminu", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxu", "-", "kminu"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kminu", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxu", "-", "kminu"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kminu", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxu", "-", "kminu"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kminu", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxu", "-", "kminu"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"amu", "=", "resu"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cm0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"amu", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmink", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxk", "=", "1.0"}], ";", 
    RowBox[{"resk", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kmink", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxk", "-", "kmink"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kmink", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxk", "-", "kmink"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kmink", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxk", "-", "kmink"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kmink", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxk", "-", "kmink"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ak", "=", "resk"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"em0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ak", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kminx", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxx", "=", "0.7"}], ";", 
    RowBox[{"resx", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kminx", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxx", "-", "kminx"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kminx", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxx", "-", "kminx"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kminx", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxx", "-", "kminx"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kminx", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxx", "-", "kminx"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ax", "=", "resx"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cf0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ax", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmina", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxa", "=", "1.0"}], ";", 
    RowBox[{"resa", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kmina", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxa", "-", "kmina"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kmina", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxa", "-", "kmina"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kmina", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxa", "-", "kmina"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kmina", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxa", "-", "kmina"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aa", "=", "resa"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mum0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kminb", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxb", "=", "1.0"}], ";", 
    RowBox[{"resb", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kminb", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxb", "-", "kminb"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kminb", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxb", "-", "kminb"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kminb", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxb", "-", "kminb"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kminb", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxb", "-", "kminb"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ab", "=", "resb"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"muf0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ab", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmind", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxd", "=", "1.0"}], ";", 
    RowBox[{"resd", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kmind", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxd", "-", "kmind"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kmind", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxd", "-", "kmind"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kmind", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxd", "-", "kmind"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kmind", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxd", "-", "kmind"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ad", "=", "resd"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigjm0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ad", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kminh", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxh", "=", "1.0"}], ";", 
    RowBox[{"resh", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kminh", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxh", "-", "kminh"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kminh", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxh", "-", "kminh"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kminh", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxh", "-", "kminh"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kminh", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxh", "-", "kminh"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ah", "=", "resh"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigjf0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ah", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmini", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxi", "=", "1.0"}], ";", 
    RowBox[{"resi", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kmini", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxi", "-", "kmini"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kmini", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxi", "-", "kmini"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kmini", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxi", "-", "kmini"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kmini", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxi", "-", "kmini"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ai", "=", "resi"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"taum0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ai", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kminj", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxj", "=", "1.0"}], ";", 
    RowBox[{"resj", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kminj", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxj", "-", "kminj"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kminj", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxj", "-", "kminj"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kminj", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxj", "-", "kminj"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kminj", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxj", "-", "kminj"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aj", "=", "resj"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tauf0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"aj", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kminz", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxz", "=", "1.0"}], ";", 
    RowBox[{"resz", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kminz", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxz", "-", "kminz"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kminz", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxz", "-", "kminz"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kminz", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxz", "-", "kminz"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kminz", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxz", "-", "kminz"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zz", "=", "resz"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mm0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"zz", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kminy", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxy", "=", "1.0"}], ";", 
    RowBox[{"resy", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kminy", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxy", "-", "kminy"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kminy", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxy", "-", "kminy"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kminy", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxy", "-", "kminy"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kminy", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxy", "-", "kminy"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yy", "=", "resy"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mf0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"yy", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kminc", "=", "50"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxc", "=", "250"}], ";", 
    RowBox[{"resc", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kminc", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxc", "-", "kminc"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kminc", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxc", "-", "kminc"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kminc", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxc", "-", "kminc"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kminc", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxc", "-", "kminc"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ac", "=", "resc"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ac", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kminx", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxx", "=", "8"}], ";", 
    RowBox[{"resx", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kminx", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxx", "-", "kminx"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kminx", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxx", "-", "kminx"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kminx", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxx", "-", "kminx"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kminx", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxx", "-", "kminx"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ax", "=", "resx"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rr0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ax", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmine", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxe", "=", "1.0"}], ";", 
    RowBox[{"rese", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kmine", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxe", "-", "kmine"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kmine", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxe", "-", "kmine"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kmine", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxe", "-", "kmine"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kmine", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxe", "-", "kmine"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ae", "=", "rese"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wm0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ae", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kming", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmaxg", "=", "1.0"}], ";", 
    RowBox[{"resg", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"kming", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxg", "-", "kming"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"kming", "+", 
          RowBox[{"i", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kmaxg", "-", "kming"}], ")"}], "/", "n"}]}]}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kming", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxg", "-", "kming"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}], ",", 
              RowBox[{"kming", "+", 
               RowBox[{"i", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"kmaxg", "-", "kming"}], ")"}], "/", 
                 RowBox[{"(", "n", ")"}]}]}]}]}], "}"}], "]"}], ",", "1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ag", "=", "resg"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wf0", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ag", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
        "]"}], ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "Mutant", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"cm", "=", "cm0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cf", "=", 
      RowBox[{"0.7", "-", "cm0"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cm", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cf", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ct", " ", "=", " ", 
     RowBox[{"cm", " ", "+", " ", "cf"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ct", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"em", "=", "em0"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"em", "=", "em0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ef", " ", "=", " ", 
     RowBox[{"1", "-", "em"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mum", "=", 
     RowBox[{"mum0", "*", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "z"}], "*", "ct"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"muf", "=", 
     RowBox[{"muf0", "*", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "z"}], "*", "ct"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigjm", "=", "sigjm0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigjf", "=", "sigjf0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"taum", " ", "=", "taum0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tauf", "=", "tauf0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mm", "=", 
     RowBox[{"1", "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "mm0"}], ")"}], "*", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "mum0"}], ")"}], "*", "em"}], ")"}]}], 
          ")"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mf", "=", 
     RowBox[{"1", "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "mf0"}], ")"}], "*", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "muf0"}], ")"}], "*", "ef"}], ")"}]}], 
          ")"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k", "=", "k0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rr", "=", 
     RowBox[{"rr0", "*", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "mum0"}], ")"}], "*", "em"}], "+", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "muf0"}], ")"}], "*", "ef"}], ")"}]}], 
           ")"}]}], "/", "2"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "added", " ", "r", " ", "and", " ", "maturation", " ", "rate", " ", 
      RowBox[{"edits", "/", " ", "trade"}]}], "-", "off"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wm", "=", 
     RowBox[{"1", "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "wm0"}], ")"}], "*", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"-", "cm"}], ")"}]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wf", "=", " ", 
     RowBox[{"1", "-", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "wf0"}], ")"}], "*", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ef", "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", "muf0"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "mum0"}], ")"}], "*", "em"}], " ", "+", 
             "cf"}], ")"}]}], ")"}]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"emm", " ", "=", " ", 
     RowBox[{"em", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "mum"}], ")"}], "*", "mm"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"emf", " ", "=", " ", 
     RowBox[{"ef", "*", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "muf"}], ")"}], "*", "mf"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"esm", " ", "=", " ", 
     RowBox[{"em", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "mum"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"esf", " ", "=", " ", 
     RowBox[{"ef", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "muf"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"am", " ", "=", " ", 
     RowBox[{"em", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "mum"}], ")"}], "*", "mm", "*", "sigjm"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"af", " ", "=", " ", 
     RowBox[{"ef", "*", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "muf"}], ")"}], "*", " ", "mf", "*", "sigjf"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "Resident", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"emres", " ", "=", "em0"}], ";"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"emres", "=", "em0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"efres", " ", "=", 
     RowBox[{"1", "-", "emres"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zres", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cmres", " ", "=", " ", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cfres", " ", "=", " ", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ctres", " ", "=", " ", 
     RowBox[{"cmres", "+", "cfres"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mumres", "=", 
     RowBox[{"mum0", "*", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "zres"}], "*", "ctres"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mufres", "=", 
     RowBox[{"muf0", "*", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "zres"}], "*", "ctres"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigjmres", "=", "sigjm0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigjfres", "=", "sigjf0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"taumres", "=", "taum0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"taufres", " ", "=", "tauf0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mmres", "=", 
     RowBox[{"1", "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "mm0"}], ")"}], "*", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "mum0"}], ")"}], "*", "emres"}], ")"}]}], 
          ")"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mfres", "=", 
     RowBox[{"1", "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "mf0"}], ")"}], "*", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "muf0"}], ")"}], "*", "efres"}], ")"}]}], 
          ")"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KR", "=", "k0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rres", "=", 
     RowBox[{"rr0", "*", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "mum0"}], ")"}], "*", "emres"}], "+", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "muf0"}], ")"}], "*", "efres"}], ")"}]}], 
           ")"}]}], "/", "2"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wmres", "=", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "wm0"}], ")"}], "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"-", "cmres"}], ")"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wfres", "=", " ", 
     RowBox[{"1", "-", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "wf0"}], ")"}], "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"efres", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "muf0"}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "mum0"}], ")"}], "*", "emres"}], "+", 
            "cfres"}], ")"}]}], ")"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"emmres", " ", "=", " ", 
     RowBox[{"emres", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "mumres"}], ")"}], "*", "mmres"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"emfres", " ", "=", " ", 
     RowBox[{"efres", "*", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "mufres"}], ")"}], "*", "mfres"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"esmres", "=", " ", 
     RowBox[{"emres", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "mumres"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"esfres", " ", "=", " ", 
     RowBox[{"efres", "*", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "mufres"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"amres", " ", "=", " ", 
     RowBox[{"emres", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "mumres"}], ")"}], "*", "mmres", "*", "sigjmres"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"afres", " ", "=", " ", 
     RowBox[{"efres", "*", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "mufres"}], ")"}], "*", " ", "mfres", "*", 
      "sigjfres"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AR", " ", "=", 
     RowBox[{"KR", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"wmres", "*", "amres"}], "+", 
            RowBox[{"wfres", "*", "afres"}]}], ")"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"mumres", "*", "emres"}], " ", "+", " ", 
             RowBox[{"mufres", "*", "efres"}], " ", "+", " ", 
             RowBox[{"mmres", "*", "esmres"}], " ", "+", " ", 
             RowBox[{"mfres", "*", "esfres"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"emmres", "*", "sigjmres"}], "+", 
               RowBox[{"emfres", "*", "sigjfres"}]}], ")"}], "*", "rres", "*",
              "afres"}], ")"}]}]}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.867561696117284*^9, 3.8675617044458847`*^9}, {
   3.867561804628895*^9, 3.867561830316218*^9}, {3.867566533819933*^9, 
   3.867566535815539*^9}, 3.867577745671014*^9, {3.867577826856112*^9, 
   3.867577834758502*^9}, {3.8675780607528954`*^9, 3.8675780617389936`*^9}, {
   3.86757843163218*^9, 3.8675784323146753`*^9}, {3.867578513406825*^9, 
   3.867578514116699*^9}, {3.8675825369141693`*^9, 3.867582537553898*^9}, {
   3.869045953831633*^9, 3.8690460054609957`*^9}, {3.876365329768239*^9, 
   3.876365400848237*^9}, {3.876365492994656*^9, 3.876365512488253*^9}, {
   3.876365579874256*^9, 3.876365580083173*^9}, {3.876365757173333*^9, 
   3.87636576560349*^9}, {3.876365817133004*^9, 3.876365835418639*^9}, {
   3.876365878361623*^9, 3.8763658822160254`*^9}, {3.8763659803467007`*^9, 
   3.876366034417066*^9}, {3.8763702037695704`*^9, 3.876370223235998*^9}, {
   3.8763702617654037`*^9, 3.876370287890833*^9}, {3.87637031899304*^9, 
   3.8763704226421003`*^9}, {3.876372466859194*^9, 3.8763727148593273`*^9}, 
   3.87637287395805*^9, {3.876373314010542*^9, 3.8763734475379353`*^9}, {
   3.908895469904133*^9, 3.908895479818421*^9}, {3.9088958949785643`*^9, 
   3.908895990593238*^9}, {3.909045519176091*^9, 3.9090456948683987`*^9}, {
   3.9090457384278917`*^9, 3.9090457669976683`*^9}, {3.9090458568215523`*^9, 
   3.909045865204747*^9}, {3.909045912381646*^9, 3.9090459181780367`*^9}, {
   3.90904618130228*^9, 3.90904619777599*^9}, {3.909053050305728*^9, 
   3.909053110180913*^9}, {3.909118635841363*^9, 3.9091186456835747`*^9}, 
   3.9091194495870132`*^9, {3.90912090878051*^9, 3.909120910757761*^9}, {
   3.9091237349435387`*^9, 3.909123743970214*^9}, {3.909127412233758*^9, 
   3.909127429625094*^9}, {3.909127616229397*^9, 3.909127628343746*^9}, {
   3.909127749363371*^9, 3.909127776360594*^9}, {3.909127808731661*^9, 
   3.909127829884324*^9}, {3.909127919593195*^9, 3.90912796074384*^9}, {
   3.909129275572638*^9, 3.909129290209281*^9}, {3.909129322279294*^9, 
   3.90912932887184*^9}, {3.909129366244096*^9, 3.909129457502822*^9}, {
   3.909129681580398*^9, 3.9091298117716837`*^9}, {3.90912990781504*^9, 
   3.909129908954626*^9}, {3.909130223167601*^9, 3.90913031102721*^9}, {
   3.909131192920203*^9, 3.9091311931318398`*^9}, 3.9091312693878202`*^9, {
   3.909131428514366*^9, 3.909131429402852*^9}, {3.909131720138736*^9, 
   3.909131721190647*^9}, {3.9091318620614977`*^9, 3.9091319883582172`*^9}, {
   3.9091321205405073`*^9, 3.909132415191695*^9}, {3.909132466038189*^9, 
   3.9091325570231447`*^9}, {3.9091327994896317`*^9, 3.909132855235454*^9}, {
   3.909132935687765*^9, 3.909132974835*^9}, {3.9091330868278847`*^9, 
   3.909133089186105*^9}, {3.909133193034812*^9, 3.9091331969695463`*^9}, {
   3.9091382428693943`*^9, 3.909138254779114*^9}, {3.909138324754868*^9, 
   3.90913832505972*^9}, {3.909139353491479*^9, 3.909139356625409*^9}, {
   3.909139656179388*^9, 3.9091396622107697`*^9}, 3.9091397554874077`*^9, {
   3.909463821377101*^9, 3.909463847025648*^9}, {3.909464185197507*^9, 
   3.909464187425727*^9}, {3.909464350353035*^9, 3.909464359240858*^9}, {
   3.9094643959770823`*^9, 3.9094644305180473`*^9}, {3.909464552726596*^9, 
   3.909465029082007*^9}, {3.909465088017254*^9, 3.909465100787607*^9}, {
   3.9094722924939823`*^9, 3.909472297493826*^9}, {3.909472357344679*^9, 
   3.9094723587757072`*^9}, {3.909483686216073*^9, 3.909483696376685*^9}, {
   3.909484193372765*^9, 3.9094841943906727`*^9}, 3.9094842362458973`*^9, 
   3.909484312431576*^9, 3.909484442131796*^9, {3.909484480929681*^9, 
   3.9094844843745947`*^9}, {3.909485096739441*^9, 3.909485102446158*^9}, {
   3.909487876470336*^9, 3.909487887418023*^9}, 3.909489231853037*^9, 
   3.9094896353075037`*^9, 3.9094905267321997`*^9, {3.909490697139591*^9, 
   3.909490812129611*^9}, {3.909490857090374*^9, 3.90949100818076*^9}, {
   3.909491493428507*^9, 3.9094914937188797`*^9}, {3.9094920040079603`*^9, 
   3.909492004179191*^9}, {3.9094921004078407`*^9, 3.9094921044669857`*^9}, {
   3.909492211661314*^9, 3.9094922243128757`*^9}, {3.90949226857759*^9, 
   3.909492274470038*^9}, {3.909493065981765*^9, 3.909493089386441*^9}, {
   3.909558235549202*^9, 3.90955824804587*^9}, {3.9095583678021717`*^9, 
   3.909558368629456*^9}, {3.909558700394555*^9, 3.909558725918673*^9}, {
   3.909559099532373*^9, 3.90955913849881*^9}, {3.909559199777603*^9, 
   3.909559210349833*^9}, {3.909559262100822*^9, 3.9095593310249567`*^9}, {
   3.909559424753283*^9, 3.9095594718473377`*^9}, {3.909559538271029*^9, 
   3.909559556478758*^9}, {3.909559642520368*^9, 3.909559646886928*^9}, {
   3.909559771269353*^9, 3.909559771424842*^9}, {3.909560096797824*^9, 
   3.9095601015169563`*^9}, {3.909560165933758*^9, 3.9095602073535337`*^9}, {
   3.909560486769554*^9, 3.909560579424049*^9}, {3.909560687680027*^9, 
   3.90956076446259*^9}, {3.909560813538208*^9, 3.909560845750979*^9}, {
   3.909560935497724*^9, 3.9095609394820967`*^9}, {3.909566217831492*^9, 
   3.9095663538381577`*^9}, {3.909567232027858*^9, 3.90956725662733*^9}, {
   3.909568334415935*^9, 3.9095684170139637`*^9}, {3.9095686197323017`*^9, 
   3.909568628842896*^9}, {3.909568670004167*^9, 3.909568675604967*^9}, {
   3.909569278755622*^9, 3.9095692865871267`*^9}, {3.90956934140061*^9, 
   3.90956952699279*^9}, {3.9095698963349457`*^9, 3.909570055076442*^9}, {
   3.909570145558877*^9, 3.909570155457074*^9}, {3.90957038275908*^9, 
   3.909570462770402*^9}, {3.909570647159958*^9, 3.909570654087204*^9}, {
   3.909570720829962*^9, 3.909570722525537*^9}, {3.909570778608079*^9, 
   3.909570782027843*^9}, {3.909570891000423*^9, 3.909570901646915*^9}, {
   3.90957095224025*^9, 3.909570958354218*^9}, {3.909571266955695*^9, 
   3.909571273252098*^9}, 3.909571418971148*^9, {3.9095714969905663`*^9, 
   3.909571498123253*^9}, {3.909571734973707*^9, 3.90957173561735*^9}, {
   3.909571804698002*^9, 3.9095718302959967`*^9}, {3.9095718709670343`*^9, 
   3.909571873221424*^9}, {3.909572087541911*^9, 3.9095720879460297`*^9}, {
   3.909572125563159*^9, 3.909572125832386*^9}, 3.909572298216345*^9, {
   3.909572721015823*^9, 3.909572732321257*^9}, {3.909572780775092*^9, 
   3.909572797962974*^9}, 3.9096425891430264`*^9, {3.90964264093499*^9, 
   3.909642676011458*^9}, 3.909642711656992*^9, {3.9096428448650703`*^9, 
   3.9096428894637136`*^9}, 3.909643814347597*^9, {3.909644341315138*^9, 
   3.909644344681724*^9}, {3.909644697144168*^9, 3.90964484270709*^9}, {
   3.909650600670163*^9, 3.909650604033711*^9}, {3.909650758042328*^9, 
   3.909650770030426*^9}, 3.909650994755755*^9, {3.9096516241651583`*^9, 
   3.909651668623176*^9}, 3.909651716869623*^9, {3.909652602405106*^9, 
   3.909652607272852*^9}, {3.909652812997746*^9, 3.9096528162785473`*^9}, {
   3.909654783595421*^9, 3.909654783931223*^9}, {3.909743307497278*^9, 
   3.909743312664481*^9}, {3.9097433670090218`*^9, 3.909743368815977*^9}, 
   3.910068644794764*^9, {3.910068695786191*^9, 3.910068696008831*^9}, 
   3.910069591978202*^9, {3.91007000156221*^9, 3.9100700020653*^9}, 
   3.9100700404040403`*^9, {3.910070442916401*^9, 3.910070450569209*^9}, 
   3.910071004328496*^9, {3.910071126594987*^9, 3.910071142921753*^9}, {
   3.9100716003333*^9, 3.910071600984288*^9}, {3.910079720101663*^9, 
   3.910079733822207*^9}, {3.91007978677386*^9, 3.910079787228986*^9}, {
   3.910079941468432*^9, 3.910079941949424*^9}, {3.910082004333706*^9, 
   3.910082023429393*^9}, {3.910083964564073*^9, 3.9100840137068787`*^9}, 
   3.9100840577883177`*^9, {3.910084112828896*^9, 3.9100841455489397`*^9}, {
   3.9100842282075567`*^9, 3.9100842365738487`*^9}, {3.910086348501678*^9, 
   3.9100863510668*^9}, {3.910087067555541*^9, 3.910087077813725*^9}, {
   3.910087559394*^9, 3.9100875621701183`*^9}, {3.9100878297375927`*^9, 
   3.9100878422131166`*^9}, {3.910088354399706*^9, 3.910088355180942*^9}, {
   3.910088466097865*^9, 3.910088476767591*^9}, {3.9100886530335903`*^9, 
   3.910088656450973*^9}, {3.910089118206748*^9, 3.910089175040078*^9}, 
   3.910089445946666*^9, {3.910089701112033*^9, 3.910089706894108*^9}, {
   3.9117393526117277`*^9, 3.911739354823017*^9}, {3.9129338917031*^9, 
   3.9129339198399143`*^9}, {3.912934032436591*^9, 3.912934035019085*^9}, {
   3.912935690940413*^9, 3.91293570658311*^9}, {3.912935868733985*^9, 
   3.912935869390502*^9}, {3.912935930712997*^9, 3.912935988758211*^9}, {
   3.9129377228907747`*^9, 3.9129377289475803`*^9}, {3.9129379377852993`*^9, 
   3.9129379381107693`*^9}, {3.912938096960178*^9, 3.912938120144046*^9}, {
   3.912939070845418*^9, 3.912939102724906*^9}, {3.9129393942056913`*^9, 
   3.9129397484223633`*^9}, {3.91335841702947*^9, 3.913358429225912*^9}, {
   3.913358548962554*^9, 3.9133585508135643`*^9}, {3.913367590081094*^9, 
   3.913367628823064*^9}, {3.91336793349933*^9, 3.913367957092596*^9}, {
   3.913368147755267*^9, 3.9133681484139967`*^9}, {3.913369454017041*^9, 
   3.913369455530205*^9}, {3.913369601976869*^9, 3.9133696032342577`*^9}, {
   3.913369775472025*^9, 3.913369776061199*^9}, {3.913370812827723*^9, 
   3.9133708233107452`*^9}, {3.913370952135738*^9, 3.913370969918038*^9}, {
   3.913371588890668*^9, 3.9133715959858723`*^9}, {3.913372218842553*^9, 
   3.913372226471175*^9}, {3.9133823781650352`*^9, 3.913382454136067*^9}, {
   3.9133828046444597`*^9, 3.913382892848523*^9}, {3.913383110998054*^9, 
   3.9133831292995872`*^9}, {3.9133836229364223`*^9, 3.913383625694936*^9}, {
   3.9134660369546137`*^9, 3.913466040400835*^9}, {3.9134698527371683`*^9, 
   3.9134698897703133`*^9}, {3.913618552401861*^9, 3.913618574874962*^9}, {
   3.913618691076417*^9, 3.9136186933401203`*^9}, {3.9136191810610113`*^9, 
   3.913619206485083*^9}, {3.913621102876234*^9, 3.9136211148950987`*^9}, {
   3.913621151178483*^9, 3.913621156512554*^9}, 3.9136239355884047`*^9, {
   3.913624088574498*^9, 3.913624101505533*^9}, {3.9136367432983017`*^9, 
   3.9136367504087048`*^9}, 3.9136372733549213`*^9, {3.913637312609544*^9, 
   3.913637348789485*^9}, {3.913639510618018*^9, 3.9136395314256268`*^9}, {
   3.913640354939891*^9, 3.913640378343233*^9}, {3.913699124625556*^9, 
   3.913699140090209*^9}, {3.913700054317223*^9, 3.913700068863371*^9}, {
   3.9137164668384333`*^9, 3.9137164695033712`*^9}, 3.913716608441228*^9, {
   3.913716998175128*^9, 3.913717007111155*^9}, {3.9137170382914343`*^9, 
   3.913717061664611*^9}, {3.913717124974519*^9, 3.913717169151951*^9}, {
   3.9137174770909348`*^9, 3.913717479698019*^9}, {3.913718000618469*^9, 
   3.913718020001635*^9}, {3.913718054006853*^9, 3.9137180572568274`*^9}, {
   3.913718243720043*^9, 3.913718244738245*^9}, {3.9137199659576406`*^9, 
   3.913719966336835*^9}, {3.9137201761436777`*^9, 3.913720182717828*^9}, {
   3.9137269879874573`*^9, 3.9137270130695877`*^9}, {3.913727496607542*^9, 
   3.913727510172948*^9}, {3.913727748359687*^9, 3.913727755563202*^9}, {
   3.913731522346368*^9, 3.913731526359559*^9}, {3.9137337824416447`*^9, 
   3.913733800535391*^9}, {3.9137338446725597`*^9, 3.913733844874507*^9}, {
   3.913733891824299*^9, 3.913734051807077*^9}, {3.913734400744565*^9, 
   3.913734499678835*^9}, {3.9138734679713984`*^9, 3.913873506834702*^9}, {
   3.913873932860169*^9, 3.9138739343585978`*^9}, {3.9138740333365383`*^9, 
   3.913874034152656*^9}, {3.9138741850263453`*^9, 3.9138741937546883`*^9}, {
   3.913874483176993*^9, 3.913874485473034*^9}, {3.913875906676311*^9, 
   3.91387590787463*^9}, {3.913876178979463*^9, 3.913876179482545*^9}, {
   3.913876486329836*^9, 3.913876495968535*^9}, {3.91388704506947*^9, 
   3.913887045620677*^9}, {3.913888251341357*^9, 3.913888256753045*^9}, {
   3.913888345417659*^9, 3.913888351070015*^9}, {3.9138912105174513`*^9, 
   3.913891211431457*^9}, {3.913895850777605*^9, 3.913895853693816*^9}, {
   3.913896234924652*^9, 3.913896241125181*^9}, {3.913896915389698*^9, 
   3.9138969159708033`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b0ce1a5a-86b3-4e8c-a1fa-fdef13b32ee8"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Invading", " ", "male", " ", "only", " ", "care", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"cm", " ", "=", " ", 
      RowBox[{"x", " ", "axis"}]}], ",", " ", 
     RowBox[{"cf", "=", "0.0"}]}], " ", ")"}], " ", "into", " ", "female", 
   " ", "only", " ", "care", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"cm", "=", " ", "0.0"}], ",", " ", 
     RowBox[{"cf", "=", " ", "0.7"}]}], ")"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.90889603411758*^9, 3.908896085949711*^9}, 
   3.90904587595161*^9, {3.90904620169518*^9, 3.909046208843329*^9}, {
   3.9090516950533743`*^9, 3.90905169591794*^9}, {3.909052908610387*^9, 
   3.9090529331208467`*^9}, 3.9090529774895067`*^9, {3.909053141909769*^9, 
   3.909053144147966*^9}, {3.909122509645183*^9, 3.909122563554757*^9}, {
   3.909122644022872*^9, 3.909122666563319*^9}, {3.90912283975117*^9, 
   3.909122859436953*^9}, {3.909123111772064*^9, 3.9091231603285227`*^9}, {
   3.909123343246297*^9, 3.90912347576569*^9}, 3.909123552115676*^9, {
   3.909123770442039*^9, 3.9091238018060503`*^9}, {3.909124146830804*^9, 
   3.909124150465929*^9}, {3.9091244210930347`*^9, 3.909124440639333*^9}, {
   3.9091245410443907`*^9, 3.909124596374696*^9}, {3.909124740524122*^9, 
   3.9091248230589113`*^9}, {3.909124884291259*^9, 3.9091250640602007`*^9}, {
   3.9091256732079277`*^9, 3.909125966433518*^9}, {3.909126662721047*^9, 
   3.909126703613077*^9}, {3.909126751955954*^9, 3.909126797875037*^9}, {
   3.909127175378942*^9, 3.9091271814298553`*^9}, {3.909127371457202*^9, 
   3.909127373120178*^9}, {3.910070945068103*^9, 3.9100709911567793`*^9}, {
   3.910086946832859*^9, 3.91008696319633*^9}, {3.910087859969202*^9, 
   3.9100879040425386`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"e3625209-14b1-4e71-8063-043d237357fe"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.867582802496292*^9, 3.86758280746318*^9}, {
   3.876365187521549*^9, 3.8763653089117613`*^9}, {3.8763654113599777`*^9, 
   3.876365491239771*^9}, {3.876365530002795*^9, 3.876365584954257*^9}, {
   3.876365629354207*^9, 3.876365652327098*^9}, {3.8763658940867987`*^9, 
   3.87636593960843*^9}, {3.87636603904093*^9, 3.876366045016357*^9}, {
   3.876370305755859*^9, 3.876370310510063*^9}, {3.876372323659382*^9, 
   3.876372456728181*^9}, {3.8763727329593554`*^9, 3.876372854619184*^9}, {
   3.876372887216804*^9, 3.876372911263741*^9}, {3.876373464748901*^9, 
   3.87637351258294*^9}, {3.90889558398899*^9, 3.908895794763907*^9}, {
   3.90889583415838*^9, 3.9088958547209*^9}, 3.9088959946146793`*^9, {
   3.908896120879635*^9, 3.908896148171297*^9}, {3.9089642798080053`*^9, 
   3.908964299876936*^9}, 3.908964448614705*^9, {3.908964880200679*^9, 
   3.908964950390421*^9}, {3.908964981847706*^9, 3.9089650351567717`*^9}, {
   3.908965095446425*^9, 3.908965099352847*^9}, {3.908965136354576*^9, 
   3.9089651614360037`*^9}, {3.90896762333433*^9, 3.9089677624102573`*^9}, {
   3.9089678376973743`*^9, 3.90896783824471*^9}, {3.9089679587799788`*^9, 
   3.9089679636578093`*^9}, {3.90896802069109*^9, 3.908968134610978*^9}, {
   3.908968175996366*^9, 3.908968268566957*^9}, {3.9089683089938107`*^9, 
   3.9089683784614887`*^9}, {3.908968912594202*^9, 3.908968920343251*^9}, {
   3.9089689628668947`*^9, 3.908969010493004*^9}, {3.909044909065531*^9, 
   3.909044970390345*^9}, {3.909045018823307*^9, 3.909045117634796*^9}, {
   3.9090451765372343`*^9, 3.9090452681194277`*^9}, {3.909045316417264*^9, 
   3.909045357282549*^9}, {3.909045827903496*^9, 3.909045839003553*^9}, 
   3.909045877935659*^9, {3.909051033592081*^9, 3.909051034676757*^9}, {
   3.909051534986986*^9, 3.909051687068761*^9}, 3.9090517178716507`*^9, {
   3.909051929145081*^9, 3.909051951622806*^9}, {3.909052071654983*^9, 
   3.909052174637105*^9}, {3.9090524433011827`*^9, 3.909052579589219*^9}, {
   3.909052668382412*^9, 3.909052669855453*^9}, {3.909052841608871*^9, 
   3.9090528582536077`*^9}, {3.909053017674365*^9, 3.909053018069331*^9}, {
   3.9090531544990396`*^9, 3.9090532051729383`*^9}, {3.909119810361538*^9, 
   3.909119825355625*^9}, {3.909120827819696*^9, 3.909120835400085*^9}, 
   3.909121025558017*^9, {3.909121101842772*^9, 3.9091211044670553`*^9}, {
   3.909121463578994*^9, 3.909121493160789*^9}, {3.909121616087665*^9, 
   3.909121626252664*^9}, {3.909122181511477*^9, 3.909122200452054*^9}, {
   3.909122695245036*^9, 3.909122697023673*^9}, {3.909122927920082*^9, 
   3.909122928225274*^9}, {3.9091229919782753`*^9, 3.909123010524692*^9}, 
   3.9091230777008247`*^9, {3.9091235725131683`*^9, 3.909123631417046*^9}, {
   3.9091238138812733`*^9, 3.9091238623269*^9}, {3.9091259777637577`*^9, 
   3.90912597927236*^9}, {3.909126842290201*^9, 3.909126846609707*^9}, {
   3.9091270875337152`*^9, 3.909127089229388*^9}, {3.909127278833186*^9, 
   3.9091272793528757`*^9}, {3.909127451981271*^9, 3.9091274712829742`*^9}, {
   3.909127969773911*^9, 3.909128024177134*^9}, {3.90912809637635*^9, 
   3.909128137867532*^9}, {3.9091329203086557`*^9, 3.909132921319969*^9}, {
   3.9091331039063187`*^9, 3.909133104033222*^9}, {3.909138227482333*^9, 
   3.909138231924075*^9}, {3.909138278821526*^9, 3.909138285953973*^9}, {
   3.909138615981427*^9, 3.90913871962127*^9}, 3.909138823089026*^9, {
   3.909138935842955*^9, 3.909138947361594*^9}, {3.9091389774177017`*^9, 
   3.909138988789146*^9}, {3.9091392006554337`*^9, 3.909139200848785*^9}, {
   3.90913929011852*^9, 3.9091392903767138`*^9}, {3.909139783870163*^9, 
   3.909139867133595*^9}, {3.909139931080324*^9, 3.909139932246121*^9}, {
   3.909232459981176*^9, 3.909232569042557*^9}, {3.909465646737599*^9, 
   3.90946575061458*^9}, {3.9094721135656567`*^9, 3.9094721146165657`*^9}, {
   3.9094839509984426`*^9, 3.909483992320175*^9}, {3.9094843552847013`*^9, 
   3.909484357601796*^9}, {3.909484844769331*^9, 3.90948487713523*^9}, {
   3.9094849799615173`*^9, 3.9094849929132433`*^9}, {3.909488014817483*^9, 
   3.909488017026553*^9}, {3.9094881153840427`*^9, 3.9094881428923683`*^9}, 
   3.909488187298833*^9, 3.909488620212367*^9, 3.909488787951972*^9, {
   3.909488954314433*^9, 3.909488966756877*^9}, {3.909489036922823*^9, 
   3.909489039935894*^9}, {3.909489207060193*^9, 3.909489208062731*^9}, {
   3.9094893856617193`*^9, 3.9094894019242*^9}, {3.90948948039362*^9, 
   3.90948950115835*^9}, {3.909489626059032*^9, 3.9094896280253973`*^9}, {
   3.90948976289699*^9, 3.909489799401103*^9}, {3.909490193867968*^9, 
   3.909490221597674*^9}, {3.909490279664481*^9, 3.9094903384247007`*^9}, {
   3.909490556871965*^9, 3.909490560529818*^9}, {3.909490618672599*^9, 
   3.909490626107177*^9}, 3.909491065719026*^9, {3.9094911361047287`*^9, 
   3.9094912276382523`*^9}, {3.909491406017742*^9, 3.909491465826223*^9}, {
   3.909492369993598*^9, 3.909492372932008*^9}, 3.909492451235536*^9, 
   3.909492711549428*^9, {3.909492837363573*^9, 3.9094929012569437`*^9}, {
   3.9094929473725653`*^9, 3.909492955693287*^9}, {3.909493042835495*^9, 
   3.909493050804055*^9}, {3.909558565242301*^9, 3.9095586558601513`*^9}, {
   3.909558783937598*^9, 3.909558785842354*^9}, {3.909559009317732*^9, 
   3.909559012368854*^9}, {3.9095595184859*^9, 3.909559520720848*^9}, {
   3.909559597068994*^9, 3.909559597614726*^9}, {3.909559682456257*^9, 
   3.9095597816207857`*^9}, {3.909559836002701*^9, 3.9095598641571302`*^9}, {
   3.90955990789686*^9, 3.909559961396537*^9}, {3.909560001834573*^9, 
   3.909560025667754*^9}, {3.909560120735648*^9, 3.909560121616373*^9}, {
   3.909560893014979*^9, 3.909560899469617*^9}, {3.9095672055789833`*^9, 
   3.909567206772333*^9}, {3.909570069196641*^9, 3.909570087498982*^9}, {
   3.909570327081504*^9, 3.909570333072979*^9}, {3.909570475043291*^9, 
   3.909570476369671*^9}, {3.909571225914147*^9, 3.909571229654943*^9}, {
   3.909572448786346*^9, 3.9095725554979887`*^9}, {3.909572599476411*^9, 
   3.909572663164469*^9}, {3.909572763606227*^9, 3.9095727735303297`*^9}, {
   3.909642154243425*^9, 3.909642171919454*^9}, {3.90964234086755*^9, 
   3.909642342118575*^9}, {3.9096425668497543`*^9, 3.909642571576641*^9}, {
   3.909642783971336*^9, 3.909642785286396*^9}, {3.909643476639627*^9, 
   3.909643538434928*^9}, {3.9096435822530413`*^9, 3.909643586583612*^9}, {
   3.9096436196696*^9, 3.9096436222324963`*^9}, 3.909643688060443*^9, {
   3.909643759013298*^9, 3.9096437702048798`*^9}, {3.909644148014978*^9, 
   3.9096442253450947`*^9}, {3.9096448785263233`*^9, 3.9096450301197557`*^9}, 
   3.909645063751563*^9, {3.9096454762999353`*^9, 3.9096454764413767`*^9}, {
   3.9096506202620373`*^9, 3.909650672243618*^9}, {3.909650870758045*^9, 
   3.909650934346117*^9}, {3.909651099330297*^9, 3.909651100034396*^9}, {
   3.90965113764603*^9, 3.909651155731629*^9}, {3.9096513351038637`*^9, 
   3.909651417317918*^9}, {3.909651652344548*^9, 3.909651652799368*^9}, {
   3.909651683036783*^9, 3.9096516967189503`*^9}, {3.9096520122401733`*^9, 
   3.909652066080872*^9}, {3.909652215838025*^9, 3.909652252124693*^9}, {
   3.909652301093237*^9, 3.909652321875885*^9}, {3.909652367362664*^9, 
   3.909652395622404*^9}, {3.909652439196204*^9, 3.909652439821986*^9}, {
   3.909652472783415*^9, 3.9096524863441772`*^9}, {3.90965253594909*^9, 
   3.909652586423394*^9}, {3.909652635732217*^9, 3.9096526619450417`*^9}, 
   3.9096528180276117`*^9, {3.909743286119113*^9, 3.909743345510755*^9}, {
   3.909743390910962*^9, 3.909743401421451*^9}, {3.909743553565791*^9, 
   3.909743651511676*^9}, {3.909821492460824*^9, 3.9098214927379208`*^9}, {
   3.909822362204501*^9, 3.9098223700823727`*^9}, {3.909822639901805*^9, 
   3.909822833317375*^9}, {3.909822978530252*^9, 3.909822981986949*^9}, {
   3.9098249828444767`*^9, 3.909825003923752*^9}, {3.9098250343229427`*^9, 
   3.909825036852215*^9}, {3.9098251033196783`*^9, 3.909825122688155*^9}, {
   3.909825440238947*^9, 3.9098254734408283`*^9}, {3.9098255492070093`*^9, 
   3.909825690916271*^9}, {3.90982604610631*^9, 3.9098261885047207`*^9}, {
   3.909826231401085*^9, 3.90982625656993*^9}, {3.909826353103404*^9, 
   3.909826353646585*^9}, 3.90982667042904*^9, {3.909826773690216*^9, 
   3.9098267772175493`*^9}, {3.909826825637768*^9, 3.909826882671645*^9}, {
   3.9100687463366413`*^9, 3.910068753318802*^9}, {3.9100700129330072`*^9, 
   3.910070017657145*^9}, {3.91007008128728*^9, 3.910070095941669*^9}, {
   3.91007012670693*^9, 3.910070136565147*^9}, {3.910070420503755*^9, 
   3.910070455824315*^9}, {3.9100704916010942`*^9, 3.910070524959934*^9}, {
   3.910070933392866*^9, 3.910070936030497*^9}, {3.910071050710795*^9, 
   3.9100710541292343`*^9}, {3.910071146804901*^9, 3.9100711516320677`*^9}, {
   3.910081978047077*^9, 3.9100819908861933`*^9}, {3.9100822019377003`*^9, 
   3.9100822327836723`*^9}, {3.9100823135175858`*^9, 
   3.9100823148761673`*^9}, {3.910082354583996*^9, 3.910082355612618*^9}, {
   3.9100825034950027`*^9, 3.910082508935239*^9}, {3.9100828005822067`*^9, 
   3.9100828223531923`*^9}, {3.910083222674898*^9, 3.9100832251712112`*^9}, {
   3.910084019911825*^9, 3.91008402096885*^9}, {3.910084066536165*^9, 
   3.910084074172805*^9}, {3.910084153183857*^9, 3.9100841658011436`*^9}, {
   3.910084265377491*^9, 3.910084271856206*^9}, 3.910084398121896*^9, {
   3.910084788675034*^9, 3.9100847890615873`*^9}, {3.910086156825131*^9, 
   3.910086162139084*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"13b9a033-e19c-4159-9969-c33a027ea7ff"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.876365858071969*^9, 3.876365865162903*^9}, 
   3.90949021236071*^9},
 CellLabel->
  "In[118]:=",ExpressionUUID->"a8f9d536-634c-4df7-927f-f4f7acadbfd5"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.910071655969591*^9, 3.9100717497609987`*^9}, {
   3.910071799449203*^9, 3.9100718199742947`*^9}, {3.910071869146082*^9, 
   3.910071902628462*^9}, {3.910081959631217*^9, 3.910081972578842*^9}, {
   3.9100822170264463`*^9, 3.910082228708962*^9}, {3.910082320057397*^9, 
   3.91008235069344*^9}, {3.91008251324044*^9, 3.9100825187496157`*^9}, {
   3.910082794983672*^9, 3.910082826400421*^9}, {3.910083210392108*^9, 
   3.910083217441131*^9}, {3.9100835074426727`*^9, 3.910083537170846*^9}, {
   3.910083630787696*^9, 3.910083631426155*^9}, {3.910083676065803*^9, 
   3.9100836777982473`*^9}, {3.9100840308234377`*^9, 3.910084043389678*^9}, {
   3.910084100781448*^9, 3.9100841020105963`*^9}, {3.910084158024926*^9, 
   3.9100841616253366`*^9}, {3.910084279493825*^9, 3.910084285880643*^9}, 
   3.910084393660698*^9, {3.910084794841468*^9, 3.910084795234508*^9}, 
   3.910086153048222*^9, {3.9100869006826572`*^9, 3.910086937765542*^9}, {
   3.910086971556676*^9, 3.910086990613687*^9}, {3.9100879144272842`*^9, 
   3.910087921627408*^9}, {3.910088092988524*^9, 3.910088093396471*^9}, {
   3.910088333969204*^9, 3.9100883404543867`*^9}, {3.91008918493604*^9, 
   3.910089193908553*^9}, {3.9129342962542257`*^9, 3.912934305102132*^9}, {
   3.913361019843252*^9, 3.913361029354863*^9}, {3.913361259426999*^9, 
   3.913361292930023*^9}, {3.913463558948056*^9, 3.913463614385141*^9}, {
   3.91346542352071*^9, 3.913465434157695*^9}, {3.913465777140767*^9, 
   3.9134657880383053`*^9}, {3.913469563789975*^9, 3.913469571388216*^9}, {
   3.913620656537237*^9, 3.9136206623405724`*^9}, {3.9136231057661333`*^9, 
   3.9136231261379633`*^9}, {3.913624059416258*^9, 3.913624065566559*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"29b4fc3c-bbec-489f-b144-10443ffdeba3"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.910084610705565*^9, 3.9100846305836678`*^9}, {
   3.910084664099334*^9, 3.910084668367947*^9}, 3.910086149842216*^9},
 CellLabel->
  "In[120]:=",ExpressionUUID->"940c6407-f07b-474e-8235-fea91dd5baf9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"res2hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"mum", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res2hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res2hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res2hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", 
      "\"\<Graph of fitness (\[Lambda]) against mum\>\""}], ",", "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<mum\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res2hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res2hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientmum", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientmum", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res3hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"muf", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res3hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res3hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res3hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against muf\>\""}], ",",
      "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<muf\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res3hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res3hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientmuf", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientmuf", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res19hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"mm", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res19hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res19hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res19hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against mm\>\""}], ",", 
     "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<mm\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res19hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res19hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientmm", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientmm", " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res20hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"mf", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res20hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res20hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res20hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against mf\>\""}], ",", 
     "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<mf\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res20hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res20hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientmf", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientmf", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res4hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"sigjm", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res4hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res4hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res4hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against sigjm\>\""}], 
     ",", "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<sigjm\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res4hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res4hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientsigjm", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientsigjm", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res5hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"sigjf", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res5hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res5hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res5hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against sigjf\>\""}], 
     ",", "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<sigjf\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res5hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res5hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientsigjf", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientsigjf", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res6hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"taum", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res6hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res6hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res6hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against taum\>\""}], 
     ",", "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<taum\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res6hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res6hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficienttaum", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficienttaum", "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res7hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"tauf", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res7hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res7hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res7hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against tauf\>\""}], 
     ",", "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<tauf\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res7hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res7hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficienttauf", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficienttauf", "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res8hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"wm", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res8hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res8hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res8hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against wm\>\""}], ",", 
     "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<wm\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res8hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res8hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientwm", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientwm", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res9hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"wf", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res9hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res9hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res9hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against wf\>\""}], ",", 
     "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<wf\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res9hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res9hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientwf", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientwf", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res10hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"k", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res10hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res10hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res10hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against k\>\""}], ",", 
     "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<k\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], "]"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res10hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res10hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientk", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientk", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res11hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rr", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res11hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res11hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res11hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against rr\>\""}], ",", 
     "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<rr\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res11hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res11hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientrr", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientrr", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res12hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"am", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res12hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res12hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res12hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against am\>\""}], ",", 
     "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<am\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res12hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res12hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientam", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientam", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res13hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"af", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res13hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res13hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res13hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against af\>\""}], ",", 
     "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<af\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res13hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res13hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientaf", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientaf", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res14hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"esm", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res14hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res14hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res14hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against esm\>\""}], ",",
      "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<esm\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res14hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res14hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientesm", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientesm", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res15hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"esf", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res15hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res15hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res15hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against esf\>\""}], ",",
      "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<esf\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res15hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res15hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientesf", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientesf", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res16hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"AR", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res16hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res16hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res16hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", "\"\<Fitness (\[Lambda]) against AR\>\""}], ",", 
     "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<AR\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res16hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res16hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientAR", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientAR", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res17hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"cm", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res17hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res17hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res17hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", 
      "\"\<Graph of fitness (\[Lambda]) against cm\>\""}], ",", "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<cm\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res17hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res17hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientcm", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientcm", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res18hpm2", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"currentAR", " ", "=", " ", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentAR", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"z", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"\[Lambda]", "/.", " ", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Det", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Lambda]", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"em", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"muf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"ef", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], " ", "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"esf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"rr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AR", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/", 
                    RowBox[{"k", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"emm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "*", 
                    RowBox[{"sigjm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"taum", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}], " ", "-", 
                    " ", 
                    RowBox[{
                    RowBox[{"emf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"sigjf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"\[Lambda]", "*", 
                    RowBox[{"tauf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], ",", " ", 
                    RowBox[{"\[Lambda]", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wm", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"am", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", " ", 
                    RowBox[{
                    RowBox[{"wf", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"af", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
                    "}"}], "]"}], " ", "==", "0"}], ",", " ", "\[Lambda]"}], 
                "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "currentAR"}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"res18hpm2", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"res18hpm2", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "=!=", " ", "Nothing"}], " ", "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"res18hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"PointSize", "[", "Small", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "->", 
      "\"\<Graph of fitness (\[Lambda]) against z\>\""}], ",", "\n", 
     RowBox[{"AxesLabel", " ", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<z\>\"", ",", " ", "\"\<\[Lambda]\>\""}], "}"}]}]}], "]"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"res18hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", " ", "=", " ", 
     RowBox[{"res18hpm2", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"correlationcoefficientz", " ", "=", 
     RowBox[{"Correlation", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "correlationcoefficientz", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"coefTable", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<mum\>\"", ",", "correlationcoefficientmum"}], "}"}], ",",
        " ", 
       RowBox[{"{", 
        RowBox[{"\"\<muf\>\"", ",", "correlationcoefficientmuf"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<mm\>\"", ",", " ", "correlationcoefficientmm"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\"\<mf\>\"", ",", " ", "correlationcoefficientmf"}], "}"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<sigjm\>\"", ",", " ", "correlationcoefficientsigjm"}], 
        "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<sigjf\>\"", ",", " ", "correlationcoefficientsigjf"}], 
        "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<taum\>\"", ",", " ", "correlationcoefficienttaum"}], 
        "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<tauf\>\"", ",", " ", "correlationcoefficienttauf"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<wm\>\"", ",", " ", "correlationcoefficientwm"}], "}"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<wf\>\"", ",", " ", "correlationcoefficientwf"}], "}"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<k\>\"", ",", " ", "correlationcoefficientk"}], "}"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<rr\>\"", ",", " ", "correlationcoefficientrr"}], "}"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<am\>\"", ",", " ", "correlationcoefficientam"}], "}"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<af\>\"", ",", " ", "correlationcoefficientaf"}], "}"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<esm\>\"", ",", " ", "correlationcoefficientesm"}], "}"}],
        ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<esf\>\"", ",", " ", "correlationcoefficientesf"}], "}"}],
        ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<AR\>\"", ",", " ", "correlationcoefficientAR"}], "}"}]}],
       "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"formattedTable", " ", "=", " ", 
     RowBox[{"MapAt", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"NumericQ", "@", "#"}], ",", " ", 
          RowBox[{"NumberForm", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"5", ",", "4"}], "}"}]}], "]"}], ",", "#"}], "]"}], 
        "&"}], ",", "\[IndentingNewLine]", "coefTable", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"All", ",", "2"}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Prepend", "[", 
      RowBox[{"formattedTable", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Parameter\>\"", ",", "\"\<Correlation\>\""}], "}"}]}], 
      "]"}], ",", "\[IndentingNewLine]", " ", 
     RowBox[{"Frame", " ", "->", "All"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"Alignment", " ", "->", " ", 
      RowBox[{"{", "\"\<.\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Dividers", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", "->", "True"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2", "->", "True"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.910084637592304*^9, 3.910084746262699*^9}, {
   3.91008488297657*^9, 3.910084895645287*^9}, {3.910084938455619*^9, 
   3.910084955270483*^9}, {3.9100852486195087`*^9, 3.91008524922018*^9}, {
   3.9100853907311974`*^9, 3.9100855604002867`*^9}, {3.910085598287456*^9, 
   3.9100856739346933`*^9}, {3.9100858405669193`*^9, 3.910085842020763*^9}, {
   3.9100860914727793`*^9, 3.9100861398213863`*^9}, {3.910086389323453*^9, 
   3.910086389464012*^9}, {3.910086447767417*^9, 3.910086484769014*^9}, {
   3.9100870097416973`*^9, 3.910087010491302*^9}, {3.910087925831806*^9, 
   3.910087979880465*^9}, {3.9100891990947037`*^9, 3.9100893721423693`*^9}, {
   3.912934176799821*^9, 3.912934282345509*^9}, {3.912939912174695*^9, 
   3.912939964395959*^9}, {3.912940017159252*^9, 3.912940085661339*^9}, {
   3.913360435793124*^9, 3.913360523769642*^9}, {3.9133606383829317`*^9, 
   3.913360759677944*^9}, {3.913361306225037*^9, 3.913361441163075*^9}, {
   3.913361502767931*^9, 3.913361746557795*^9}, {3.9133617846108932`*^9, 
   3.913361801691339*^9}, 3.913362417717291*^9, {3.913362654442567*^9, 
   3.91336277913297*^9}, {3.913363055571697*^9, 3.9133630695740356`*^9}, {
   3.913363190140608*^9, 3.913363371075045*^9}, {3.913363763145679*^9, 
   3.913363793230585*^9}, {3.913363824000271*^9, 3.9133638698641357`*^9}, {
   3.913363912161188*^9, 3.913363919267686*^9}, {3.913363982970212*^9, 
   3.913364037162003*^9}, {3.91336443869029*^9, 3.913364473512142*^9}, {
   3.913364906970591*^9, 3.913364948208623*^9}, {3.9133835942696867`*^9, 
   3.913383598696733*^9}, {3.9134632698740892`*^9, 3.913463270921114*^9}, {
   3.913619609037056*^9, 3.913619640319098*^9}, {3.913620869715728*^9, 
   3.913620920554981*^9}, {3.913621078368487*^9, 3.913621085364935*^9}, {
   3.913621185123988*^9, 3.913621194029666*^9}, {3.9136216122652063`*^9, 
   3.913621631583465*^9}, {3.913621692294621*^9, 3.913621798436561*^9}, {
   3.9136218840662727`*^9, 3.913621889276802*^9}, {3.9136223036872177`*^9, 
   3.913622307464291*^9}, {3.913622806168367*^9, 3.9136228207024097`*^9}, {
   3.913622994320932*^9, 3.913622994932942*^9}, {3.913623071774*^9, 
   3.913623115074285*^9}, {3.9136239732683563`*^9, 3.9136240394606*^9}, {
   3.913624326823976*^9, 3.9136243403099422`*^9}, {3.913624641984744*^9, 
   3.913624802490237*^9}, {3.913625176115745*^9, 3.9136253402193737`*^9}, {
   3.913626906730195*^9, 3.913626932415944*^9}, {3.913627044203185*^9, 
   3.9136270451869926`*^9}, {3.91371720476584*^9, 3.913717210840498*^9}, {
   3.913720268138734*^9, 3.913720268795713*^9}, {3.913727732809627*^9, 
   3.913727733175383*^9}, {3.913732568929482*^9, 3.9137325699137487`*^9}, {
   3.913734536850127*^9, 3.9137345396012983`*^9}, {3.913873518950757*^9, 
   3.913873519609511*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"05f0c121-2440-46d1-9cf0-6f10e502826d"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
xSUnjkAZBx8Qe4lNXePqRtYfs5QcqRiQlLdoXA/og4tnuvF3DVv4bxO0r51v
htbj66nNNCaguvBk5VlZO+p2lcjJedPB9O7FvaLiAaznvy9J4AuEy6kn8sTL
vVD457O1EhSICp1UIj61Ubw+q1mjP58AeUkPn0tc46D5PnA74GoQGJmO116c
SYR3+8V3yqspWLikvnv2Recen7EOEYcE4uTvqDk+zxYEvlAskPtVgyBip84E
024oOYpeM1EuwqC4fhatVTceihVwB0ZZgWliN2airgTv3P+SLBCJgXjoZrA+
6969mds/7MvtDo61nFcfckYgQfdaUdTYAdMXb97LfNAGL03B5GnyRLwTnd90
qhmFVP7X8NtksbjB6e12Tq4d3QPL56jfeSLRt0Rv3WIYGY8jg4dqjeH09qkn
q0syonNaLxzOTwJrM//jAc9y1D00lKrl3uNlq91r607DoHz24Oq1+kzIDM0E
FAj2Q6blwMf4DGUstt23HlaMBQ2pzo7qJy+43PU8SEfZgNDc5r6oeQP4LOu8
Ol5et+fnouwnudJg/u8Rvcmhasi95TAymEgg8DFw25uHVSBx1DNPsT+REH0l
NMvUvA/1jR89c89kQMRA6rXpo2FoHq2ejDYKx0KGK8W/O1m4u2s+dPJ5Hdzq
FmabLeuxxizxKlajFK19zyr+6TfiWsjiq93aRLSy616XEIvCzMMvKfSlSbjQ
p/Xpws0qTF52I2wzxOFHd9+Pa/81482dxP/CdPNg9uBLZOTyGM5t5QwvLlgR
thr2fWDX6APxkZATIS4JoMsKmva1K4NKMEOKv3caojjImwv0xhDU5WNd8DwL
q7V9PyfpexHxrTD5V146xI0dvjQ2DWOVpjbJa8UBf7fKrXuHG5HkvPu52csf
nzzGL55VGENxZOqTwyaxqE3fdVk8Pg4VnnX3XbqnSJf53vBFoRZFV5a+R68F
wWpZakzxWQUirrhggTwExxuYC86pjOEQbVFdYk4U3DX4HR0+DWDtDrugf2o4
Co9Hh8gqDIGbMvMd967fXm4SH7cHl6JncqPJ6KgT2DIf9ZxVGMf7UqdPFm/L
kejFaKvd0YV9NUFEBnqFaNDQjzV8NIhoduHhgBvJ0Bbrdnu4NYSnGyZxKX3u
qPO0WBL7O4zPx/hTXk9qEf5+ef5R70w9dn+HmPTyeSCe/1R9l/gQ8oxM2hcC
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
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
xSUnjkAZBx8Qe4lNXePqRtYfs5QcqRiQlLdoXA/og4tnuvF3DVv4bxO0r51v
htbj66nNNCaguvBk5VlZO+p2lcjJedPB9O7FvaLiAaznvy9J4AuEy6kn8sTL
vVD457O1EhSICp1UIj61Ubw+q1mjP58AeUkPn0tc46D5PnA74GoQGJmO116c
SYR3+8V3yqspWLikvnv2Recen7EOEYcE4uTvqDk+zxYEvlAskPtVgyBip84E
024oOYpeM1EuwqC4fhatVTceihVwB0ZZgWliN2airgTv3P+SLBCJgXjoZrA+
6969mds/7MvtDo61nFcfckYgQfdaUdTYAdMXb97LfNAGL03B5GnyRLwTnd90
qhmFVP7X8NtksbjB6e12Tq4d3QPL56jfeSLRt0Rv3WIYGY8jg4dqjeH09qkn
q0syonNaLxzOTwJrM//jAc9y1D00lKrl3uNlq91r607DoHz24Oq1+kzIDM0E
FAj2Q6blwMf4DGUstt23HlaMBQ2pzo7qJy+43PU8SEfZgNDc5r6oeQP4LOu8
Ol5et+fnouwnudJg/u8Rvcmhasi95TAymEgg8DFw25uHVSBx1DNPsT+REH0l
NMvUvA/1jR89c89kQMRA6rXpo2FoHq2ejDYKx0KGK8W/O1m4u2s+dPJ5Hdzq
FmabLeuxxizxKlajFK19zyr+6TfiWsjiq93aRLSy616XEIvCzMMvKfSlSbjQ
p/Xpws0qTF52I2wzxOFHd9+Pa/81482dxP/CdPNg9uBLZOTyGM5t5QwvLlgR
thr2fWDX6APxkZATIS4JoMsKmva1K4NKMEOKv3caojjImwv0xhDU5WNd8DwL
q7V9PyfpexHxrTD5V146xI0dvjQ2DWOVpjbJa8UBf7fKrXuHG5HkvPu52csf
nzzGL55VGENxZOqTwyaxqE3fdVk8Pg4VnnX3XbqnSJf53vBFoRZFV5a+R68F
wWpZakzxWQUirrhggTwExxuYC86pjOEQbVFdYk4U3DX4HR0+DWDtDrugf2o4
Co9Hh8gqDIGbMvMd967fXm4SH7cHl6JncqPJ6KgT2DIf9ZxVGMf7UqdPFm/L
kejFaKvd0YV9NUFEBnqFaNDQjzV8NIhoduHhgBvJ0Bbrdnu4NYSnGyZxKX3u
qPO0WBL7O4zPx/hTXk9qEf5+ef5R70w9dn+HmPTyeSCe/1R9l/gQ8oxM2hcC
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
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 0.5487887828527781}, {-0.09922242497073958, 
             0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 0.5487887828527781}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1: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
xSUnjkAZBx8Qe4lNXePqRtYfs5QcqRiQlLdoXA/og4tnuvF3DVv4bxO0r51v
htbj66nNNCaguvBk5VlZO+p2lcjJedPB9O7FvaLiAaznvy9J4AuEy6kn8sTL
vVD457O1EhSICp1UIj61Ubw+q1mjP58AeUkPn0tc46D5PnA74GoQGJmO116c
SYR3+8V3yqspWLikvnv2Recen7EOEYcE4uTvqDk+zxYEvlAskPtVgyBip84E
024oOYpeM1EuwqC4fhatVTceihVwB0ZZgWliN2airgTv3P+SLBCJgXjoZrA+
6969mds/7MvtDo61nFcfckYgQfdaUdTYAdMXb97LfNAGL03B5GnyRLwTnd90
qhmFVP7X8NtksbjB6e12Tq4d3QPL56jfeSLRt0Rv3WIYGY8jg4dqjeH09qkn
q0syonNaLxzOTwJrM//jAc9y1D00lKrl3uNlq91r607DoHz24Oq1+kzIDM0E
FAj2Q6blwMf4DGUstt23HlaMBQ2pzo7qJy+43PU8SEfZgNDc5r6oeQP4LOu8
Ol5et+fnouwnudJg/u8Rvcmhasi95TAymEgg8DFw25uHVSBx1DNPsT+REH0l
NMvUvA/1jR89c89kQMRA6rXpo2FoHq2ejDYKx0KGK8W/O1m4u2s+dPJ5Hdzq
FmabLeuxxizxKlajFK19zyr+6TfiWsjiq93aRLSy616XEIvCzMMvKfSlSbjQ
p/Xpws0qTF52I2wzxOFHd9+Pa/81482dxP/CdPNg9uBLZOTyGM5t5QwvLlgR
thr2fWDX6APxkZATIS4JoMsKmva1K4NKMEOKv3caojjImwv0xhDU5WNd8DwL
q7V9PyfpexHxrTD5V146xI0dvjQ2DWOVpjbJa8UBf7fKrXuHG5HkvPu52csf
nzzGL55VGENxZOqTwyaxqE3fdVk8Pg4VnnX3XbqnSJf53vBFoRZFV5a+R68F
wWpZakzxWQUirrhggTwExxuYC86pjOEQbVFdYk4U3DX4HR0+DWDtDrugf2o4
Co9Hh8gqDIGbMvMd967fXm4SH7cHl6JncqPJ6KgT2DIf9ZxVGMf7UqdPFm/L
kejFaKvd0YV9NUFEBnqFaNDQjzV8NIhoduHhgBvJ0Bbrdnu4NYSnGyZxKX3u
qPO0WBL7O4zPx/hTXk9qEf5+ef5R70w9dn+HmPTyeSCe/1R9l/gQ8oxM2hcC
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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 0.5487887828527781}, {-0.09922242497073958, 
          0.17696362273988409`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"mum\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Graph of fitness (\[Lambda]) against mum\"", TraditionalForm],
  PlotRange->{{0, 0.5487887828527781}, {-0.09922242497073958, 
    0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
Vjwjr64NpAHG9ZrV
  "],
 CellLabel->
  "Out[123]=",ExpressionUUID->"96a8e302-1d9c-4700-bd3e-1c9c88dcde14"],

Cell[BoxData["0.17353281834111592`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
PuKioq4NpAHIc5r1
  "],
 CellLabel->
  "Out[127]=",ExpressionUUID->"85f00a71-a4e5-4cb7-933e-80a08c9fa226"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
uOrGNM4Md+BGVIYHyTOX+B9gh/OB
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1:eJwVl3c8V28bx6V+qShSRipERCJRSsWnKJrIyiiyihLZo5BNSfjae++997H3
3ruQSkpCNj2ev84/9znndV/357ru9/uEpqGsDjkZGZnETjKy/z8tD6U8eWX6
FlrvVxhYF98QMmPvqAxiepHt9FdWuY9AtEzbS9O6bggq2J2jnM6H5YLyVtCl
HkxxhKpcEsvBq4c/C8pjY8FwU6/qeIsvzg4c+s9mtBk/xsyTvcei8GUcPYzk
/Rixd0/amqnCorBZ/yRjI/YX3DyyIRWDMtEiASPmdlixjOvET3uiw02q9PXu
Hvxj7rbZSCuFloVZoPO7PJSQrlYxVUSCwcZdt/xuNnYKiT5xszWBaLjN6pRd
J3Z59FHWu/iijEandi6/AY+073su10QTbPrRw3/oGrGv8WeMaKAh4ax5UbYm
sQapzXoaxZb++P036UKAYicmGXQMy13ykd7/MehzTxwG2oJKU84mEDs//cmb
baiG0WbH6TDCC+HBNpBbHkCBY9+z2V0VqHvAu/LA7x2O89/WNa01Bl0vq335
516sd5QvxNc4EU98X9HNkQ/gbt8VK/GblWCzvmYk+8wPTsaxKkKrJGL8V+EX
vqux2KVttuL11BmbY8+SHu0dhBR/o+QMTTaKOapOebumYvVLUoeHsj0sD5Do
q4+248vSh0A27Xx8s5vq9V+uxBZbXNrPkmi4DAmHFhqloORvYhCvjC1+DbWw
2UYmgD+M3M9rWAOCT5Yc1Qa6MbZffF1yPRUFEdSxSaG2OGGofVbuw1uct9Es
091dB2Y9k/XDzfGgj5XZ/5mtDV7Umvdj7HKgy0amRHmpAmElfJcMwyOhT+0p
TMVUgcldAlcHLO1RpRDrLKKUCOqHl+uES4JBdksodL9kMq5Ls35jcv+ArD1f
uiWvFMC32+vqlxoSDl7fNd2o14m3CQZXHdQ1IJJOOzIpnQFtugB5fzoP2LBc
qOMLqsNZK7lbH5sTQOba/3TLoQNL7dxR5n8y8ef1VUd+rzT0aixfSgjxgrxN
I5d8bj+SV9W5FhvzQSX64Z+rejsyw3uKRI6mI5Us7Lf2+WpMOZv1UxlHQsnS
yraZrQkVKbLnhKqCwX3Nu21TuQR6VMfSOpNiwP37pteIThN6sP/PPt5MZJ/R
+r652QZfmSQto8003P/HI1oy1odf60EPf65kAz2Ta20xNbhw49F1hZveiKIM
bvwcMoycrdvfR3g6kbIjyMHZJheed5NVk9y8sZa/YZC+rwCmHmle482vwaWz
c69hcCGopU33xJtEgfn0V4a7t7txVuWprvqWF7EWb+B3rTYDMqYbyhuN9piw
IPu4cioOnT7ykkrSLojaaR+iMZUP99ssolGqITgZaO0bFpgNhfO3fGpswpH9
QUatZLESX0w013M9wmGW3zWwWJ2IxdrGToPQD+D4UWg4XZyNIfIAJnYKP6R+
4LI9Il6NjZX7YkX2ofAwC5+u4orB5Rce4t37tLGv9GYnx1gP1h9Feu/tyiJW
S3I2ph06UR+QIL+jNwucW9zvL4TVgNNM7uZP1jj4miUems4oQ9dzQ7tlGV8k
9Wl7N0Z7YlRI9tNUoTuO7nYoOhfbAqmnIg+nTwYgNe5c32vablB+XWy9eSgV
ygv5hoZ/e2HVOSeVRhMDdtpg7V/34sF4QuY6vYU/eEMlX2QoduF6QRsXqTMO
9jKVt4VFm8DOtuIQcS0JqR2dWVH+Ofjx8m+pXUgE1Nwm2b9Td6Bb58HwDc9U
/AzIr4jmC0Akm9jIFRFnvB25HscUOwCxuQLxGz+rEZZ8ptBL+DVGWKuKjO2c
4GLM/pmLYxQ57xUtbKVj8JmUzfTdrweFeXNnjjMQqOQntwy4lgv1JYtQ2afn
iaq5GVY/5mJMSb/wEpGPJMySDG7aDHUhRVc61vN1KgSPXycF3SxB2uE7gs/e
+8K2Tcr038VuRPy3Q+bC6zyEtbkV2Nb24FvesARnax5Mirm/Di9lItlY4VIg
qzcSJzS92/WroMAy1//DMw1Wdcb2GoxpKFgg3TKK88FFPkf2nL3BMIjn42/I
NyXWC+9F2n/uxELPQV5N1SxM3xeM7G0qB/mJ3+nOlpFYUW29qa9bidc+IhaM
rC8hqj0g6CnVD/kpa6PD394Qj/5Is9tzOmPl19HM3Mw0IueKv/edq604UCX8
IHIiGUled8ZH3mdD94Pj7XYFB2Q/XORyeV+MIBlt3/XbkSgms7wH32Ywd6so
qPcn4XrHZV+ZMx4Qn9jJvYOxhFDX0tHltBiCHdO92WTHHOKo5REDaqleJNuH
LrWfqsXsxODyE9psHKk9/TEkOhBNJ46fFM0uxfGz1eqiK7lEyc7GlncPiiHC
z/E6cjoMW/EmjnX2QxAo23EkfbtPvzpaf5tZbMHoTUFL/30JYOUXju0YKcQv
KoEoSwFnFBaMUO29l4V/kuV7jDLfQvDlQyPv7Fqoy5+cfPsqAcz9Lfn9/cUI
uRSoITQWD65fpFcXdFvxbfMTycUkGa2j0z8j/vbgO/P1oOp9nngjtXj+WmQn
ZrsrBhMfJMH6VVYmaaQEl08sMDU+J2FPxK9oR+UsqK2oDd0s8kNmJaVdeF0R
/lKXDLmUkHCizP2+iksB9MbKPRsC3mO/7IWQpr4czG6Mj/t4JUJ/VTqz/2Im
DlwwGHvopUjQTm4mjVV0YmNYdw9fSCaiaLr3nomuhZm/xcaCbDyeBdzofWBf
jD2HGL5Y6roQf/opEguOdSB/eff0zrlYXFR32JA9VQHtpFARDqpYUHFkGcdd
rQJHjWu34Ew8okWXaFjvdkDxvzNKjxwLwanBwDQ72Y4R5S7rkuuJ+LCTMk+o
xBmnLOI5Hyr4Qif2iTSPVhuCukMGNKeT4Ja1Urn7SCKyL/rEHHTyAcmRJDFG
Ww5t992ZAvsDELxVEJZn1w+Tzs1Q66YS4ufzwrbHI2mo8n2weyvtHTp3StrJ
7elHlZ0AzzUhAmR8M6THCe2oeGn9bMfGQ/A8enBY0boGGT2Z+Wnh4bA98fX8
jMBHDMb/6pld0iB++8sZun3rQl+gbLR6SQlkQyfvTNv5g1t+PnZn1Hv8WO0T
iaNrA+3uEWFTyzgcOMcn3LlWiIHPvDR30+Lh+GJJv+3iMIoOcvMq9dYgseHo
ratjBRhXvRaTGeaM7pjac0tSbVCtpswto4hBkULb7OaeXjSwxeQGvM6FFX+i
RMOBXCwYR8np/XTDDYeOK+kezRC86W67un0/L4WW1lO1lMB8K6Ty/b330CTj
//eKPRtqTy5FfZYNxWWJhyISKhGYCKGpeX3PGXFiv+5+Gk5HIOfT9My4ONga
vT/5djUNJ08/uLmDiwTTKwo8Vo69GLtq81Qk2A9iEdaD6UJh2/Ow5ch4xzvi
4g8fjf1t9XhiNlZl1ZOGKZaMHdpEMhRu/G0dtrOD0OmSrCaDanS9KfXj+fYO
u7Pktwoy8kFrqOs6wRAK8VbH38oGURiJKRex9w1CnsndJr5biYiOXXvq6/sM
/guGwxd+9OLVRNfqsddZGB8HD0NZJPgFNRlzpPQwlLUisO7dg90+ObRdnomo
2TqoTuYbAruvaet65nqEgNETmjqXTjCItYd++LvNhVrh0JDOw63UH/vFyn0g
bHqBbzWxAawxwda1noVECynKP045E5d9Ol0jRZ0J6mNjuk0HCtFMaWfARW0E
v4+z/u7yyXj+xCgvlOwZrktkG9Erd0Cr+trEYfZ82A/bREpUduK6YmfBAZEC
fKZX7JBO7wLzygUHedcCiK4XekVSdEPBOe/13oloNCcyHPbxb0F9xL1utmf+
BMe4at0x8TycJBXQvjHannc87E94KRNRkJexJUqvi3QJl6dtm5V4UUWy2vfN
DEv7ZLTadUoRMPE16NjtMFRGhStZ8HYh92/eRv7bfLCaaaUHXd/OW7KJF5tD
BX67NQt7Sjqht4c6zeSdB+7VlFruz++E464bArTf0mG5K8Rj75UhqJEeoDcm
G3fNdbP1M/IQkSQqMD4eCtF68W/n6DtRwHzfc64xG+2fQgtoxruQLrmvn0bc
hFAKfk5QryaiKr4khUxLHwr9Dpz55WUg//TlwhOLcIRqCbH8pG5EtfXei90x
T4gHCxUOb2fqYGQbevkNqZFYdcw5+eJPMZKulsBAOhxlescK5RdaoWS7KqHX
k41+1vEkL5Me3Gf8ERSUWY7gm4myky/78duKU/KGaA1mXzOeLjbtQsDN72o8
jpmIPtXCwZufgef0rxkZFd9jTuXRpVH9XKyIVoq4eQajvyZn5+WxMkSSO1U+
fBgFh5XjcupVOSBpSGYdOuYPJc4vOakh7XgZ8dUhuKUIBv7ahqfairH31JR5
EnUIqEJ/rbj39IIjdT0ipjIXazYd19R92xFpKrjXiGP7XJ7NfONR/wSW6ZJy
H/5GHF6/IkGTkwALm8QiLRoHSMoK7ZxXC0Lo80K7mwM++HiiQdVK5yOu1E5C
Y+YZDD8/WnNZKYVlAx8Hj38kqJ7nUlbqlyGrbt9X/h+B2JrfK3XgdC6ysvkd
ZK5GQsfj6nr1jlrE5jq3X5VIxmwM3ykiqgNnjzBolVRu89W7vkvlnh8wfq7y
UvGld4QmDaeaBHk+dE4m5e5L8UOyhZXi1Ks+tC3uYwsYDYPervN2iq25UF7b
axafZUo0TB089SPrPRRrp46O0EYSdRsKv299qscdqXutrwySwSiR/Y9bORbj
gp1ZZ2644nY2WUuNdTSuBe89wXjEH9UC9id+klUjaCGPRsE0Dh8WdqpfaY7F
MZKCyzTpLUplw6TXspvw+kYxGVttCnzKeR1YLarx8plY0wveNKi3bw3+utCH
qJNTy499ErE0rqDy4d1bOEXQ1OoWHCQo85+Wuot2wafpK7ParDMoWFgtT8ZE
YmNUdTxKxZlYu8h3Uzo2ExdULaXELBygb8K+TpudibfBxORStQ8SD9Dav19t
AMlZ2nI5whffw9ZZL17KQfs8/20FQS8YerGIeLSXYMY35MWeU5nEByfvg7aR
PWi63D9cZh+FA6Yh/rdM0lCkuTu/Ny2XeK6ibCoh3oW6SaGrLZIJmNnadNQh
68WpCa0T6kUOxAODWnPhz2GoqnugFEdeSvDeOdykf20Eq299Cou/heKhQWsk
3YkKPIubqWb86oQY/Zni/OghDE58TJ6PzsL8U54lzUutMPgl/vzHSBZI6vHT
ZrPVKOg1ME2Yryc+/2NcamEPxkV370i/92+Rw6PiORFRiWjDPKq2LBaCuEom
vlDYB/6UuDPJycVonzBMY3PrBs2+sDrVw1nYKG9s2idI4L38WmRFYyQqvrcO
hCa3oa+HMdNh/Dkx1kyiLpOKRNHN9ZlCbidQx5eHC2k2I1ZkVZM1y41wpth/
4eaXfjxj/m/gHFsz2L/8FLZ1ykUZbwcfv4MAkh/IGys3FsI4gZltZ0EsFBNV
7mbXJSCxhM7p3X13iPHWB/AxE7DsCzSmPBSOhIgfHWmaUagJvHk4w9wFUvcF
qFoWqrHl2FSaFh+LyFd2l75fKMcNCdbfKvfKiVczl9mo2yuw/HHPLFtnBPI5
A8RNh0tBc+lRRCtvPEQl6McuPq9GnvRL3s9OySjupTuxf7gc6fXZbt/GQpEl
w0BRd68RlOVHbO03/GB4z3L5tUM+SkNy15zajLD405OKKG+Bd25rwzx9LB46
jURTLPdh44iSqOyVfBxTsRIbZhrEP9Xo+ZMMtXCo3M1zYLgehvOnEwtkknFY
nNHSN7UMarO8Czt9mog7o/9ynQW6YSGkedRYPAmWK6ZKjdMFeNZ3f8Kr3QPk
vZs9Hyu2fSCAq/yd8Aeoe+8uJtP9DFX/58x73DPB95GKofdMKZ5YTD33nYrC
k2Pl6fx5Lds8zz1p4paFgbzyyTLPFvQtu3iUScXC5/Xu6m8RDTBac/ub2+iE
M/u0WP6pV6LGddjt1u5yYl6cibUv1gcsUZfW9KVdMe1Z+F39RwWGqzizejhz
CLn8uyoiAn1QUye1GGWEEOl8vnsOy1bjieh1b4XDoRhLiX18qLIcdFWJdY6+
nkikeKq0sJiPr5Th650S4Xi10PNQflcIcoQEGynmrCA4UPvpC3MjPLRmnz/c
kYsBGkdmXs9W8Nlaiu3MikOflIxJNEs2jMgEDX1DoyEfoirr+6AbidSXnVr9
qpGbRTfi0tsJzWuD0qHaBXir2DgmpViMrQ71dqLfG8UTCXRX00JhqRPwVwde
mJJ5lT9g0QHzPrG3v+ryoSG1x4xMrB9Cq4qSIyF5SIhSvPtxuRFfkxgcBCdj
IEtilvOIb0QirS/TqGgI7plOjb00a0L/iwPzuz/FY2DSJu4Kpz/eF+5LOWLk
jNIesrOBstv8MN5J/ZHbC+dPV68ioAAuxBufPz0e2HHzi1DOm17UjzMzvyjK
Ql/8tRWr5Wbw37BZ8FmOwlwajXxnJGmbx5coM4eiiIrTIeX/EipgEu94jLLK
B0MncrS5/otFV+rV4WPe9tAVY55dEuzEccYMr4LRXIy/mbIVV80ATb3OZwpO
XzzqONqwslIBTTWaD0eYI9DZ+WiRKXkIcuOq0SmH42AtxmQ0tpAOoyPTw8wz
oWCMOfk3yrABy+wbl0occjHNTEef9qcDLtM3vwioF+KnPWfu3+JcBLOf33/t
djietV2XXq1oQy33j+yq4izY8tjVRKm1wDbWjKnO4jlEd7JoFcaUYs+fRwtf
0yPhFz+f03FoCKrGvSp1alU4X7biccB9ADF2OWbNH4rAuoufR+5+LuIe0Pu4
8uURb+35FA9T9aL76YPgs3xVoLR6TEi6JeKNe8H4MxkXPOzflVKT4wVWPkbj
AKO38NiXzkr7vAILa35vyZTVCVa9FyYSRUOgIhc3/zRcgwblK62aQy0oC3xs
fvtMIZbu/ZdHNA5AnU9rycQ9CV0BlDE1G0nQ9MhojTKNIuoVvh6qj6iCTuni
8Sx+K+JFxot4owOV8HB+tqiQnkCUKY/mLWhW4aHHBwM3xXhcdXBvElxsQG0p
q4pIZiC4Xv7tZGP0xsAXusW7QYE4oduym+VAD/SnQnz9/EuwMTje+7K2Av8p
joZY5geDsSM75XNgF7jcHCy2ljPRyeHNpn92FP9h2nLCLwvpg4PkR9cq4Pdq
fVI88Skh6vfxqe3dKJiluF8pZHZDn85BInXQET27nyTahOvgFqvUdP+DQbQL
CJtG9VbgifCSjVJDIORf+cQ380URciqZ+WcO9KFmU31UdyYTErKi6fEVvYh7
1GLv5lqK8h1syvK22/NE0jR/5lwMFniCDnDwVuG+6Y85BetkLLLTNNqo5CPi
7A7i2x1/DEuwMVA7VcGn5PvabboYuLwYdJMQaQGtv1OcU2UCJEKYbPkkejFC
ok8xZM3DhYGNrrLYfgQennUIidmuK/U0d99IN6Tyxd0OOZahV9DA9f6JQgz+
cZ4UfB0N7kT2R9/p+xFjNtM4N5qHE9E9ub0G0XhnffKxWpcrfLMJvlaNeij+
WKT9VRsB7pVxG6fAJPRyhSg+/U+baL0zVhQtUI/BKFPmkYQUbN0TtY370gJx
JQbXoe115vNnGj6O9oN0tv7ep2+5uC6cc7ldPgeuszsY6ePeIzFwreWtbxXU
P2i90d+MxzH65KYNmQFkGTFy/aTJJ2T3vOEUPJ2Pq1PeG0frAsBBXtuSY9OF
o58vtVzfUQzx1K6xmYO9WP/ZFDcSGgnpOzVGJtteyflUoPCtWjCE5lZ6vNIa
MODWRdp5Px2nOYxb6Uk9OCvcQLvXqhwf9lc8Ucnpw866X1QbPf442CUk+2Kl
C3F/x36YnyhArg0XVflCLji/ZNEk8JJAVvWFZu7Re/wReikj3WoMyXp7wwm5
fvDtfnzFezYLodzF/+78ccDdN3/Phoq9RXY6RT6rSwXu3d+OcVM9IRXIuOBz
uxnPl/apGLd7Yom66MuuwGbcZLl06pNDAip9/SIWaBugtbEfsVKvsDw9o7z7
TyOk9++xtzqRAPXfOgcyr6dA7t4pa5udJJyyVrnM/a8JV8LFOHWC8nDDQuSK
wkAWROZr8o+/88HVmoeUkfNuuLvHlaf70lMil0yVVg3dOFDLKHx1rQR9Bz9J
7R6qBaOc6tY8dQKo0wipNfts/LOpSvw3GgGK6zHBt2yrUdQyI5wnYQcWdvpp
H+YqnGw8P5xj7I4eJ77L88ydcJE4YexPygKHwo+hskPVuEx37fvh4GTIzDhl
BXxsw38tG6/H6PIhdXFBw5R3DN42xsxmXS1o+ho8bHe+BRyR0wxp1nH4L0f0
kEBkFk72kFZOU4agjc3JNFJ+FFvNr6d4hGqQUxK1njzcCtGEdG23l15wdlfi
a35civ+SxJQPp1vA8hqDS1T5CDQ2w2sMRbqR3zPjlhfdALqC6ivMwlFIgtjM
+4UEPCJ7lCM2oYUbbJWPb3c24ch/v7z6lWLBPb5iF1UWipd3Zpb5/+ohqfqv
c961VDSdp/1iuKlIfJ597vvncgZMb8/nNw7JEOn6XeJ0fwNhEcrIbcz3mjC4
1vSC/f0gfr5b4X57pRr1ZaVz307UgpQ46mAXEYsJ88euJgfqcMeVXG7wbihm
Bam30ljLQSFQUcSvRcLTV59Cuim35/8uankmk3QsSP3V51vsgrvwU7rnbfnw
p0vrSu7qA4uXst6bkgrM5gcRIhFdEN83MijMWQKH3lk6fYl6HA2O8P52MpP4
5sZe3ZPYjPzOU8ThyDRQDHIy2Owowuk1fmbVvm3fvWv1rHxvKxSi+saVm9Jh
bOHyZnWqEa+5jWRmXyVA/+ALA96rNZiR5E4lGbmB5/qCoI9JKySGXOqe1WUg
aeLeGVX6OLR2Oxv9p+KNkiJV/8Cjn5Dw9V0N0VoLS9/TVBbmfSCOF+XcNs+B
J1+Db87dBiwVpEU0H47E47V9m+NfitDLGbZ0sZCEW5/uhCnQdaPllP1xVdJd
ZOx1IvP0rcFJ8T+nC8SSwG1ewrj5ohbdH7USbd2TwdBfEXf6ZC8sHj0rb+3b
/v6cuZnKm1is+TK0uAw64R192NGFeAKhTVVyspyx2JGjH2VXlok8q/CzDwYC
kX2xZkiguAQ7Thn7DNb5gyLzw7c712txje7gmIukH+5xHmPy+94HH5nS7NTi
WBxg1/vJ/nGb72vK7wzq5mBDOOb6yQc9yLEyvcdrWoJQKRke2XcdELXa+tGe
E4uzOiYhWxGJ2DJ1ZCxODcJ8TKeMtVMWDsRXBFMzJhLyNUsjYqxVuJXvcFbR
IBDibg/jEs7VIY2hK/LIVgR4N67T2a724C6b7PDOqFREOCqdCi1pRHnPKXcJ
A0ekscSubTxww5fxtJ4/QW8wFO7bdlUrEZyN+wqeM3nBlLLq3cmNGpwPvWx0
wcEHaXv8d1g93X7/9/dDC3PvcCV7ufpu/Da3yEvQrg4k4kVGjQjLejao9xs2
dD3QJObq5f70tPTDWFbJzqgyA+MWFNI6hCdirCgf0LBUEJe2rMa/DRTB5uja
1rk9wZBdeeimmZCOXYbKEeE62/MnocWEa6EZKeti58n/xeGeOn1qzGoHeO2t
xc6fK8X35lHun+Y9OET3eLjHNx/Lt2hE+3c0YHPv4xqN36lQ6ylcoTfrAOVZ
Ge8Iz0wcE9sbVqg8goOxDjVPLSrBv+7yjqy7Bo+cEp7W7Nr2gczfrD4+1WB1
KaiYeR2GIxE233NnYjBdHRc8s9MRbnev/tW52onlpVnWZ40ZaHgbLXmwvgC1
M793JjSEY5Y/XVS7JB6elw+MdLN4I/jZK1p1hRp0LHwqeWyRA26Oc/7aEUXY
7C1pz5RPwqZMFIOxz/Z+ZAc2/t+vovEyBdSLdrjzVbLoTupB7K7xTHyeUQCb
nlwyTy4/8NAmGTGvdcJMj+oXnWk5vDjuU4eI5sKU67TfUWtzove0eOKaZSVM
+Ky0LkkGIE5upSafNxN3ZozcjTRIeD+i+HhTpA/rZJlvjdLrUSz0conpbRTe
mtjTLLMHYSi/83mBTg08RputpG8koCJIONWkqAZOCXMhW1Lx0BuYH/34sAP1
X/z5w0y2+edTFJOvZT0oInXcBaOS8IvXr3wFkailJjcdN3Alzmo4TZHnZeJx
1LBb/74gLBcdi7hB1wqfu+/HQup8kN3NpqCS9QHN7eG3HtbEEAeDAw/JPmrG
3Ddat89SGfDQNBrc86IPY7ZUNWwO1dDL5oNYQxec2v2NnukTsHWdlxy5GY3M
a8f36BZ7QJPny8a9w/U4IL860X4wDYvR5qJuGmNQNjNyq1asR8WqxY+w+RwI
xX5iPrv4ChFB9azx/dHIlzB4JqfoDyFhWoIjtAcxv0tPruytApfJbu3wc51w
+DkrUN+RT0zm0p6RkSvDBamLW9z/vPD79g3bUzeroHEh8fgHkXCAvu2yjnwI
DFbyKLNK34Dh3MszpjX9yHlm3mOtlQZBoaHE9spBDPGf9z2/RqD0sf611dlO
GDckNb1nCYJLl8zk8rdwhIvvShloeIcb05zzhWbNIKNwJYSzImGe82iF7WMk
rkr+KYmYcIMpITU3kxEJXpWVXUKRVvh+VGci51ojZiyGzumK5KFd9ctz3fQY
lGvuVKtWTYa6375Tifa90N3s9LEfjgV5y8CFlgc+ULALyzq5EAxyNc8sCu4o
7C3N629yjSVSx0hjpyd98W+8RLHCWB/r+Vv+M6OVUCfz93w6F46Ia+PjDy8l
oOG0V25IpAVEUroslM/k4daYm4lWQiIsybtKQ560oeplU7LY82gYZEkvClq1
waFBeLPlTDZOS1Cp076MRIKUWENEXSDsGEp6BDi7wCgqeapfrAwS/pO/XBVD
wWD2X+yXa1HQNrJh5yKrhBUP9zXB88G4tqdcaZMYxGGThxYHLDKRluolkSbT
CrcMmxqtuSyIW9WZebz7BBv+HevsnRUQXLPIcT5Vi6kJS+u3hWkIfGtJH/m2
A9cc+UmOhvGAw7yIsmIFklN0K1kFfGGScejlsdl6vD99z0uqLBqmi84/Fw/E
QiHP2yeYUwmX3VQal/i68GmMZs8b0WSkvGi5fPBnJeguXHJSiAnB/s1dNrRi
XTD8Tr8adSQSXt2zZl3lfXh9w76BMpMElmjiRWZTCw7L18ydts8lHMkzIo5Z
tCPD5Hqv21Y63nN9ybn9dgC3/fYN+xhVg4LpwxHLb01YEY+qpS/JhS2rwi5q
tzxQ9za6ndg+R36hx50TC+2gm6OQXl/JQtqKKxet27bX2F481tgZQBi+y3dY
nqyGNPt+G2PeRHDr5OxQ8rTEActj76wfyxP2q/Vzhw/mIV7HQnr/eDpRtOvl
FP3FZOxKf+jBR+4IkfYvIL/SjWZ5p3y/hWR4jlUxen0NhZwGVU7lZTPstOFU
CGqp2s518eyuiBB4S1sI9LkH4fCC7Mj8WX+0iXn/N1Y8Cv3j9ZsWgZVok+ub
rr9ViJ4XRQw8fU4EY/AzGsaGbrwSu5Wh6ZZAHFTVWu1qjMBu+sN6EjmOWLb9
wrS83gSas3SXy/+F46JHkf65AzFwTZHOHhX0BYX8e817gjW4/eBR/j6FZNC1
uptabOShimWXE2i9iTtuS7/1rMOQQD46E7r+HOTf1Q3LZbvB/qd336J+Cr7G
qmhc3tmOb3oCN9X94vDmvvSdCLEGiPnx2BnsjN7+L+WC8YMCfP980rjwqh2R
yMR8i35rGOZyrid+V1QjRLeiu5FqCFc6b1BIxxTD3Nr1hPLePExzFFbt3k8C
0zLv8N7gbniss6l8Edr2jDIrbcblWNzZZ3315Ocs4kNYzRb9tTzcK2BuPchh
DPcjLYZMz3twhOfL24VRSWL+txx/XUYs5l0e1P4V98bpUwciOXZ2Y8LNMHbX
7hKQoh4q12v3gHg+oqpikICEc6e98n53I2f3qGnooRgcd3888V2pG1FLP8gp
ogvhE/I1I2gyA7Uv+BsE9O3RKHayooW6GTIxZEL2dbFw43+kHZ3SiRGpH3JM
KjmguEIa9fbtxM8pLxmW7fp+MK8cOdTfhrLe8P9ux6ciRfHV81fVrSihEuf/
kJqFpNngfWO3+9B+iPHqE+dY4rPe56VNDnuQ8TrTbK4ZIiH2XnWkkwvY3QWC
FV398PP92eFMmSbkLNuk5cnFYVVxR6PHgC3e+2RafdN1gkqveRmlfDae3zud
3spojU+e2U3UUh1o+KdBTX01Ezj94/zP0Fz8LdQvSxIJhge/RgZzZybUNv3W
50OCcYg+SVLmRSdUjurVmc0kYXlfzUfLEX8wfhu6GHQqBMKWMRG/brXAt/PE
C62FNHj7pfyhkiza5jO+kR1hwYj90Hv1quIggh+qFz36VQflf9r/cen2QcPt
Fpe1VglA4bTSr52C23eLLgXH2GP5JdMpqjOFeOG1tnOW7C7CFT6b1r1OQv6P
/0b9L3mB9eHrg113YyFzXEX9lpUrRg78/OjzugkkPbHUKepkVNKcmG24nwm5
Qo/Ii/vjYaK5/5pgaiV6h/4cY3jhA3GeO/bcacHIuhcdOlJvBf3xKEtVqm7E
5rWz7i1MgZuxhgw5LYGG2xZy9Zcisbasr/2V1AZaWYlTXI3ZeKy6P1brsBMU
23YbJGZpYZJzkEVfoQyMu4y3dAxJuBBAT6+QFoDw/NaBmBlzWKV/W7uhVrPt
57f4D13IAJvTQcMYOh880hSwNJ9IIsaUH8/SOXYi+ZNPgfpgMkGtWpVbQ9GB
xmYDn/wjWTjvWsCVaJgJPcrayVjLSBzrI0oj9Lb75Z/tyCH5BuRIUx4R3OrB
Io+McrxuOdT/6ka8+dQArrDfyv/qk6H/eL6tXLkGX2+/SWMuT4HiGlNF9Hw1
Jjk8iQ22BIzrOx9OT+/Ek8vJZyJMCsBAtYPJfKoDx9bzRn/P2hMz0kqPVffW
Yce+sINh75OQ5TGRc7KjEdqhbGmBvhmwStJ2dRdvR0iPn0ORfA6YT+42iHzd
iaiPxam/CjIhqImtfVeKsMBYn0Kad0XD31X3u6zbuX/371UrKRBjtSMusV8T
URqdfn+vdTwawryqqISjoS381+vfcWkUOS0qP/regRLOuW+xiyF4e6fkrsx6
KaI432OWOgy95Md3OORXYg9TSUNy3na//lWkDovIwOJlfrHA9Ei8mS2L2tSv
wCXa7BeX/gVAbWx1Kqw1FX2TKy2WlO6w0JDU3CM6AP1yd0M7zUqgfpSyzWMI
5HUhZOamxTh+8tPt3ZONiOW/ORp0LhXJht9lZEKyIL1inZA24IWZnV36+z0b
8IpKNE1l8jnx9KxCzZPeZPxbCrPuF/FGHkvVp8DWLBRYWnfOBofDMqDlTU1t
F6j0mSRlVypgQfb9IDtnAf7xHew43RaF112v5s5x1KM/cE3963E5wLyr3X+0
AXbT5JVt+5LhktyuyLK3EhYO9nQ64rEIEbHWTHWpgtHN35Et2oGIPlg7ZPmq
FUMdfD9+H8/DvgTq2nj3amQqWDpTdlwn3umOJnMadkDwV9/+IPIEfFWjn43g
bId1Ob+EblMKcr9/bxeqrIKY0uZex4BIolOk00HdpgZzgaalJpURaB55/3xU
pQqj/btu8o2GY0q99hzfqzgoqI+GJyUH4HRPU9NyYhEa4kdnxsaDYKWszvWk
oxbiw04Bm0UJkFT7Q1t/cwR+2dokGfZWGHkM7/bdKIHy5b+OLLd8wfrEfXCx
rAcnFu5VnyXPRvTC3knvws94dvOGzuXefujX55ne2t+FG7Y/KX6LZmKhRk+i
f3c26rJ3jDj/IaH2tw3jfv8yJFEUJlifCoRqOZvJv7UwuHKGNnrVCBPrP/6c
ClDvQjvT/lXV7Xvh0kJbaXlDKYR+pxxLa85EkzjjxFJKB2j11j5clsiF3nAz
uWVeFYzZKx9WU3zE6u/5ktfnitGXYhrjWxYGGXMRQ6WrHTDKy2epe5eOb7Lo
T/MrwMmGKvIxsni8PqVWkWGdBHKTo5JbbM/Q0GAY1eAdDb7FPQc/Vr3HP0o/
0vGwdDhoJzn95vbDzVWWVf37XRDVZncMeJ2CF3QkGpffudC+fFiM52MYprqb
5gYeWqBl72mFs/ofQP73POdO814QVQ/PBzEWo87jsWBaZQHO4cKhyZ4Qwtzw
djRlii/+ju/cv6GcR+hlZIzFSBeAtuCm29FPYeDKGqcnmFvhvfRkiYksH79E
bgzUXWpA2N2Z2/OSPhjMGjXuNOqCNf+zWxee5aNrXHe+XacX+e0JEec3K/Ez
itqCJiUKw79Mm7Kv2OAFH8/+If8oCLpoUtm8s4fkx0At5/dxyLfpaMrkeA/Z
N3NcNSK12H/HY0Ep0xut8qo1e452IFrW8oTIWA5evmohMTDGI/jcgOXpaHe8
lM5P/3emDOnjJSfYLILx7G1pk+SjTJBOvNHee9wYs7K8ZyaOR+Ok2YpbTYk/
uNv+i2hUG8QzkbF1ScZcRLPUrxy5M4TQ2m6xYOpqLNAf5QtwboSG7p+rxitx
6Jkne+TUUIdSY+5v0jrBOJbSPnjway0Ef7gsi8wUEHqFC5KmM1WgVZd+eWe7
ryPPUPu0Hw1Dl1NG3uPaKqLvzFWudZNgpBJuJ/zE3sLsj3X302O9+Pvw0d/4
17locJyXGvyVA6migSWWxQCk/zrs3WY6gI1DB38q/6zCgqgYpc2nKpgLSBve
OJ2Jv65bvclKdVgUeqU1LRmJHfd+qFQFdiBrWqnSLiAZlkIJ9XL7a2Bsqal+
cSYcbsf+SxgJ6YBuNG3OweptHrjGrmW/twFJAlVC/1RDUP0fL8WFI5V4qqHG
c8fNGyKJy82yhf1Y+jXrFXaoCKrxGYsCegQeshQspb+JwnF6/V45iQgczS5J
0bN2JQy6A9iUGIeh9WN/W6FTIZ70ktmHlwwg/cnApZbiejSpcR8zKG/AVGpr
rMJwDuiiTYsE91TAWO7GSUeniyi7dT5hl4cNYkK/rJNZ30dfbGjPJ95WPHLb
Y8kp60Oc2sX/WvpjBy5wHHlzlz8GFw0oyHdse75KUA1p/55wdMV+Sw4fr8Ee
xXWWC8aZyLOWoRxTqsLHaxcdxhejMdicXJIn2wG7aFmKmeWPWG/Uz2VRG8L1
f1o0XFRVqPnMdoU5dwAn2e4m36Grwb230Wf5WQbAwbd0wz5eBZ0cs7e5ejqx
cu1AFHt/Ds5+1X68wJwHbg0554/2YdBL3tw4lNGB+QeOnhEZ7sQbZUpLAeVG
yP+Yo9lJbUFwMhWrsV1qAqXdqqzDNv/xh/2OuhDRjydSzkcadtWhnt1INkn3
HX6bCd75nPcCNvbgVLVqhOK9Xioq43R83OCrD1HKg2bLvo82mq5Q1GM4RGHW
jbOnJNdWSHkY35BlJD3ZrrfN1A+6D3kgde5hb1ZthF3w8rMPSrGguvzM2uFu
J4r5Qni3HLPA4bgnTaQ8D64HTi6S/osmusZ7rwjvSsJUnH77CtcH2KVeS2L2
HMNuseWliP/atn2neVa2oR0Jd7VGjnQlgpN5lsxGvgmPNHKDNW9lwZhOYPri
TAd6b76fWyJt+9yPVzD0eAMSlZZJQI8rnM4oD67EdCOz6+di5ZVyaLuZuAW+
aYcfxbiNxrEgWPM9YRO83gxaNR+PuG4SoR3Kass82oOqkEjVEYdMbEnaWR8X
rka2ydSVhmxPmDhpkZ3J6AVY33DPONeAiZ8lK/7kIHhZm0leQRlQ4tn/gPxR
LfyaVYWMVhOgyioZyHaqDW8PDKqliEcj6dppESaXfsRvdJW3ohaKWpdX/+k3
gkGylp2vJAbNP4QKebXz4KuhI3Zj25/f77AR+UTrBT5OR2W/XWnErXdGutQB
GQgIlfkqyuOHTNY7efGF7bhQkCOo25SLzvhXNEIUUWhqTlp/kWgN7qPiXBR1
OXhl1m06R+aNYOJWOq9eL7q+i4W5H6pCp4rGjoHUKgg+OLfnYqQr0c9sFSZt
EICvdkmGcXLGuNM14BkWm4svW72xJ9p9IRLp08DgWggzjk3Dw7+jcbrxYdKx
tAoQb8In1xJyiCj6bMsrud1InGLmdFeNQB6H/GywUBaiX6ifoFFLI6Q5N+ZU
uxtwVf7EZGmzGUaPTd7m3JWLd3HGvcoJwQip9dsj3ZSJV8NLdvrZH3B0lasg
R7UPg79VeRz2RqDyt7YEoxCBsgGGvvSqMJS1KymkH0yHOKpPZ+xyh975jLRw
izokkIR/fgmIx1DB68u05yrwSS1IJvd4As4caIuIZG4AZYKDFQVDBJxsGThp
ZLqgdjBVTeVwCs4+ll0Wc2pBrPPxb7Ux+USj57C/c9wg7gp8kKH7UwX+klQR
DcYGBN09WzzxPRQVMXwfmT8MI4xn3+IdhqdoVHKQSM3PgdDT48rmt3ww5D0x
wT3XgwVTyhMFlblokrw/mPmiDqcoDvdM+sRjkofZRUazH0WzMfd4M+Jx7ayM
HF/FG/DTfeqysrPAARoTlpecrnjErRTZOBFJkL6G7Q3d3YmPXDoSm9VZeJa3
rLBXpBINR0/zTKXFY3Asj/ZFXRYe31uyGKLxxIRW7utj99uhuFtPDufTICRf
uUfcKQF5aqudt9sccL/MZu3OgTLw3J4cKtOLgYn/kmPoj2KISnnVmR4MwEur
+aM+hgPbXv84Qog3HeabNgo3GTJxn5w3+sBHWuzfVFBVSqxCtN/WcVV/L/Tw
K0ddqmjAYbI/bPGhYfBc1rxv79KLyxpx4wzTIYgx4tbliGzEq8mcHymT+fAL
FahL5u7CYQ2NQOK4J+IeztwI8C6ByKnwQOYkL9xrHeyhr6yBErvMf3fd0lDd
TRLuTPPHbxO51aOVnqC9X9oQX9CMwtDlkGSTOLCUTHxo52mC6epGhn9fAeQX
P5vubayA0rRRgndlJnG/rOwD/RMSLJaX1J6PP0HPnajgcd0WzEgmPgrk2M6r
bdHJN7bNaGJPNc9CIsg9BKQes/fh63Gm7MsUGZg1FbgkXl6Jx0191RUG9sQU
S98ZnCqD8FosW92V94SVr/zzEZtKTJgPjFn6xmBhx3SZ7WILxncZqG6NxYDf
yndv9os0KNnpW9MfjSZ2C8ndLhSswuFZ1jt2IimYNGgbiXnWjr8qymcelWWj
c8grLtuyBTblYbcMEjLw00BXueHpED7GzXZcuFGBi8849u2caAafUIaQv2Iy
uOrGNM4Md+BGVIYHyTOX+B9gh/OB
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 0.5225305017807964}, {-0.09922242497073958, 
             0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 0.5225305017807964}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1: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
uOrGNM4Md+BGVIYHyTOX+B9gh/OB
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 0.5225305017807964}, {-0.09922242497073958, 
          0.17696362273988409`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"muf\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against muf\"", TraditionalForm],
  PlotRange->{{0, 0.5225305017807964}, {-0.09922242497073958, 
    0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
LjH0UtcG0gDGUpq4
  "],
 CellLabel->
  "Out[130]=",ExpressionUUID->"589f1fab-74da-45cd-a33d-3c7316e35ae3"],

Cell[BoxData["0.6284217031772167`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
Tlnjq64NpAHJQZsm
  "],
 CellLabel->
  "Out[134]=",ExpressionUUID->"e7d9ca3f-03b2-42a3-bfe6-82f0fd2a9501"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 0.9972801969964326}, {-0.09922242497073958, 
             0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 0.9972801969964326}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 0.9972801969964326}, {-0.09922242497073958, 
          0.17696362273988409`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"mm\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against mm\"", TraditionalForm],
  PlotRange->{{0, 0.9972801969964326}, {-0.09922242497073958, 
    0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
dr/WoK4NpAHKsZtm
  "],
 CellLabel->
  "Out[137]=",ExpressionUUID->"c82e5f62-f5ec-41dc-96d0-1ce207949cc2"],

Cell[BoxData[
 RowBox[{"-", "0.2279426059759987`"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
trjerK4NpAHKUptb
  "],
 CellLabel->
  "Out[141]=",ExpressionUUID->"485e2260-1402-45ee-8552-f4f879d5d9e6"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
rXGDew==
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
rXGDew==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0.17367361781014706`, 
            0.9995473559213998}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0.17367361781014706`, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0.17367361781014706`, 
           0.9995473559213998}, {-0.09922242497073958, 0.17696362273988409`}},
           "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0.17367361781014706`, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1: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
rXGDew==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0.17367361781014706`, 
         0.9995473559213998}, {-0.09922242497073958, 0.17696362273988409`}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {0.17367361781014706`, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"mf\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0.17367361781014706`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against mf\"", TraditionalForm],
  PlotRange->{{0.17367361781014706`, 
   0.9995473559213998}, {-0.09922242497073958, 0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
rv6xWF0bSAMAzhGb3w==
  "],
 CellLabel->
  "Out[144]=",ExpressionUUID->"a24b350c-352e-499b-8335-3847a16ee3c1"],

Cell[BoxData["0.11278568280936568`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
Lvdepq4NpAHJSJsx
  "],
 CellLabel->
  "Out[148]=",ExpressionUUID->"56c3f7e5-e2cf-4e65-89a2-7d2f6a1879a0"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1:eJwVl2c8lv8bhqUlIyqiQqWtXxKRSp1lRooSMkpItMjKzt6Svffee6/Hntl7
e+xNkez+/q/uF/eL+/M9v/d1XsdxVlnzuSopCQmJ0F4Skv8/mV7NUz+Kn4CK
0xr9mRUTQhOjwDiHbhvSrf88l+0kwGG7OO02Yy84pcxuUExn4z2jS7BWZCbG
LwTK8fBlYK1IJV9WKRf0gu/LmH56wuQIiX9XOxEzg1/j3QbDwJLEdzhisgH9
Fg5xO7NlMJ2vJCc0VoIqR/DE1tMIfNe3sHV+2wvD00TV6GkXcPJlNmZkzeEf
c5vpVlIhCIwGs8qDcyjw4C07WRIKuk/f/rCfTMVe7vtv7L/pgJa+XNRiahj7
nDspqm098aalozdDfgIKb5+4/K0IJ3g3vO7bt6cD5LVzEfd9NQk0r7U3roQv
ILH+vVK+gTeSCp6+CogbwSi9qmaxbTbSb0pWzB2fRHejX2HC9RjCMQ5B4+aw
MmhtN7MGEVyRQKLkOP+mFTlWnWoL+0rgFV1L2vqnF0zsIuq6ldqgPqI+pPer
G5vNxcvRFdaE/0ijWpx9O/C4864hv2ApqD0fX9YtmoG1dqQc97oHoUG6WNVC
YwH73uqtub6zwaVXv/dmH67FU/Za4VmadJQR7ZhD6maxPhbX7CxrgeBPKc1E
lTmMrX73ZXmbDZOB7Zp0zGGHJSppriAcsrbnH94lpKPgT6zfNYlv+G/DJJXf
vQXsQaRern1KWOYdK2liaMQgFf+m8GYiKGKJKt//ZuGs5tvrkt/Nkaej+bO0
qhTM73U2aeujIejnvzT6JRKu1MpPIswycCXLsWC2tgVBBWw8msGhKP71neZ3
xxBG93HwdhtYgF/N52vuuU5Qy9ypul3gj30G30xudzTjofiZyZMO3yGtgvGy
9Qp4trnyjlV4ICRNOHnMdB7mMRq8lopKmEoz+zEx2o23dD4vvOmc8cxM/9Kz
78O4bij56Ed9DKrMqk7pvhrEatOVsK+/UiEz//IL26shdCj95YkJcEWu7Q2L
CNFGxK8rXl6pzUadJedI64MupAa35907lQxN7RG97y8LMW6j10WpHYqKQ0q0
50SqUJLw/AZ3mT++H3z6lsxjBO8pGZNa4iIQ3eByf9R+DO2g+kV+LRWqAndT
3R+MwlMiTkVrOwmL7mVCtS8WMb/pJzO3lo5wTfJ/e9rbwCWg8FBK0A3xj3+V
FN5eRMaOyFT/1RY09iiPsfiOwuVxvHycvRsUVS2ITd/Goeuc5EqsN0Yp6dHj
9UZ9oBbXJYvWCcOtwKq7Mk9GcV3unbrijivhpshWpEhuMyR0t2S3ai2gdnOw
cbkwEy3uL4RfituCcX/MgyaNGTiInL4fJh+AM9vLq15yo5C6+ci9wjQYP8dd
D1d8ncaYjvJmpnMwkqnniE9FYrFSWduiEfgdU5+qDck5atFL6nPy3EEvVBPV
PLySR7G19oQvzyIQSx9Dc574DuPOR2f+NvK3cLpTI39Ceh6bCqFuh1rTCCHv
RPw7OQZQ7RPzYk9HGvYE2HOlyUzjop6k4NyZKPjtSTheQNuP1g+aZn8lPFHO
/CP948AwBrifD43nOuCkPOOR3zxEPH13T2b6vA8eaqd6nrUqB8XESoPgsUS8
W1PmKVQYhWHL0tMkmghURmR2k1weA8NZiYfH9b1ReX6kdHvfJB7mNF72aIlC
edH7hhm6MpxjWbMMeRAHu/cT3jS+U5j5/KfQLCAEY1wCxzP1x9Gm+qxPwCUR
jN//pTvRjyOUha//7j0bfL5dXhuUnAG+pRx+gblysN/NFKHjnUD/mbI8bTNr
xHMMrGlGTyDDSVr/m3gE5nbeiUYajCI3a+k/JnoC4hfD2g9YD0BxVT/w+bub
BMY9v296uwxjXPyj670XoYSrl9oPVFhNIkFdPNLFOBEmk2ee/j4zgiRaUU41
J0/823c8+HFYN0L275HgMs5CAmsYmf0AEZNZfUIXG7LAvDI313u4GvHaUjy+
Z9yQO0vuRq/cAKnTS10zLklolI4u9b7Wi5xlj0daUe6oIhdaDPCehkY0G3tN
ti6h1IrN4PbxDiy3H7mmLJ+GfjFBE2WVPJCeXUy2MQjFMcfCk+YfR2Hsfk+f
4cxnZDy+oGLRMokX40ZatJMmBAutnZYp5xmszZ9KzUxNIvx5UGPw4EA/Dpfd
fhY6Eo+nVB9StldboP7dSqRJyhIq+xm560Um4Cfx1nNTJBRPUjYMxn9NgblN
TkqxKw7fjGtX7GoWwD+y98oehgJC1fWjvlybczA7KbYQb5VBkI6kj1+rG0C8
ReBq06VKRItSrTr4z+NEJeuPgHBfiG9Z7wRtLIDperni/bVMwt87z2niP43g
HvsF49DpIChnXD5Wqt0NjqI9J5IjKlBkmLr4T2gEA4KcBt7kMbBL/+9R+sgw
5ik5wgw4bLD/9lSZ8K0Z/BMuJtNKNYeIG0cv8844FF+cHzX/EgMTBeuXj1T7
EcDjq8Q9GA2mm6YGS8OdmNwe8rDViYe5Ten7yOcjmGJ+6FdO7oKw/IOsxhJT
WGgr6Yl9FgehSwn2quvOuHN2+WTtBw9csUjv5RgJweu1172CeV7I+FMdXCDT
jT/UBb22BR6oY+j9vDk6hveDxS41Pk6gNjhsco1mGgtbRKK7aywMPv8eUtua
wGEujUEZV2nCO/UTYX6ctdjqUydjC0gFM69gdJxjLPS89beWn0fDSDRNLDWY
CLJj9GMG6raEC1+c7112rUX23wPTe5ciobRM5mWTOYe3cYH3LlBGIv3cLYNJ
22JcqLBr45yNhtVdmQ2iah+k9//3UsEqF6PjLb+s/1ajX7bVqOBhLOpoI699
uV6KS/rRF2WkPEFeRwxVEN/tgbaAbuXpOOwIzXdxGhKRfss94oi1O3jPJtGH
hE/ircOBVA4qH3Dw+d5R95yCTst2oFFdAWHq754nancLUeb57MBOkiPceScv
s1bVocyM4+oDbgJMDtbyHxuaQclnI7U9WzKw9Wp59utmHFLaU7OTgoNxlq7/
yo2gKPREz7cvrCoRauuywihlJ9Hp+zxcsaAAFeuSeslnxnDlxe/IvWFOSCOJ
sTRuH8bRA/23dQ2iUODySfy/k93oHr5G8zgpGqPNr235L08g78iVay87KiDj
cU72X2YYiPIPIlKDbGDUv06ln9QP+XKKzKKDEbDbUTWSXkhFDUtEpo9xJtKv
24Y+1ZnHsnaY5Ps5ezz5mal4e6MenIIO39Z393MYacB/U2/y8XUnoNRJzAn7
P9G/si1dwOs3PGHDzwOhb3hLWdhiEiMBNBXGYjaojHt3SCSwC74X3yWnRkUB
/TlEKe4pnGd9Jrjnsgc8x1lCWLfHMMhr+u6evxdsBHa+zndN7vbhzxPEZkfC
UZlkU4GkSrzRGywzbE+CTLqYt6z5OKQE/jT0mZmhcXrVinJyEa0mhV5XJx2R
Zu+i2hG0m4+mut0IfSCEHGas7+qOoj+i+J6Fpx/kUwoVU6daER658c7TUw0k
YptnUw5k4stI6zqjcRoEKoZ+rziOgp1TmSHj6XvMu86tKhov4oB7xtFWl1iY
UJizllIPwmwiafP91/eEG/4RYnsSx0HP1xT4/U8Wjh0jOXrl9zweJc5Q8RW7
g3RG9kfG5CjORPgbVbrkEtz9OY9ZqHbhjnuLXeh9G0JYeVeSXncp6inMNC5T
a0G+o0tgkPYnPrzRygokUcOj60+m35TXQqX8wQjtuWz4tz6kiIudxkPplpzD
93LwM4vfx1pxEsxrXJYv7HJw6jQzL5f4IKRssowPjYRjo7LTq3R5DtUhYm0s
at6Ew1WGlrEfdvP3yDlqohWK18XNqm68ncjJStm5f1x9l5+DffetFuNjmYch
+aQeOss23O71dsFnZMKPUSQIPxVjNm1I4pH5J2sr2zwb9HtzTie+HEVevI4r
i2UJeJdryUmSJ9HRTp2k4+iMZs1ez7LH87DaJ8BxdDIZok8+iplf7Mdrj2fo
iEjfnXPaKv/MToTE3ecgEgPx352RiA83w5DD/MRlqTYd5EKeAnbn55AsTN5F
w69DeD5+Pqp1bBJl0QUJJCqfcLJf8pnBqTmQDo1xvdEPxsGVxdjjPGMoNzp0
qy3iDSFE8ltzK8k8tL4F3jHxqCUcSic/a/RfO+J4C6AhHozHlEYfebSG8PLb
utD79vTdXs2h3BEi4gnDjJ9fajHUJgVrK6nLsGh4UVjgfgX2z3cnvtz1Dx/B
qddXrVLhynRzmfigBx+OGzMwSDsh4axGSLR2Ctbul96zd/EHebD0Y+EHnQgl
tS6VkQnDnuhUrlvv2uGhJJx2jNEblBd/cJS5zuNzyISl/888xHpOXu3VmsWh
S+Nf46gDcKLz4BvD1GlcSNwMiSjNBPXWZ5rcoRGE6nIe0rpQiKV44enrVHM4
PV1Q7M5eixlNx+uxilXQN43NU6GxRNhap+1ASTsCP+SaCXa747AZ06fb2c24
WzkKpVk1KKnyPj99dB4GNWwXrnqHwlCl1Wn+xADSqsgn2Gd8cfBBsciBjCGk
pbNbSvCGosi+ON07tReRmTZNvELxWLiTWNZE5YzrJ+hVCkrT8Og17Z3ZYy0g
3ijlyedxJKxKbpuFCs9C9XxcJnmCF0YFNUkvss6icYWcxWcgCApal7hH8hYh
u3FILzpNlyBncponJYgI6crxU/1HQwlXNMke3/UfhehTsYYvGvGQtqx8JcFF
BJGzJe0/ATucE72weuB4Ph74HzrLcMIbP+M/Wi/dnIXfchaNlO5ur38Wlz1/
uQ2MHlK20x7mCCVyV+ezd8NYIJ+EpTIB01RhpaSME/isxlf38VoScpMqaMo0
phB2fvzvK/dYPL6RQf/CoAbWITSV6jlHCP/eGnt9ypiGe90E8+sFG4R4sK5U
yE1ha0CeGCZnQ4g5r3uk3mYGXPIGT/n0LcGr68S/9/QozP0Jo6vl7lh+d4yQ
kbgIDxtxg78hngjkFQo4xjOHpt/sIlKcrhCqjK1WDRvDrGfAR7JLqYQOheih
+ppG1N3p6iuyCIOuBOmjEIVh5CkfyO5IyiRQlPBxxq9MomqUm/encAyECx1m
3T0HcWlE5axiniXh2eik5IN/EyirevYyirSQoOd0Iu+ExxzWzd1z8ycD0f+J
V1mZMAa1qNlyhglrCIs+WeyeGUTPyI/43+FpYKC68+pGdA805vk/zPSn4d83
s1Xlq4vI6dDQjfldTSA9/utqw5FA3HJwC/VyModqqH3BR7fFXe/IomxMO01w
dNjobNRcAHtC1H/x8flo42BKo7OIAA15UJU8bRq0361TNCwuwunFRmhJbShO
h98rlaFfQGc7Q6ol8QPh634ybqXvScgT3JzNvWKNOArus57ki4i8t658Js2e
wHOAWULDOQ9qzPu7b7DUY6eSJ2CuqxZF15rZ2C05YH/s6W0n1zJoxzCz7M2J
hLed/6za/RzEFtBZOz5xgCirL0nR8W4YdPpqUxwLxpmyZNsC5m5U+ArSpny1
hSOn/DP11WrsWNUVJkVHYs/G7xNMS7MQEDqzKCdWTNhsSizWrW3D3x9kCywt
ITj1Yh+bWrwraHgUQhquRUMXJvssm8aQJf752rB1PH49kjdQnR5HcnW6/eRg
IHYeHZyu32wBRfGJbxZbXnBjXw5O6+xDYUDmhnWjFjxi6dnmCNNwy2yo+X08
Et/+UMqPZIxj68TL+8/vZsNx6t3KQ8ZJ/JMP/32evhLUIuayj7ibofmbNTZH
Ih7h4+kPYtwX8Xrh2vJe9zqCuEjyYUqdWehzK5/S5o8DT/Z9/Qe7vqPW+WTE
tckZRY+lv0cst2Hc53Kx4+3vCAy65lvRsQh57w/MZA6pGD1RJLvcM4s3+uMf
PMfDwEE+8edj4fQuz18Z1bFPw9vu03ofzIno/GvrXPQ0Enw24jTh66PQ2rD/
k1lrjfOR816WeeOosOuzf3SgmPC4qGeLVoWI02E8G5/E7UBQ3yhRvD6DvrKL
ae0XMwjqevvsHsuO4LWix0+tlAAC1QFrYcNDrXhz/6GbFG0gIhn79GKfjoGu
LLbKytMFlZ/DOA4x1GKCInizRSgYm4UfLeLXm5DBzVl7cMkQYauy7By73uKs
svBBZk8mNP5t/heSOga2bwZ8e9Oi4PvyyZ+LF5qhRcKp6RkYjo+kFWb3hKYR
S33HusGrHEWuUa8SIrug/KBHPPBtDkjeRAXa+WZip1mxidDlhozby0kF2RMw
UPX5owpXZN3VY4/rnMTXTj7z+apsSNN+UrAxaAP3urRwf0AW7is2vH5rTcRE
HL0l52gEitO4ZgXjcxF71PPkwP0AnN4iHaNLIqLr4+HfB4aiMU1ZEKKj2Aun
XPKEE1o2+E/ZupX13CjqiS3UP6644vvF5ZeOHl2wJZi4/2p3BvdB48tdMvW7
3szM/DEvDY9ZDPTrdvNmFzBddv8bhs8p/sHFDLO7PL5KkdobRtjgqQqt+tQA
nWgrRooyd8jRi71SxgBaE3n7GN0sQH7JVpR0NRNMDCmuOQOZCO1eiv7sNgma
atXhgxc94fhBpSR4agrKr2m+n2AOQcBwespPwVpIEuXDE2ijMKSpkVDP2Qet
E9N9zLOBkNE88/sm0wL+ntviKbDMRIFYsCEJ3SRspwXHOBRzIXU5KJ3+iA38
z92keiASDGO1+0k5HQmovDKTXpafhhnmW4cqDy3gW6TeySr9Dyg8K8HyPWsA
ZL8UlieSQ/HTa8ohX2Ea8todclWvy5D2uXFxLWIBEWYZevXf8yBGWDG96LmA
qGfH3e3Ysgi1fK7rSc41aHv3zP86WxnumsurpVV0wcQhh6gmYQsF3lv3shVG
cIaNQdtHyxza+jIXH72cw/KGlzmJrCJB6kW6qEdSByhJ+b8O9VWgfrP5VmvK
MIp8X30V+S8Xojn/3IQutUKRTWVVxyEOBfxkJOH2nVB2TmkI0w0jrM5O2px5
OwHVwhWmNHZDwkvi05BI3gE426itSCXHEMjVWpwGvfsh4/xdw146Gkf9Kly3
KUpRWXhG7l6qL5J5IjmOC42he4xu5bGfL76TX6i1uTqAT+MBnl7eBSgxDhGh
k/uB/dIDAQbZ/nhe72so8GgBl+0t9Xf+pqJ91Vtrp2IO+zFtMOKVBpZf1oYO
B7rh9WVzlD/2HSHXkmc5PKwOegkOd3OZ7fEXDZz36BvQfuBNrGmwKjpe9fF5
58ygieO2blhHCd7QGpneiR7Ciy/u0fVsYQTJD70SdaajqNhWHFCfTcXt+6ZG
14JLEKXw08LerhA//0h+4zkxhRxh3ezZGxG4I2R4/IvzAJ7ozixJGcWD4b6n
UhRZG0Ku7yFMinpD+Ql9lItSEdwLpjZE6CKgvHWr+xixFEe9raOsS2NwM4Br
PiW+DP0exxM0z2TBf/9T5bM8s/ClXbAMiChFX8reB35PF/E0m9/+mFURBsVs
zz0l70bPL5tRTuPw3XwSXG7OExChN1u7NJCFDg2p+fKEBTganX/1utUOAqTy
EhkuDpCeWTk6XxmC79HnavPk5tFxOUD63f63hAcpfsMGZB3oCdNl7o9JgInx
IbuYoQnwv6S36/WNQ/eLtU8X+mbgcb1abGgyE5lS6X/bPg/DbmEPw/EoJzhx
/PRaPj4Nxe8qJp+2o6H/2TBBdHkMaVoMl+dosglykpPl79LbwTvutnWqygfU
i9fDjBbycGqY5+fDPfmYvM0bRhU5jM25uqj+wFBEnX9gb1Y8govvOHLNX/vj
X7DI4XPzQ+i2b/XY+yQZdQVv3zqMzOD67ZqjhwyLkcNU0ONQ0Im9VfOUW+3e
WKFLzXue1oWoP4MzX8/mINd261fi0hQujqXRxFzzQFX447+/VzLwi/uzhHiD
NiKsE1RP+xPBduDVXbeFNPQvVbgWBpfjscmf64F85tCN0z2hTjkLsSd1nCt1
1YSHeYpXsjGND6vkctpNLujq+SPeJlIJwdM8l4YsY5Ck6Mz9sn4SKltUiHz6
Bd3Vq6cW0mcgTkVmYXg2Bo7SOcMvyEcgKXbJyHSvB1L2qhO2E3fnOJjvoqpf
Fn5b5iReSM7Hvd8V2UyO7nBxvav3eWUcj8nsrrbxvCO8Sbob8Gq1GYcrGW7z
bhRAad9m9O+j3WCQlN/5TR0D1zBDT6J8J/6ZlsX+GwhB3Jrql/n/xpD3c/Z2
lpAZjK7SKVwI6Mb52pt9GdoOKFp/xpNAtgBbobPa3h5paH6kdM6kIAt36B5M
0frHw1nO87GFRh32/9wyHqTLxq+7Ptacg21wM9Vm1mv9iZLy6DEL/wlcCJ2m
TzKKQr/nhSxl/hGcb/dYY6UIQHyWEoPMeBd26o3Hr3JXYK9dj2Pt9Rbcj0l+
a//ZFeSSM9fu3+rD/jg+WdpkfZziIl4hc5iE0nZwhea9NiirMYu+Nu8AXU75
XebbYbgvzeAiXdcFBRKFDL4RFayczTC7YtaDE/vnXbteRiKufZsuMX0Yn0Vn
/7L/eQ/JV+RqPuzDqLt5dExzW5pQ79dZSBG6AF2R39m1vRIEqvaeu81pjdAP
ZLiizWZMMORXzRk9uIg5x7Ur5nfL4TPWWTAUObnLOQOWZiGRYLnBQZhanYWo
Halkz+NAlFBQvGtpq8ZBjpI8dhUPFApUxAQ0d6NyH/WLkzrJMFxju506PQeH
2+/oPjRm7/K92pM/n8pw2lX2vUlBCbQlELkYOAl+8v6e2xcLUM3oIKb8Yhqn
/EPcJs+nEobHNYKqqvqQ3XKJQBuaBGX3wq8vcnvAusHOLN8ZhHH3N817NEMh
FdZJlK1Lxoc9l3Xcu+dhfEVLYuFLDAZJO3UZY3owK3wl0UPLHs9dHtq5aIxA
qNe2Sq0qBVZEOQXRiCY0tNlo7Zdzw56LXJ8N9ToRM+FYQWioBKNAxh4Z41EQ
mPIyRL5mgNrphaxq2xRWc5JC6mlDYW9rY570sAMdF4NWb+V6gOzeyIRu+CJ+
XrJgkvd4jIzORr/fibs+z/+LNYcvDlMMb42ntWfQ9kMl9ptDPCylziap8IxC
X0GtuKEzA7wXoyRO0Ndhw5P+p22PNQJUbth/mJxHYF2Z5POLkbhxXIc7XawF
WYbB1591+0IgvvuHct8I9lzSdu+p8gY3o+dS4X/TeEB3ZNBW2AvjzEyXo9VG
4S5RmJ6YH4n+5sP5+2Q6QVNRLNqjnoHxsbhXHZd+IsNQV+yabgFulzrvL6cZ
w33DnZmmjEhUTXgZt+kUYUfXiiE/0Q8q71mjXOWmcTi6xJ+aIZYgIr/+sVJz
HI+yLa9La/jikVkdC6G3AUn0raEndkKQ8/Aav8nP2V2ued63NywRXy7sjBxq
Hkdx+yUHIQ0ryJQvPlC5PIwxYlL7Lz8TZHxa/aKoMoaLteQ5H066Ykh/TOlS
YxVuBt7R4rJ0x90bSvTzlF0oXpw6trzkCJvq0ePk/+Zg9ELo6Hp3LP4cyJKq
a+wENZVmTeszZYKI7h8ncppeaD9/aaZVmgJlRdL+IOcxRBhSPKM5XUJY+ObE
yLAwCNNTGzs3yPxBUX894FD3FPZpyoYEq7qD/nSh1DeTWCRs8t0k/RcFCU2W
w6e6inDNwojv5o1CzIp1cziVduIY3au+ds9svKeqZHtYO4ntQ68qlBYT8VDz
x1akaCkorku4hbikotzzpxG9fQKORFpWvNMvRSTvV2FKk3woWMe8q9gXj9wL
XPsyk6twxjanZNY4CMs2J0eJX+cwXR7lP7vXCpW3pY/RXhjD39WFM2q1Kaja
zH6v1lyHytnFvTE1wfAtzXfo8iTA5c7h/rbTbtgeMNNufz2G5uWhglf6GSB7
pvFe6sU8tjsKmlJfxOHOAqvu64gxXHvevfX/eSUTvdgUN90L0QnhPNHEI5g/
UWE5LdAM0/ZMEpfLXji0RRpfLjIEvfeU83S6xUhe2r/9q2wRupdZvU4ZfSVU
6vE55JtOQ4fNUIVH2AeyWiLpVPLZEJ3VctBS8kDHr8PcQvm7+44k1VwruRp5
9S8/O52chrmOBc3fc35oo6g82+xZC+eBekNxgRjc0C7eYyHZBeuYpYCdp9H4
eIGYqPxkHNVj3uxBOmnIsLq93ZKUjIOhqg6cYXEoZXSpoVfoRSU1qS5Rw45A
TPBm3Dg5jldhffZd5H7oFPxR9pClB+6PnQYDqtwRz511LZNpGvVNwY9kKiII
dYKPNMlSOrE0edR++GkK6LKZyF0GxzD4jbKCxbIcy/Erpu4WjbBu8tZS+0TA
Gd2+e2l/O5H6gIlMPd8ZnNUvfQxXK3H4xfpI05Ek7H9VJUP2kwhZPS37culq
+DmVcri7TIA7coj5+soXUPmLl9tv5SFbSENNUtobJGGlTbfNmxCxWHh+7VAZ
3pak6C08H4bl3AJHdXM2wazoGpOQQzu4nt7aufLPFX4lh1qt7Xf3BVcs0/d7
wfB3vVAjxNwJjbUsirRCExRMHDwisfv/Z6h9bTdSSYKeuhPT+FQRetlvet7c
IKCoT420OykP2jVxdU6n/bAQGuN4+Mc0gvn3JXTXOCKqOv3kid81IDloR7id
FgqfHxRKZI+mwSv8qyBkxB6a188kbg934Jrc2j7uUEP4tqulnOJZwKx+7w31
e1ngsspjoLhIRLHy3tfl8vG45fs0ns97FurbLe4WfZEQWm8YHHSZhJRZUNr5
ZX/cnfIOflwxgkOFWV11dpGEL0IOqhLm0/hHLJAu0f6EnVLad7xVY1Ak8XZ5
txSMeukj9pLWY6hhdc0MCNXHSB+3mEv+FB4N2uuoxMTCt6piM8t4HGWf6+L5
PoRj72K8SMZIMyxrbm///C99l38qX1sQexHzlK8mpMoX31ymukL0CnY5VvhS
F18R8txdBcbC2kCvtz9y7EEYqCZUwpTSF2F49coDzpv+6ObbZvv2rge0OjL6
h/VT8UVwxEYqqAf2KaYVKktpKGRdVRfdnIQp+57Ncy0laBRc9zz/agbjIwZG
5rlJyM0JFasqHsUDK3YPK81ovCfn0+wPbUN8gnrpGQ5PxDNU07TtWYQTq5jr
06JwqMkd7pKQmIZUlpu7/8WXqL/ImxrU1YqhQRoyk/vxCOBycrO/0Qo6Lh5r
qYgAFM9POd/KDYHm1PH1sBOh0Cm99Io5oAXGAhY1FKkeu37TEU5FPwjaFxVL
rBaZBG+hgOVEtxmk6DzssN9Jxmtl1rLTL9Ig4kXe565VDudmizME6gms8YdV
Hi/Y9XN6Ws7G/GlQd9Tan33mDlfxr/xJUVOgWzoovrmWBvMbxqnB3iPY+naL
sbbFhxD3TbhM7vM0xM9RmWpfi0Vf14wSxfthHDZgdDR69YIg19V67uHpRUSr
6otTEZMJplpr9Gq9BdiXLOPMRmoFc07fvAs5uz79wjrbazkefRrxi9kkdZBU
oswovaOH2so5df+RERS+yl/YFxIAyVrK8LP+w6Bdft7/+7o3uGoGvtRqjOMT
U/W2vm8pftEGTXNxjaH9Yx791U5rgmZBnH0/5Qy+8D1KUbaPIVhpzjmvFLbj
wHHa90IZVvjiXvXZrm4MNNfp7hT/C4Y9cfaLqvEQ7BLE0wc4PXEndJHSeqAX
Is8Ussml4nFlNS+rzmgKZaf3WeOoG6GCTtWo2HYKMaQDs4GbH3BC0vONlcg4
zv3qIF/5lICl/Mz59V3OnHzPIajoFQXX9o1HWq1d4PO6aqaxNxy/hfYe87Dr
wdTwee1cXjNCUUeCSHROB75K2p1dLCmHwUKgwzTzMO62CBwUj9jdK7h1RNxp
HNMXcssOUHmA8Xpp3lp3P5w3WeTGuAvwT7iJsaqkG6LkRrznh9MI/LH3ePlj
xiGWw9xw5II2XIsDLPpFinDi6pj58oAwIaB0gYzBIhO/bZ9V/uF3w8GlhJIC
5kmM2GtG7jtQgCXZgbHHp0ZA+NAvL6cRg96iJpqCmFJkHBjQDTwWgT1dqqGL
uSMIW50hPRiei+YOxwPF8wuo/Mhew/HJAkpkso1hB9sgEUHCbVEViXVWMXbj
uEL0P52RPCmXActTF5WihTMxN+4qcXo3X0VVv4ufbzSgqCN4v0h0IjaqNE9/
dCxAASU/+/fENNhkNxR+yp9A0zEG3jc2kYRe+ihVuwvpILlmQ7O9oYk2sjMc
7vuIOOfA4S9t54Xttp8EvfsjyPhrmpQlGYVVjdBLAzfn4OSeajipbo3/JAKn
375cwAcx1uQGBiM0CCooJVNOoOafEjU1byq4eP5JN3RN40/up6K4e/44Hluw
b708F6+3vTZ/B/gjvZea9irHGOROva/Sm42DhMnfxtvFM2CY7L3ldykAYoYZ
FjP1c/BsOftRZTkJt9lT6y6Wz+7yGVv/niB/7MGnq/qWU/CXUcxTmK/C7EJd
4QHhFijZP7pspFIANdZCVW/HMYg8zuPxj7BAOtTDRq+04KPrxt4FksdoKfIz
pv9vHNkz+we8eVwxmMpJzR5SBwkmOcVHhnYQYvzv2vDvXni850scp47HTN/H
lA8RnZDMdQ69RRWNl3nMW6ai0+jo/cVI/9Ed08YbnOx8g0gTCw/srzbEa66l
qOqJcURmNZ05lJuAN+9NFR2iW1Ejoi9ZzROK+JDe1pmBSRx9LnTpcm06Bk3N
cmYdZyDdeEAjNk0Fx4zeHLjn5ACGfdo7qpoeoDTylhuI70FwdkN3xOxXXOm6
+mbIcnHXzx+xH+NKgW7KR1aNwgUoKHMYfB2JI/xL/qzKeImI+CH3HMWeeMLm
ygeFYO8x1NZruGefSAOpY7Tri/szeE9RORppEIof+R/G/vCN4e6/b/3HXtTg
E/sh5zeTzVi5KiEbrV6MUZUem6jCJlwOWpT9V73bN1989tlFzGFCxCSJuTgB
Ew6EdxcftWL0ggthiyUGlSGNjLdiZ/HmTvx/ITo5KI11vJ/TvgjGzayBxQUL
grU+mRVrbAn2kAcdCXKKQ4t0A92zh+N4G8iS5OuZAre105fZW4cR0O5lmfci
Y3eeXw4kXllA2I/8xPmcVFjmnbmkKpeOZYbqBI/fu/e130QlxK8UCY7/vjR4
+OIxq5t+0c48CsOTnxwyioaDgnCEslor3t7+4/qPSRxm6pW9nAaLKLi4NBm5
EoBfhcI3JM42I+yiExaog0BrsHyc2XEUZCcLauKzInZ7peIKu/wcVu6w8/km
h2LJnpTdti4cPEfTP/L884HXE/1hl445dI6u/TSgcMDV8QD5euVOfCp20DRT
LsW7vSoX7jtNgLQqgOSrbj5e1ZLfYdleQCS74IDfjUT494te+kLZB/E1o5ik
blf078UtyeNj+EJ5P0lu9APhSSDPI3XOOfxbDTLquueGTqrvp9d33+cYGLUs
+AejrHkvG5nfBCg/nRR+vlaCJ089mIdU+vGP7Ugza2MY9jqs0vxsnUKX74bi
BJMk3FL3hTF0zcFsmrS0kTwex4M2bk0fnIK+pQWdKn8kglJPfhF6PgItwcXQ
n299oa78eq+12AJ6m9lmFpmy8IbO6GNCXg1SpQxsKJofEjx4n7qUJlaAc76T
yo80BupP9l45zF4Ho2J2IfW6BKgd8C97SDcMvpfbh6x8QgmCqnb2kcQsLPnq
FuqUhoC+ZOyvV1ElBrr2CbINBEPhzvEox9kuSCkOBMfF+2CNkuXQs8Fy1EQP
zA4S/TBoxBVmxDsK/j5rn+28GFw1Z5VduDwFr/S3HhLnGpA7FXs6kXqXN+/8
sTr9yBNzPbSxR5LbcXZZrPw6aTpe/jrhEDbaCjVBAdU7HV2YDuvbMjdsgcC3
uYOL91PRUxj13MWtDVXpe/ptfnngh7Oc81BVCeIO5sYYXfLFx52SptmRVthd
DKx1rbhNOGopY/ZtPwFNJ6nW5VMisbekd/L5mUZwLyYwJtWnwp+Lm1HiahaO
vt/4fkcoE4zSt3v5muehfa5UpvzgD3DNs134J0ZEZ4JuhGdREKzCH6S/ksyG
Vlb26SrHZPRezbZuZFnE+Zoy0kGSaDiWstbTvRwAqc4p4R0WNRApskaFSwvB
tkJ25EeZE54EKDQMks/B8m2c9eIVL5z2C/11NJ+I+2/PWfkYJ0BHznbr5bV5
vL1Dy3f1RxCic5xVqwdi8fMQq9T1T9/xjK06ZJAkHIQymZt+DPk4NmY2sEEY
xA1wHRttDyC8OMh5Z/PBDP4Q91JtyWYRDuoxLqSFzeNojqD9qaEguMoaHlX7
NAW31TerJ0mykeej0+HNsoCgx7Miv4XdwS97nGKLagBG7GqPuNSyMWs6euNq
wgiym2JCbm6XYumpTf+cUhP65nXr0u+a4lqp+u9Jx2pw2ipTmjpaQPRdRuPG
8jSyTZvrUi84YYW6VN6Psh1Uos7LL1Pd8PoYlVykzALCnxucvTeYAZ27k1Lk
NpXwv9FtwBrugMmGUZmbjRNIJhacZdH3R0dnyDyLbBs8zpq8PcSkDS83p7t1
fi04r7dmX1HgDbsO8fThrRmo3RvcFGbIxEuTg+V+Gv0IrGzj86cux55ZhpzD
v0egpP6LV3stCob63O/zS4ko1L4yKa7qj9Hqkukt0gVwztj+vTebQ9CJ0Jmi
OFCJo4rin0U74hH2zsra8vAUWq1Tsl5VlhHGYmgTNgfrkUiwP+vFZ454vmcR
BKHdvGUU/kQbZ8KltP5qWX0/nuZ1r55e8UH6m5af1IcmsXXsyJzsXBn8iB/P
EAcr8JVDXFOANRWNRx2oYh+NYIX7i8q0cCh+xfXL5vzrRNr0y1Izn3i89TaY
chTohraBsuKt2WBIcNWV6YqNQT38aMaRci886Gx8wSOehziOMu5/8gGYjBCg
5ySZxjul11dF7d3whpGaLNyoFqvzC65Bx/LQ9Pmwr0TPBGRO56wmm4Th/iHT
byfza3EqvSDhvZEd4ZtqBZOcdRlUZqgac61zIc2//9RGfBeS33Tz/MyvBl+y
yJGqZ4sYT2yIlOrLAFOCvjiPYj20JQXOW1nfQustZeX6+7OICBzbJDF6At/P
qftkA2egYE9mcPG5O2FFQa87+FA9uC6cMHnMHoGM8wmnXkoOQc6vwoOKLBi/
KMe8jacGQSa9eZpLOxV8d0tlZ6fm8ePBLUviSjicvx/jyT0yBLPw5wdn//6A
o+oyiyDdPB7+U6G5TFkGhRx9dv2xXpxneRwvSleBX7Ofld4cnsMFtlUBi2g5
+Dic0ql1rsPag8Nh57oycOxhXjxDTgWuKEna/LAIwt171+KMO8bx+5mVS0iK
A+Ff/vernl/H8WJmiWYvtT7hVPTOm6DkeVCYrT+33OU/EeqAsQMP5vHmqc2J
mn1VeN46s+fq9Sks6nGKDmd9xKJx8Z4vAuOQFuugpNTe9RXaMZ26w95Q/kn+
w1TZDsnhEzHOvjW4fkl4Y80jC9upA9cZPFuQbDo+Q/c9Cz3qvZOnfo3CzP+v
2veXkbjmu3g361gX8tkCru1YpcHs8ijNx8FZ2B0+v+KxP5wgMGfC8vzEBMaj
PjWtXf6OGU5P/ob1KRzg+7sasr8RT7+umx7JKEbMY5X+E62x2OogmfFzHYeC
Uqa/8qM0tMaJJ/SEDqND0Glp1SMc72kL3u6lm4EHpYqOT7sd1i8Qzv17M4LU
1rmV0rvFqGVxvlJYTYTXQaKpEqMfnCWKlCjTWnD0tbtzVJsHQTDy6G93q1mU
BYTK91umYrIq1DbNbQLpOuN3a9JdIFVyNFJOagA4Y3Jl1qYCdt1UiUfq23Ht
TL2Hq18KDPk//bd/93te9fLcWusxEJYQLiJdbYX54Z7XCfzheGnD8lVpuQvR
W63FDaiEAgsJU8+ZOdALV55jK4jA23G12vtKY/BUUuUT2PXn/vcB739MDIDt
opWs174kwidh2ybBpxPwCZSYuH/VCwf2GRU0Fs2BKyeDU70uE+T3ahpevGhB
XX3c5sdYIxydIXLxfnbCF7023SUSN9yx77jD/z0BrVN8QQ7HyjD355TzVGg/
OJ/dILsVakcw5vthX8tLxIRZnGaUpDZOK3xTrA+dxthOR+TZJk+wr4fS7lRO
Qe/CtibtYjimyQ/Zc071g2ASPLoRk0FoSqK4RPKDiNhx5osO8iHQl+ZodHs7
ivCPimdpXicRuAbY0i4zjoL3xdnRwno9CF+vnggqGodjlHaHbIw/6rZaf3zk
GsWXvlWzT+nfsTqbkHrVfg49i/JXLQ+FgNuI+iqDSzuKuuk7k8uCUPurxaff
fRz8KGdN2ecA2bsXaNJrSxHjcXtuzCcax04S3ih+ncDQaz+JTKYYvPtRI9ye
PQyKGEvDg/QhiK2ADm/wHF4fSXwtR5sAn4ctP8vfzCPShmmyMiKbcLRSd5OC
qxKPOb5L0P0qg7VVwO32xGr4Pb6ePzIViNBVz4CJn+MIukq+Ikr/DjRD/f1H
h6rA/Y5J9usjd4gyZIUIWc9gWZfibE5pJgzEjlpG5fbh0kHa9lH3aNwbGUkq
8V5A3kKE2LWUaES/YF0TveIDdrqhVkMzfbSpX3acnByCwpWXobUjoQS+eHEj
B60Y/LisKrRdnoY+w86WcWciak6xXh1Pisa3/YZ0j2Ua8EpsVb+XxgVPZIgP
I4byIX3gvSRuJsEkqWTd0KAfWa/XW0QaLVH0NKGp2mUKV0VGe4veR0DkXvUe
xrvDuP/UtUr3iA/a2RpddcyH0Cj5KoT7WjIMFocelVcM4wnptfDDP45i8I/h
adeCNoR77TDJe7tCXbPpoVHXDGhJfrFEBwaBrKBEmfJ5O+4oRRHppwN2fe3g
WSaG3fsdzZhJGM2GW1J07zXmBdAqKfkSmFxQa+LI3JIzg3uXgn2Z41wxX+lN
4tE/jpfnJPY/tk+C+nW27oOcC1jUkVw/VeqCY8aul3UVqpEb+DcgXicKGz0H
97AGTkN3fSvFuzMHETHGEhKf5/FyWivGrTSVwEd7aWTQbAL6f1dffyC+wdtD
+4o+jc9hVjhWwfdCCEaWHQTkGYioO5f4NQ2xMF86wv1pehYTTCfT7xxMAS+p
UlvRXC9e1XWWl2hYEMjMuJee1C3g9kYkS9VdJ4JHqj43x+lZjHztHjTwjEDm
rHTzf9ltIO7TkN8ZjABlnwZn65Xd85h9Mjp+Kpwg9MBYMSA6DbQLZ0TN7iXg
s+RlP6Zjc/gjJ/ufQlE6Rg882xblmINpcdAjjZgUWDEICXSwjeNH1EIzl0AJ
rn11StDuagIbdwq3t3Q8pFTEmC/cWoRAWIqzh0sm4X+JIEjr
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 0.9980225786086534}, {-0.09922242497073958, 
             0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 0.9980225786086534}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 0.9980225786086534}, {-0.09922242497073958, 
          0.17696362273988409`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"sigjm\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against sigjm\"", TraditionalForm],
  PlotRange->{{0, 0.9980225786086534}, {-0.09922242497073958, 
    0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
vv79uLo2kAYA0cKcXg==
  "],
 CellLabel->
  "Out[151]=",ExpressionUUID->"2a065d00-9660-44d6-b8a5-d90e39b0dff2"],

Cell[BoxData[
 RowBox[{"-", "0.127120928842348`"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
/ld3Sl0bSAMAz72cDw==
  "],
 CellLabel->
  "Out[155]=",ExpressionUUID->"e99fce21-604b-4580-a53e-1072b59ba73b"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
AuOdUEktfh4eUk74HzZBXJY=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
AuOdUEktfh4eUk74HzZBXJY=
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 0.999992901972455}, {-0.09922242497073958, 
             0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 0.999992901972455}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1: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
AuOdUEktfh4eUk74HzZBXJY=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 0.999992901972455}, {-0.09922242497073958, 
          0.17696362273988409`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"sigjf\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against sigjf\"", TraditionalForm],
  PlotRange->{{0, 0.999992901972455}, {-0.09922242497073958, 
    0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
fuDxSl0bSAMAzhOb2w==
  "],
 CellLabel->
  "Out[158]=",ExpressionUUID->"71d870da-c728-4f26-bc91-e7b01a30cde0"],

Cell[BoxData["0.3183351638026506`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
vrHyjbo2kAYA0IacNg==
  "],
 CellLabel->
  "Out[162]=",ExpressionUUID->"f21b0f82-4e85-4e38-af1b-9c7b9003426a"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 0.9995182032858193}, {-0.09922242497073958, 
             0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 0.9995182032858193}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 0.9995182032858193}, {-0.09922242497073958, 
          0.17696362273988409`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"taum\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against taum\"", TraditionalForm],
  PlotRange->{{0, 0.9995182032858193}, {-0.09922242497073958, 
    0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
XqLGq6ENpAHGHJqh
  "],
 CellLabel->
  "Out[165]=",ExpressionUUID->"d9c9ffa3-ee30-48ee-b2a5-cd33cd9e9aa1"],

Cell[BoxData[
 RowBox[{"-", "0.012237721492876831`"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
LpjMr6ENpAHHg5rc
  "],
 CellLabel->
  "Out[169]=",ExpressionUUID->"a5b08077-415e-4c76-b103-eb7e6f8d5e71"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
UkHk85P2eJybJm47qDSEFpuUrDcVpQSSfqE7jp6jSCTYX/Tit8BFOYuDRfEz
WJGSW4n+moljHnfY2lhL8SKva/X8sg/otCf5SiyrsX3qxKzMbCkiJfpvBW8N
4guniOajq6kI4qHdYPQexzK3ltKUUCj6//Ty2n8dQtqUdIm5Tzx2OUWqZBrn
oWP4TuHWTDBEa+2Km36O4EP4yYwTZV6INzH0OTbxG3Gcpdz/ZAOwdaUv1ax7
Gu8V5Vmf2LvBbKXI8AXfDFbn5l2DTuWhrqiB6MGzOkidz1lNNgnDhrOsrWbA
JM6mFySoGdsRDJ6/o/30qgRK00cbcm1yEfCJXlmXdgDJb7t46vOrkMFkdlBm
cBJjib8iJXoyUBrSdLKZZBY6rx4xWdvcQqqIwLgWUTciAke39hk/h9zBYwor
oVOQsz9seEnMnSDFEJ64ltGAm8y0Jk85InCHTppl0HIMr/3KPY4eDka3fPYh
O4lpHJbcOn9TJxXcPseubYuN4cf9W1ZDy+HQt3KWZx7ey8dwMZKZtR+wLLJ+
KvBkCg/+KVFcOVKKy8ddyCbsf4OJ4Wn8E6pyPM+iivBf7QMz++ojy+jXkJu3
7rA2WsD6/WNhjJ0ZcMszOb6lNQ4WxVe2PyyD4LFqXJrSMYWll9YuISkOBGGr
ngXz+lmITy9S7D9uQGAkvWU+rjgCcvMNMas9/itJm8hfOpOKty9saasPVGLc
O6kpTOkXFvS5ngxmfYTYe17jZaM6SD5rP3JEJxlEVcb/zkbl41092Q/Td3ag
VtrZ6dyYwvXLQpvrHlmwe78RL/Z3FMmmY9NUzlk4U/Qu3LVzHub+a6rO0pF7
PvLEwat1EvnsAWy71mkgOvaW5PbgKOyOMS17HAwn2HWrxsttTWEs6lPj+hVn
ZNGSUSmKtuAQ/9pqyMEGGLp9VNX3nEfMU6Ve2pZY6DGTfJbk6YacYqb/u8dp
iOXe0s6PqUG7gOPiqkc4Dsn+CZNXWoDHESVdnzY7hDO0FXy6NovUltnlkjtF
KN1/RJSg4AovkiFTxXN+kH740TaMMIST8u5OUa0eBL0jUuJ0cbMoDQiV7bVK
hUuE9Hl1xyGk647dqU53gaCgzW31A+HABROWGdty3KFnO73xYARsF+o8XP1S
kEf5uiTIKx9edbLc2hsx0Awd4Ti7bwoWx37LJzwMR8ANbRvp5RxEb7cU/UIF
KLJJH5ozjoFaqIKRvWBvvgzqiSifDsJTUYX/0Z4/Sz34JFYkNw/2S9YyXgeS
CI9uv3kcozAIn0DR8XusXjhzrlqtnzkCN3MyuD7UZuLmuwSBqPpm1NbFbX2M
NQZtqON/TPlT0NJv1Vvc54YNXvVmutBqtEzyBzmcKsV9s4LIavlJcL387/Ct
UDuCE5oesL1pwbh5nGbUKx1IHc1pJPVtxehue+TFRk/8lrge2UU8Cn3mHU3K
hXD8cDEwNq6aBsEkeGQzJoNw551bwI9js4gdo7/kIBsCs0UPLluiib07qXCR
Qj6JoLx2f1+L8zTuil8cKazTh0BtRWrC0X58j9Jpl4nxx/Zrj82Dsm3Q6lk1
/5TujPxHT18yy8/h94IsqxVpCK7OJ5tamJXgZxd1R3JpEH5tZfilmQ3jIcqu
phxwQDjJssPjtAXEeNyeHfXZu2/VY3SST2cwIO8nmkkXA8kSg1+x7JMgj7Ey
IqEOwabEot/G50nIn0iUf02ZgNqbSrtvQhsRaUs3URGRTdC/fGvE73AnnnI6
i1L9KcVXIlG3oeEh+D29nj88GQiDpsAXGnJzCGIlW35C/R5Jju1lGsxT4H5P
J/PlsTvEyN/iQn47/uqRX8wpyQTv4vPn6fyjuExC2TbiHg3X5ZpqqZ065M1H
PGNL2fOBALlamc/d4KAaaDEyN8BhEfZqK/dfkGORDq0ZDiWQike8Sq2cw48r
KoI7ZWngDKIKPkkIR/XZq6xjSdFw93njl7g2izfPVg26KVxw+/rIyjLZPCQP
qb3CjSSwGI+0bgpOIUt+o1m4wQrMAjqWny/1g1V4pPunWgT4m6wfNOe04t4L
10q9Ez5gvv6Cnde/Ew2v3oRwsyVDyHdv0Yk78JyYLfzYj5NYPbJgfEgrF+Fe
u3Sy3q7IPqe5j1d0GJT7/jBEBwbBurNWInqPv3kVo4aopwKweXPK5NRAJLRG
MqYTRrLx+cq1Mh25cVAqKvoS6FzA+9sv1w6l4Lsc7Esf5wrmvzFHBGvrIc0o
evCpfRIUbfo3feqnsKD7auNsiQuojJ8c7vv5G7mBawHxulGQPSwjtGhWD72N
7RTvjhzQHRgpdizsgPSUdoxbSSrhZpDkV+/YFhisrcqrD72Fos7KwPSiP2aE
YuV8mUMgsEhF/Ku0B7WMiV/20gUp+j6v1/eNY5zuTDovSQrEzqlYC3oX4E1t
R1mxhiVhtG056sS1ItzejGSovONIoP/J6ak9PI/hL139hp4ReLcicbYutgxD
BzRkd/sjkEnrNfpyZwLS5p+MT58NJ1AG7/41thgD5fyFJ+Z8CZChpzagOjiA
ldcy1+R+puPys+RPv3N7YVoU9FgjJgVnTEoeD3e34EfUfNPNR8VgSgy91sy/
x2vcKdzekvFQZq0k5PD34VFYipOHSybhf0XVLl4=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
UkHk85P2eJybJm47qDSEFpuUrDcVpQSSfqE7jp6jSCTYX/Tit8BFOYuDRfEz
WJGSW4n+moljHnfY2lhL8SKva/X8sg/otCf5SiyrsX3qxKzMbCkiJfpvBW8N
4guniOajq6kI4qHdYPQexzK3ltKUUCj6//Ty2n8dQtqUdIm5Tzx2OUWqZBrn
oWP4TuHWTDBEa+2Km36O4EP4yYwTZV6INzH0OTbxG3Gcpdz/ZAOwdaUv1ax7
Gu8V5Vmf2LvBbKXI8AXfDFbn5l2DTuWhrqiB6MGzOkidz1lNNgnDhrOsrWbA
JM6mFySoGdsRDJ6/o/30qgRK00cbcm1yEfCJXlmXdgDJb7t46vOrkMFkdlBm
cBJjib8iJXoyUBrSdLKZZBY6rx4xWdvcQqqIwLgWUTciAke39hk/h9zBYwor
oVOQsz9seEnMnSDFEJ64ltGAm8y0Jk85InCHTppl0HIMr/3KPY4eDka3fPYh
O4lpHJbcOn9TJxXcPseubYuN4cf9W1ZDy+HQt3KWZx7ey8dwMZKZtR+wLLJ+
KvBkCg/+KVFcOVKKy8ddyCbsf4OJ4Wn8E6pyPM+iivBf7QMz++ojy+jXkJu3
7rA2WsD6/WNhjJ0ZcMszOb6lNQ4WxVe2PyyD4LFqXJrSMYWll9YuISkOBGGr
ngXz+lmITy9S7D9uQGAkvWU+rjgCcvMNMas9/itJm8hfOpOKty9saasPVGLc
O6kpTOkXFvS5ngxmfYTYe17jZaM6SD5rP3JEJxlEVcb/zkbl41092Q/Td3ag
VtrZ6dyYwvXLQpvrHlmwe78RL/Z3FMmmY9NUzlk4U/Qu3LVzHub+a6rO0pF7
PvLEwat1EvnsAWy71mkgOvaW5PbgKOyOMS17HAwn2HWrxsttTWEs6lPj+hVn
ZNGSUSmKtuAQ/9pqyMEGGLp9VNX3nEfMU6Ve2pZY6DGTfJbk6YacYqb/u8dp
iOXe0s6PqUG7gOPiqkc4Dsn+CZNXWoDHESVdnzY7hDO0FXy6NovUltnlkjtF
KN1/RJSg4AovkiFTxXN+kH740TaMMIST8u5OUa0eBL0jUuJ0cbMoDQiV7bVK
hUuE9Hl1xyGk647dqU53gaCgzW31A+HABROWGdty3KFnO73xYARsF+o8XP1S
kEf5uiTIKx9edbLc2hsx0Awd4Ti7bwoWx37LJzwMR8ANbRvp5RxEb7cU/UIF
KLJJH5ozjoFaqIKRvWBvvgzqiSifDsJTUYX/0Z4/Sz34JFYkNw/2S9YyXgeS
CI9uv3kcozAIn0DR8XusXjhzrlqtnzkCN3MyuD7UZuLmuwSBqPpm1NbFbX2M
NQZtqON/TPlT0NJv1Vvc54YNXvVmutBqtEzyBzmcKsV9s4LIavlJcL387/Ct
UDuCE5oesL1pwbh5nGbUKx1IHc1pJPVtxehue+TFRk/8lrge2UU8Cn3mHU3K
hXD8cDEwNq6aBsEkeGQzJoNw551bwI9js4gdo7/kIBsCs0UPLluiib07qXCR
Qj6JoLx2f1+L8zTuil8cKazTh0BtRWrC0X58j9Jpl4nxx/Zrj82Dsm3Q6lk1
/5TujPxHT18yy8/h94IsqxVpCK7OJ5tamJXgZxd1R3JpEH5tZfilmQ3jIcqu
phxwQDjJssPjtAXEeNyeHfXZu2/VY3SST2cwIO8nmkkXA8kSg1+x7JMgj7Ey
IqEOwabEot/G50nIn0iUf02ZgNqbSrtvQhsRaUs3URGRTdC/fGvE73AnnnI6
i1L9KcVXIlG3oeEh+D29nj88GQiDpsAXGnJzCGIlW35C/R5Jju1lGsxT4H5P
J/PlsTvEyN/iQn47/uqRX8wpyQTv4vPn6fyjuExC2TbiHg3X5ZpqqZ065M1H
PGNL2fOBALlamc/d4KAaaDEyN8BhEfZqK/dfkGORDq0ZDiWQike8Sq2cw48r
KoI7ZWngDKIKPkkIR/XZq6xjSdFw93njl7g2izfPVg26KVxw+/rIyjLZPCQP
qb3CjSSwGI+0bgpOIUt+o1m4wQrMAjqWny/1g1V4pPunWgT4m6wfNOe04t4L
10q9Ez5gvv6Cnde/Ew2v3oRwsyVDyHdv0Yk78JyYLfzYj5NYPbJgfEgrF+Fe
u3Sy3q7IPqe5j1d0GJT7/jBEBwbBurNWInqPv3kVo4aopwKweXPK5NRAJLRG
MqYTRrLx+cq1Mh25cVAqKvoS6FzA+9sv1w6l4Lsc7Esf5wrmvzFHBGvrIc0o
evCpfRIUbfo3feqnsKD7auNsiQuojJ8c7vv5G7mBawHxulGQPSwjtGhWD72N
7RTvjhzQHRgpdizsgPSUdoxbSSrhZpDkV+/YFhisrcqrD72Fos7KwPSiP2aE
YuV8mUMgsEhF/Ku0B7WMiV/20gUp+j6v1/eNY5zuTDovSQrEzqlYC3oX4E1t
R1mxhiVhtG056sS1ItzejGSovONIoP/J6ak9PI/hL139hp4ReLcicbYutgxD
BzRkd/sjkEnrNfpyZwLS5p+MT58NJ1AG7/41thgD5fyFJ+Z8CZChpzagOjiA
ldcy1+R+puPys+RPv3N7YVoU9FgjJgVnTEoeD3e34EfUfNPNR8VgSgy91sy/
x2vcKdzekvFQZq0k5PD34VFYipOHSybhf0XVLl4=
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 0.9995279693039415}, {-0.09922242497073958, 
             0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 0.9995279693039415}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1:eJwdl3c8l//3h6MhNFSEisqoJPKhJKVnKaRFMiMSEpUtI3uEjOy9996bvO2d
vbL3Xsleff1+f91/3o9zXuc8z3VdfKcppkK8b98+wf379v3f9+hF6tdOg1lQ
clynvrBsQpCtjiHpNWlBus2KmEwHARFC71dM+n6DS8L8P/KpbIyfe/oi224C
Y8yBr3n4M5By66zcl4YiUAuoldLVeyKLT+oqy7cpTPd/iXfrD0PhPzaP5qoR
9Fo6xO3OlILi1Ok7/naNOJojQLv9IgKWRp8aQm9PwOj8kEr0lAvYKVsDStRH
8Y++1XQ7qRDiE3/tB+jaUeBxt/RMcSjEaF/1v3AZxH7ue2/tzXRh9EbyXb5o
GA44dZBXffOE2otDZc83hyCn/NxlrTycQPJDYPVbTS3IamYj7vlqEjJaJsmY
mrqRWKemmG/ojZeH/ngS0c1ihFpFs+hbNiZYj6kw0gyiq8GvMOF6DOE0oYKZ
vHkS2jtNV4MIrmg57aL/zbkLOdYdqvMHijGnrv1WrGICdBzCH/QqdCAzdkpb
7r9BbDUV/Y0utyGkX/qsGPFzGk877hg9FCjBCVUtjmzOSdjoRL7m3vAgVEwu
0LSFteCAsv6663tbNLb2ZDPJt+IFR43QDEU6Fhdu8mostGBjNK7JScYSK3M/
GLgd5jC66uzLoJwN7ZsLutGcndhliEqaLQgHTQZz5plzvShYifVjEzXDuSCG
2ENl7eAIIvZy7VGE1CutJoG2NvQffbgltJUIix8M+5esR3BRU/n6K2cLrBb2
bJMNTYFeTXeLsi4avFOlVsVd03A9/u55hHkGzhlnv9zWGUFQATuPZnAoaO+b
zZmNdWPkAOfdLkNL3K1Z+C9BYAjHpXgrbxf4Y+TBmQYO4h48ELkwccbBGd+v
aL8Xy1uAZ6vr3dFyD7Dvd4ksnB2ARYzGXSsFRbB2+5zR0hiAMpWPuDeVExx5
SEWt5IZx3ejV4x91MRhrs2H4kVyL1UaWsC9/UsG0uRBIUT2KdsU1npgAV5y6
clZGKrIf8RsKV5ZrsjEgzl6i+WUGqcFteXxnk3GT6SeB0b0dY7b6nUd0QkFO
f76W+PksihPE/uMu9Yfdb9tBWZN4qB05l9QcF4E1s1TTwv4ptOHoHzK2VGiW
/snWS56Ep2ickvZOElhcCgbto/owt+UnNbuejsAJT/Y/TdO4+UjugYSAGwqO
bDxlufMbGbvCk72szSC78qGIx/oXXJ7Gy8bZu4HuCa8H89kh6DkluQ7VfUV2
zNfJcO5RHBfROxytG4b5Fwpt1AmVuP76/QeFXVeC6FGZb8+F5yCqty2zXWMJ
DsPj15quzqHZXVxIWuQb1j4qjOYld8FB+Py9MNkAlAf6pEvPpEDixmP3ctNg
fBJmUz3um45R3XdbmU7BeKNpoed7dAzLFTXNGoHOGG5SSo5+NYJuYp8zjCRe
WDl08DnHXA+215/z51kGYthP8/Uuzwh4Pzo9bCVTxpjIZrewfRe25ELdSFvS
CGtmtKf122ZQ5RMjTtSehmCx7WN8a164pP9KYPZCFH6aruVcvdOPFnVN8zVR
TyyUcslZWg6jj1tsYCzXAUuXDy0ZkA3gxXs+qSkmHwh7GFH5N46BfHz5l8Cp
RPB0Cf55EpgMo+bFF0kUERAXsQ5Nl2wHzUXRB6cNvBGS435rNXMUD3Iarng0
R+HxVpZL4UAzGBnWrULuxyHL564683Yfpj+vFJoHhGDJ3X9AdGYWrSovex65
JGLaOLZAdGgAoQz8vXf4bBE+9njh7o1h8C/mPHw0W4brg435t8ib0HuhNE/H
3AYLMs0avJa9yHCUNDATiQBz0RTJSN0QcrMWr9FRE+CWVL4m1tEJhVWDQLH3
NwjJr4Qq2uVG9/r20ZVPPJRw+l3cI6GZYSR8EIl0+bpXXyd1wEfHSSRRPuFS
dfSEaXSiHqtgEUIOEone/JqFyH844NI7h4msHsFLv7IQVK3MqmyxN+86Ejy+
F9zQMbd4OOPgECTOL3ZOuyRhrIujMst0BDl/PR5rR7lD/4vaR8vlKmhEs3NU
Z+sRNsaqVtI/L+Bv2wm2d7JpqPlpOybxsx3EFxeSbQ1DEUK+Ev12dgRf3fkM
aC58RrdcqDa3ejvEx4y1KSdMCGHtYVrsz6ewPnc2NTM1ieD7zymmf7sKx0pv
vwwdjsez/FpC/PICPjhbCzdKWIH4JWmFRXkH/ESVPbeEQ+Fl3sv+l3UY9K2v
JRQ64+DgFT32oWUUD4f3sxDRFBA+PSvusBhJh/mZZ/Px1hmEAIMfpzkq9+q1
DFxtvFwBryBaYlHGBtBWXP0REO4LWs+OE+qle3l8vUzh3nom4cWqjHrqrxnw
cTB/DZ0KgqQBiSzp23xw/iSiTY4oh5ZOPkeu/zj6BLgMvcli8MFCLbyfZhxz
RzjDDDlt8QSG937qduOfUNFh7VQLNFPc/NwgMwkFcaYRC60YUN/+8t5jbggB
PL6K3P3RmH8ibLxxfwATOwMe33Tj4fGcNHP26Qwm6R/4lZG5oOXqaYYUk1LM
txb/jn0Zh05wM+XfnAXvxb9natQ98DIuTWZbYw7y6/LdAnleeLVf2e/B6XGs
HC/o/lbgAYpW9f9OWPyEWn+RS7WPI+ouUi2e4B3B/PbQkLtrLCyKnAQpvxbj
2E2NfilXScKOogRxIPc8tns+HGYPSMXS6qsykdxx6HsbbP8ViwbPKfbtBz4L
OHyKetTwwzcCVVL2Ldkz3cheOzS1fzESRw1H/gtrmIJyXCAf85FIMA9P1W13
loC53K6VayYabJ+vJbk4N0Dy4DVpOetcTAYkjOnId6BXpsW44EEsPjvviF7b
6/tlg+hLUhKeWJw52ORmNAC/1oCud1Nx4GyoeWJa0If0W+4RJ2zcodLaq9GR
3wJlh0OpnEd90PLj8Yv3nb+g27wTaFxbQHhz44ZakuMgSj1fHtpN+g6N4j/H
zagmUWrOyXqfmwD/qZfcmzxzKP5srEq0LYW3V8fMEjdmkdKWmp0UHIyaUO2h
IpkF/I6ea5tfVSTQCt2aVmtuRYevWLhCQQFmFxjqX2iNgEV8KXJ/mCPmhB6/
0ToziJOHem/rGUaB5fxLERPqGXQNslE8Tdqrn8rR9MStaeSdYGGTbi9Hi5+X
SuD93xiSvR+RGmQLbgLDvRCTcciWkWf+JIlAyLOyVixVoJohItPnayaqJE62
H3Sbwl+dsFdqs/ao69fwoRibB5eAg9nG3n32WrLqlTedxJfdgBLHZ46wsVPK
uyY0D/m3PGGDYoGY5JujaPYexnAARfnXZ7YIpZL399ydg++l98mpUVE42fW4
NVSjGUxXXwoQXfEAaYOyMK9wB/rvmr7n8/dC3U/RiiCTwb08rKcdavpOSKVW
laxtCMNb/f5So7YknHydfPW4/jgkHq386jE3R98XjVrDuim0mBR6sU58x9vT
hOsOB6twUvOD3TB1IMQYBnk/1vSgN6KIz9LTD6x6iftZj80jPHLzvaenKqo/
XFW0EZyF1nDLxrmvaThJY+okUVsKDq53NBkv1NCe95uErXQUh9wzTra4xKJ3
O/zJv6UOmI8nbal9USOU3eKRSfpYAmr+xkDnlSycHPGN0eebx+PE6aP8Re6Q
uSDcYFY8hAsR/sYVLrmE7OcpqW0TC+B1b7YLvWdLSFBiN9K6MII6cnONK8e1
EWdOOzDnWAH1t9pZgftUMRrsemiLpRVKZfeHKRmzkadtMy/WUosHks05x/hy
wM6mfG7ieQ3o129aidvl4HXXnC4V+zQkbLO+kg6H4160z6evraOoCnnWyqDq
TSAeuREaPt4OJo+ckybaoXj4/YRtDMdeHmel7N47/QEZsiffEj3uxsdSDyOy
CX1kPjkzWEQ1DZ/hcb9zwkG4beJPcGWbRuZK1na2RTZKKV8r6xkNIy9e15XB
qhh2F3QpGbYX0N52PEn3uxOWTy/T688swPrAI86TE8lotlDgHA6cgbzHS7RH
pEP6uAEr99dmhMTd4xwaCkTFrBNFsV4QcuifuyzWpEMpd+6tmecskoXIOike
6hJ+3L9d57PxC6XRBQn7lD4hhZcLKrqFIB4YvfnWIBhHSw7LGl6pQ5kx6a3W
iLeEIq+7JSKtHdA2C+Q18aghKN14+5+gSBPi7hZAQyQYYtoYlyqYgLTZhqBa
Wzr4z6xV5gdP4TnNtJ9fahFG+jTk1jvKsWB0SejRvXKExR2FSu8kfAQm5Vmt
U6HelPRO+8gw1E9/paGRdETaZf+jd5bysX6vhM/exR/vPg16KpXt3W9imxIp
qTBs/JaduL4yAg9FobRT57zhbH+mM6duAJ9Dxq386/Ng+8DeKuvJBEgvj32J
Ox6A3iHRaq9fHWBO3AqJKMmEGqfpeDV9DkL1uEi1mQtRONlat6AyjPNTBUXu
HDU4EGzwXoy9GwamsXlKFFZ4xQKpNrVJBKrnmgt0uUMjoTu169w07lSMQHFG
FeljhgaS1+ZhWM3OzOodCkXu1bWVY3NIqyQb55j2BTvRmGaLwjjS0jmsRO+G
oi8rnnlZbQCRmbaNdwXjsWUjuL+wuQvXaamVCkrSoHNZyCTw2DCG/ivhyef5
Tvhts6baktwMFaa4TLIEL0wVX+Z5eG0BDctkDD59QZBgKuhMJpqFzCapfnSa
HqFMwVfP7GMpJCvGzvaeDCX8uSYvelZ0HE9ePPulpRGPzGWtOxcXZzDE1Zx2
7ZEd9EsafHj+LOC+P+lFGlpvmDhV32pmz4Tf3ywKCb0oqN3TfS9b2IZzHhLf
pjwscETl4q+wY5P4+ih/H0NFAg7lsmuF1u/1X5W/9iNbEjrPDIjSKC4gjGls
7Y17LPKMH5QbTIzDJoSi4kPOCcLaW73IpAODcK8dp5eft4VfCufYad9EbPfJ
DoW9tiWcj6zSNH05gJuyhi/4DaxgKvNzOXbPxyz8CSOrZe6gZ2q3YGSehIet
iOFaiCcqq15GDIt0onGJQ1iCyxXbzCZXvlUOYcYz4OPhy6mEj/fy5C2/zaGW
t7Pnp2UYyCeuRbxmLkPeu0PZ7UmZBL4KadnC31OoHOG+Wy8Ug/EXPzw6z3fi
8rDSRYU8K0Ibk3+npG4rSitfSkcRFxLOdP+3ntE7gw0L99z8iUBcOXIRRPQx
UI2aKaMZt0Hi8UwrqvR5/B7+Eb8UnoYDxUzpzz6MQWPuofp0bxpKt3vTEthq
kNOuoRezVEWojuduWnzehFsObqFejhZgFHGKTZCbRrhm1pGGtPME7Uq51mLT
Pd9LiLoWH5+P1658jtSjI6AgC6qUpUwDbXbsmAZzFRzFN0OLa0IRXiqnznYi
Gx1tNKlWQ+oEaVJ1Wy6BvXwR2JrJZbFBWIMo9+UzQ4jk23h3Ic2eEDuSZ+ve
VgFV+oNd/zHUYd0jaC2VeQI/2ZrYOaw48d9xbWbavlDoxNAz7M+JBBnOK6J+
BrEFVDbfnzvAdKAoj8x2FoYdvjrkp4KRoxdkoLWX8+W+ApQpX74hUbXb2ylk
DLvWtYVJ0ZG4clH2R0DpHB4JXlh4/ayI8OJ7P8NdVg+s/Tg8z9AcgjPT/hYl
JsOg4JEL+cUWDTqlxEfCdRPIEvnMNmgTDy3Cdwf2kAUkV6XbT/QHYqGe78AX
3QmQF9GaWW57ofFGtrSGeDMKAzI3bRq0QZeTZ0Y9MAK3zF/VS6cj8Slx2txG
fgzbtNL3xO7s5a+8dZf4yiT+yYYvMVFXwEDedT2DeAyaS1djc0TjcatKOJgr
sgfy82x/97vXEjj0Nz4zVS7AgPvdWZ2HcSi5p8ivnLwA1Y7nw66NTlh/RH79
8p8xjPlcKfp+2xkDmiYZ6/F5kPVWpz/skIq1/l1G8dpuvDUYU/ccC0MXz/KS
pXrZHs+zjOjap8Hl2qJgqng6Ota+Of18EQmJtY1oauV5aG/ar2TW2ECtkkk8
7mMvyu167B8fKiJcl9zqvmQzjvNhPJufROzQySei82FzAT2ll9LaLmUQfpcS
7v5+NAV5BY967ZQAQlkhf9l3j1G8vffATYIyEH+eFCw8ZWkGVWlspbWnC66w
UDI/oa7FOHnwVrNgMPhXuTJDpPqQwc1VQ7JohH4EbQ4E9sBJaV5diigToUmm
TCs2rWA3M+TfnxYFurtpZHWkedDex6XpGRiOJYdyB7GsLMQe57X55VWGyZHQ
zS+61Xh3/7dIoPJeDvc6EA1K92K3SaGR0OmGBattyoN7/GKo4rOiAlc0CIvu
b7RrxZcOfou5ymxc4GRxJpceA/eGpFBvQBaoL/UePG01g/E4aiuukQjcfb8Z
/GV1CrEnPc/03QtAiLhgclzCMDo/Hls6NBCNwtYjnB2zY3DMJUug1baFndYP
rlyJUdQNNR//weKKvipe+QXNGXwjmLj/aXPCRYb71Lssnagaoqf/mJeGXg32
N/quw+B4ZPrXfS0MotY9mkcdW/d4fJU8tTuM0Hxf7ZJhajN0o63PkZe6o/Ej
Gf86/R5fJd7tOedmCfEz0B+q3/MZmhTXnL5MxLT9vlJMOw6KKpVBkkueuOV+
tjvRZwbv5CmcaelDsPnMzkTozjBeDcmGJ1BGIX2yrJ77/t49pp3qoZ8JxPp1
lS+TSgNYY9zmKbDKxP7jHJTkUcP4NiUwyqmQiwWiNdsozSr4M944el94bz/9
1jZ4+YdRwTKdXpqfhpvf7lHbZ83DLFL/TKWBOkizbEtSns/h8B+5v+PJoSAi
PnctzKADsjrtryvlS+FwOvxz38BvRJhn6Nc556G2czZcSXIaUS9Pu9uxZxFW
m+KHAp+Fo/X9S//r7KUgX5j6EDTYDxOHnCFV0W+4lZ/tMaQ8ggvsNDo+2hbw
odlIy3F0wt9NL4t9MgqE6veprjuffuEI8cMvAz3l2JQMWicP78JP3zdfhK/l
gp6SOM/7XAYU2JVWdR3iYKDXeE/IbBrvnFJ+hemFEVY4Q6fXAlqhUrhMl8Zh
RJAhJCa+aZiDk63qskRyDMGPqOLZuw8hkHJy1rCXjMbGIzOar6LTqCi88Jov
1RdxH0kDTk92o2uUavmpny/ec+rdKxprxqexAE8v7wLsq+FwfHJqFgcl+wIM
s/1B8o/xtssFAq7YWxnsrqUiSp+l6mRtPg5iynDYa++eJ5jGPbSah5fW1sjD
2PcEhURJu0C2FugnONzJpbdH5sUTKSwOE2g79DbWNFgFK07Whn/pptDIeVsv
rL0YOlGdUZpcthDXco+uYw8jXE6cpAg+2obyHYW+DzOpSCC6RP6OqxhRcvWW
9naFWArdIWXXikKOkF72zH8RqM7UyO92T8BzvelFCeN4PD3gFdjwuhUh14kI
E0+8kch8dqLafwLuBZObwlQRWPU4RHL/cBxOettE2ZTEwO7jkyAlvxn0epxO
0LyQBT8O5Z0Xl0fhSzlvFRBRgv1iWmuF3O14kf3Q/pT1T1yhfTnec2wAv//Y
jnB9DYe+dGOJm2MHIvRnahb7suD84klsbsY4vhszvZFvsUNc+7kDDG9GIDm9
fHKuIgQ6J+IrqSym0H4lQPL9QWXC/vfKivfISvE7TI++NyYBi3d0n1Y8n8ZD
aWq7bt841P9ku9/zpgQe16ueDUxk4vvgJ8m3F0phN09EczrKEUKhI+UGrHt+
76xk8mknGu9HW/3uRuzxmTbNlVmKbMJ5QX09Fd8h3B1z2z5b6YMEOS5yza5e
nB3kqX9AlA+WjYwDZUKz2JqtjeoNDEUGo6yG5oMRXHrPmWsh7481dbbC/8SG
0WXf4rH/eTI6y/V6ox+U4/rt6pOkRkWoHBi2LBkIx/7KuSPbbd64xFD+PrBy
BlEr/dNfLuZAR2Kkg/HnKC6NplHEsHlgvzDPosfcGP5wfxYV+aWD21LxJLIx
A2A/9OaO23waQhdI+u3K5/DUZOV6IL8Fio/epR15XIdnz2u5lmurCA1iql/+
uYxBfZXstU6jC9o4ie2GfydC4DzP5QGrGKQGvthRuzoIpe2jiHyhhVd51Mfm
88YgcvSwpdHFGHBkm1B+c5jEq2eXjU33e6BxLfg/J9Nu3Anmv6Til4XM8ohr
4ztj4Fsqz6b77o66Om6V02pDeHrYjrWV5z0h2OJRuqJbC45V0Ny+u1mAix71
JKP686B5Jbu7dDwG7YxsE4oqU/hnWhr7ry8ELIxCWKxtRl79zO0sQXOUyf+9
O6taDKaaGz0ZOg443hxGfe7yJL4JXtTx9khD+SvRMAXFdvBS3Z+k9I9HNB+i
X1bP4WD99td+qmxclXnfTk/og5upDr1+Sz0yTNMszkjPgDl0ijrJOArhHuNP
LaOawNTmsX6VPAB2zxppIygGsVv3dYyVuxyHB5PIr32oxb2YZGX7z65or3Bl
PPn8Bw7G8ctQJhtgKf5baZ9dOxR3gss1+VoRY2x2we5vJ6hyyu7Q3w5DJ7PU
DLN/JeT2yWXwDyvB8cTKI+svzaA9OOfaKR2JYMqs6PrrTfj8ZGaNY0UNx+n/
m1fRGUPtjZOjmjuShCXqxgNFym3QE17KrukWJcjKHdt5zTcOg0AaFh32r4SQ
dx3pxCyzmP2+zmJxpwxi4n4/Cr4NwCO2z8o8JBJpJZr3B19244kd8avfTwPh
w9GqqCe5ABLO4jwOJQ+kTd9cWuJvQsWB4+JndJNxmPjkc+c9l3O4/Z5KvSEb
d3jovjeL1OO8q4yaSUExHBuqNTn1R/GQrPf37UsFuEPFOHhzegxn/UPcJphS
CR/OXyDjrptDdvNlAmVoEu6md/5olG/D1U0OetmOoD2P0/GX/TcBibCOIZna
ZMSGjVC/ai3GVxZt0XmtGPj21//J+jaDGSGWRA9te8Q3UYTW/+iGYPe3StXK
FBQkkJxVjW/Ar1Zb7YOv3fDXq/bf29s9iBn/Xk74VQG1U2c5ow2aQKDLyxD+
koEJm3DJI16TWM1JCqmjDMW/IzzqbrUzaL8UtHor1wOKNnVWo/4LqL9sSSfr
8RShJKO7TsGTYHr452oOfxxmO03bSe52ofWHUqyZQzx0yfivUK7v8Z6catGv
jgy8GHzx74R6MzY9qeu//bbBgfhn3PrLzQisLX0ldikStuvLyxwrNcgyCr7+
sssXq85hKNvtAtFlHfffld5oOdAZz3t+DvepTvR/E/LCNZoTlkv2RXAXLUxP
zI/EA5Pq4k3/aVCUFz35/SEDXP00w9XHxpFhpPeMTa8AlSUMmTWfhnDPaHe6
MSMSTocKdm4MD2NXz5omP9EPTNI3u0Xv9uFYdLH/cZpYQqHpEPEzzWE8zra6
Lqnhiy9fvEZI+oeQRN0SSrsbAmphTqbMU6N4yiDWsz8sERSmTAGr96ZQ1HbZ
QVDDGp5HOpLLu6MwOpTU9sfPBCeHfCerRHtwqYYsR/2MKyLblvdn5y7gRiCv
9k0rd2TGbFxQWhhG0cLkqb+L32E4rkIjJjYLY3HBkxtdsXi2SSvQfvcXjh/V
rG55+Y6APiqVoc0Z6IhJm2uXpOCS3moOg3MDIozIX1KcLyZwSIztC3bshunZ
zd3/DvtD6vEVAwmLeRzQlAkJVtnzQVdGzf3m1UjY4r9B/C8KBYnWTucPjoPN
0pj/xn+FUBG8eiz54DBOUb3pafPMRp9F4pHbNS3YIX1TrriQiGzzLxu+nNMg
vy7qFuKSChJ+JkG1ljyciLQqf29Qgn28CgFfvo9AzibmffmBeFx99suyvGwQ
F77lFM98DYJR/jejjd0GTJVF+c/st0ZZ2tPzHfIzWFudv6BakwJOlrmncTst
qJhZ2B9THQz6zzeNV5LH4cJ7rLf1vBucXG/d4OcaQdPfgYI3BhnY+jxO97Ui
HTvtBY2p4nH42PWWv/BkB9jEurb/f19nbYl5aCfxZFwo70niCQi9GZj0ut8K
07bMfS5XvPAxz1qg+KYb9NWOzFHpFUEwRFvKazsHeleuep01/kKgTDgoJVM2
Cl12IyUeIR8Eqfvrh30k4MmMtoO2ogfuX4w9BKkmbO1LtdBOrsJA//Px6qhx
WOhaUqwx+iGB8nHGTeFJOPXVGYk8isHR7KuqkRETsIlZDNh9EQ3+ZNLVnZoO
VI16cwTppiFDrXqfPm0zSEJVHLjC4qBRyU0Tf+Q3Ko4T6w1p2BF2mL4f0Tje
ijdhPfadZH7I6FVaaEUv3J869gdUusPPskT5+foM6hqDH0uVRxC0gz0iu217
sThx0n7wRQrOHw1U3RYcR7/ZkXIGqzKEkZsN72cbgU2jt7bqJwLcO3pYf+69
W+p9usMf8p1w8Ey9fOZWF46Jbww3ntjLq1OC5sVVC5DR17Yvk6zCg41f1SfO
LoA7coD++rIWylZ4T100GkK2oIbqK0lvHI2/WsUxXIyIhUKmddJSfC94xbjJ
MwWr2XnOqqZsQvfIyo2/WQTcfHFrl+WfKyTllofIXeeheDOWzpkvGJSa5k4e
Er3QWM8iTys0QSyParhLywQyVL+0GSsloaOv5XnV5Ai6OW543tgkYD+TwHdS
zQXoVMfVOp73A5/d6W3fvkkEPzyQ0FX9HQIpkYEh1HPYR2JHuJ0WinJaF6bj
WW24K/SnIGTYHg3HGvRJ6AbB9nr9AHeoETgsdF2SaMMwY9D93we+LDCw5nQ8
+TWConf75ctk45FFNJXGUDSEDzvN7pY9kTgY4nJsYGcUEuZBaUx//WEy7q/8
KjcfpIVZnbV2kQQfSUrhtcxp/BsqkCzW+YRDLcMKp8ZmoLDP2+X9YjDMFN3O
hZjOo/qqa2ZAqAHcs16+/fx8AI/77XWVYmLRLCjPRh/TgdLPtfH86uF4NKGj
9FKpA1bVt3fqr6XD6mwBl4JNC2Je8FeHVPpihsIl8JdRJWjuCV3u5P+Jfc7P
54+z5IJa/2Dk6P0w/PMVrKWVm4ARK8t9rhv+uCTkZHGGdAyUulIGxwxSIRos
Gxb1YwT2KablSotpCLLgsz7ROgdTDqItxuZiMFBID/23246xYUNji9wkONo8
eZ+83Yb71hwe1prREPTv3W/dPIX4hA8lFzg90Xamqf3203k4Xn3m+uJnOCgI
JkRu0oOQyHJz978kjWtTqnEHmUf29ojisMm9eKiFSyeP04+D6iaPjUREAJqG
PD2uufZCc/L0RhhtKN6d/3gh484Yvj6yrCZP9cAm80UiLbFaUIqXL161zCQE
JBm/jV8cQorug3b73WSUR35qPeTTC2Evsh537TKwNJUPL+qWYf1hWMXpgkx8
ihCdJe5IxfH2GvuLL93RkH2AdLBp7/+LJCJb62lwPHvN4rNJF7bNbp2rafYh
pL7RzJWunoUI41FTHbZYyCQL1c1OduKY4bnvxm/ECXdtnHl6Li8gWsVA5OhQ
MoHI4K3C9vVeHEiWcmIntt7zbg2fY5YlqBO3yfb6Gw8u3VJZO8/feKV4JKOE
Vx+kmVYXDjgPo/BN/vyBkAD4dvNGL7MPgPKvWO/SdW+8y1PYNFXtxCe6qh0D
3xJ4nzv70oNpAW0f86hZO2wIrGnV3zmEmqDF/zjlnX0M4RGcde7RVeLQaUo1
wQxrfCCIZb+/0QqK61S8Rf+CEeecY6scMQC7BJH0Pi5PuNyg9GEyKIPwS7ls
Mol4RGZ9EphnqEXp+QM2OOlGkI+7+MPPuRExxH0zgVvqqMs1f08y3gfGP+1k
y58SwGvll3ZAvxkTapwCCl5RsFowenD4QyP4vVjNNfaHo//NVb6HJ1oxOcik
k3vXnJD1IpiXf2IKX17ZXVwoLtvjvEWCQNI87jQ/IhGJyIcnSZORCPkQpphz
Sw8d9cAz1ZMSjCrjcNpieD3KXQAf9/vLLzu78ITM+C7TYBrh1qpU/65MLp7l
0P86wawDsj8W3i7lw6BlHbX42ydE2Gnl+2mnPYKlby8rVh66gZTc9GPckwUM
22tGHjhUgKXOSIXOlDEQ1HtlX2vE4Ovn7E4ZizlkHOrTCzwVgWNW1zjE01oQ
tjpNTBKeC69+89M9b8ZR8ZGjmvOTJRzvT2/18AxDNGIft2VlJPIaNv42X+pG
74vpV2deZ+AEVcwRqUeVmB1zFT2/19+u3oTogFsL+NkefFA4OhHWh1irvHfG
UXDkIYdzYhoYHNmpLz+vReMpmrtvbSMJZCLi3gKqs9jHZkuxs6kJm6pf1+ZT
csDowOkvaeeFh+Nrq2dE4pGxZpqU9SoKrp3eccVjrXB0TzWa+GADxQv2fXbn
OqH+7GryLxpjPJMfbG8/O4Lqf4rHj99Nxai8BWut2zRWcj/9jOPzx6MDJgLu
FPOQ3/HaWgrwR1bqt3Ei3UG8PqtWqT8TBymB+KLUT7Ogmei+5Xc5ALubzNZN
30bh2Xzxo9LfJLhmHVZ50NC+x2fsvURB/mhjIwTJi0/CX0ohT26uEh1plCx/
JOuhaP/4irFSAQ4IiTtwWExC+Gkej3+EJWYNUuzWdWfx0XVz//y+pzj4Vzu1
dPk3sqcP9nnzuIL8uFwSe9IUROleKzw2ssOJT/xdT8Wr4KHGnzh2PB45egeb
LE604FWuU+ito9H4VRHMdrY+Cu3df85Rf3SHiwf754+Me777LDywt8oIrNa0
pSymo3tz33iBNDcBQ+eTflM+GEK1sMGrKp5QBDQLf64t+omTYoKXr9Sk4x0t
UTHf0iAkGw5pxKYpIZmadzZBYQQ0B3R2VTQ9YK+1v9cnqR7B2b+6Ima+gFw6
NYjuY9Genz/mOHUzBQPqDD5sS8OQe8dp+GU4jtDUe4LnctIQ4gfccxR+xxOQ
kSqcfrkMNXUa7tm0abC/esj21+NpqJFXjEQahoKIXOuyflwm7vwz6z0lXg21
awVyzzsbscwqKhP9oQj/mQY1LJyuxpWgBZl/VfH4wF+UkaJSgnFhkyT6ogSE
HwqR0RHtwgizC2GbIQYtfimXbS/M4i1v/LUQ3RwM/pHcoT48hXNbWX0L85aE
ulUq0niVCRCRBZ0IcoyDVTlZ176pCSgHMiT5eqbA4PGb7CtHZhHQ5mWVJ56B
2AiuWkvZcoT9yE+cy0lFeQKHdV5mH/7SVCV4LNnhiW+NEd/vYiR8/6f1y8MX
G8HWxMp1PSgMT35OahyN4PI0LyWVZijfXnH9RycCJn6DSLbVBRRcWpyIXA4A
N/VJ6iSteYRdcsT88SBMiX4arv86gMNnCqrjsyL2PPTjNdP8ISzzcvD7JoeC
frPT7rpeKnhOpn/k+eeDyABH2vtvPNAxsl5vSO6ADV8G77nYYXwqctA0f1eC
KzbXt96bTYK4MmDfF718SHwPLb2/YoNIDoE+v/8SIWU8/e+OzyRE1o1jkrpc
4ee8HbX7sBtaR+4lvR5RJ2QssIUT5Q3h32qQcSefG5QCyTdrGzOQY2jcPO8f
jBitulrJuUwc+XRGSGy9GM7/6YqR9ZTgH/uJpqsNe25Ez+sbo/ATnb6bCuN0
r0DG2EW1RrUA8ynikgayeIwy/EfKmzIAAytLKpWHkShWfarhPekNbYGF0Hpl
XwSRVP+LFJ9HdxP79AJdFqQbiql7zaeRKmFoS970gBD3+KYr6edBcM11HPUj
joFt53U6e+dJGBdxCH6oTcDE+fyH5ard4JfeIbX2CSXETnyX/jnrh0VfvULd
khC0fhhv7ticRF/nAQH2vmDMnZfMPtTdDgmFvuC4eB9Y6oYrqDNMoDq6b6Z/
yA91j/6ZXd9qxcMeG5+dvBiEbt/1WHHrhVe6soco4y9Y9Z0vLK/sggzvivX5
x56gOjqS4sM6gIt/n5VdJ05H+Md9L70DS6Aq8EiFt70TXsZPGy5TzuCR2SzJ
wr1UvPpyirCeOYfKdKJe2z8eYPkX7/qBbBpxJLkxxpd90fqX//OGaxfsLgXW
uJbfJpQvkRiZKs6j8czRDdmUSCw6iNwNFvQE90LCuaS6VCwGaN2lOhKBk2qb
zryCmQAZhdVYeRN0GEukykh+oGday9JoewAdCXoRnj+DoH+iyO/m1BC0s7LP
V35PRh7h0ONNwT1/ri4l7t8XvefbbVyEf8Ug1j0rtMugipc7IfPpZhNgXz58
4kepI6inDq49qwyDlXKczQKLF5RrhE9fzh3FPWVGa5+vCRhVmg+85RQNZV5K
ftYfQQiUlnXylmtHPelVieufnPFQKor6B9kwCKVSN/xo8nFjWDCBIDKE/3Dz
1EhbAKFF2PdZnEAJVob2H92WySKEH+T4Zug0g5M5AvZnB4JQFCtPUU3dC7fV
t6tn9mWjSOD4Pi+GbgQ9nRFeEnKHZtuxNFb3IRhzqD6+qZqNZGVeU9UTC8hu
jAm5sVOCEIkO/ePydeiZ06tNv2MK5p59g/3G8+D69u6I6XdLGMRHvw6QGES2
aVNtKrMjmix8coJlfuPoE6e/0qluePfvfsq9qxkIFzO8yNefAY4z9IRawjT8
/+syvBrugOjXfju6hDEkDxVcZDDwB+sJEW2ewBZ4XDRRJqXTgeNu2dW71VNg
0l+3Ly/wBu2iVqxP1zBU+fq3hGj2eG+US9jCuxiBFa38/sfLwJnL+NllpwOK
H/7c1VmPwtLGWUkymnkU6rBMiKj4412Kg90N4iZwTX9b45vJIfjzNfITeIJw
UkHk85P2eJybJm47qDSEFpuUrDcVpQSSfqE7jp6jSCTYX/Tit8BFOYuDRfEz
WJGSW4n+moljHnfY2lhL8SKva/X8sg/otCf5SiyrsX3qxKzMbCkiJfpvBW8N
4guniOajq6kI4qHdYPQexzK3ltKUUCj6//Ty2n8dQtqUdIm5Tzx2OUWqZBrn
oWP4TuHWTDBEa+2Km36O4EP4yYwTZV6INzH0OTbxG3Gcpdz/ZAOwdaUv1ax7
Gu8V5Vmf2LvBbKXI8AXfDFbn5l2DTuWhrqiB6MGzOkidz1lNNgnDhrOsrWbA
JM6mFySoGdsRDJ6/o/30qgRK00cbcm1yEfCJXlmXdgDJb7t46vOrkMFkdlBm
cBJjib8iJXoyUBrSdLKZZBY6rx4xWdvcQqqIwLgWUTciAke39hk/h9zBYwor
oVOQsz9seEnMnSDFEJ64ltGAm8y0Jk85InCHTppl0HIMr/3KPY4eDka3fPYh
O4lpHJbcOn9TJxXcPseubYuN4cf9W1ZDy+HQt3KWZx7ey8dwMZKZtR+wLLJ+
KvBkCg/+KVFcOVKKy8ddyCbsf4OJ4Wn8E6pyPM+iivBf7QMz++ojy+jXkJu3
7rA2WsD6/WNhjJ0ZcMszOb6lNQ4WxVe2PyyD4LFqXJrSMYWll9YuISkOBGGr
ngXz+lmITy9S7D9uQGAkvWU+rjgCcvMNMas9/itJm8hfOpOKty9saasPVGLc
O6kpTOkXFvS5ngxmfYTYe17jZaM6SD5rP3JEJxlEVcb/zkbl41092Q/Td3ag
VtrZ6dyYwvXLQpvrHlmwe78RL/Z3FMmmY9NUzlk4U/Qu3LVzHub+a6rO0pF7
PvLEwat1EvnsAWy71mkgOvaW5PbgKOyOMS17HAwn2HWrxsttTWEs6lPj+hVn
ZNGSUSmKtuAQ/9pqyMEGGLp9VNX3nEfMU6Ve2pZY6DGTfJbk6YacYqb/u8dp
iOXe0s6PqUG7gOPiqkc4Dsn+CZNXWoDHESVdnzY7hDO0FXy6NovUltnlkjtF
KN1/RJSg4AovkiFTxXN+kH740TaMMIST8u5OUa0eBL0jUuJ0cbMoDQiV7bVK
hUuE9Hl1xyGk647dqU53gaCgzW31A+HABROWGdty3KFnO73xYARsF+o8XP1S
kEf5uiTIKx9edbLc2hsx0Awd4Ti7bwoWx37LJzwMR8ANbRvp5RxEb7cU/UIF
KLJJH5ozjoFaqIKRvWBvvgzqiSifDsJTUYX/0Z4/Sz34JFYkNw/2S9YyXgeS
CI9uv3kcozAIn0DR8XusXjhzrlqtnzkCN3MyuD7UZuLmuwSBqPpm1NbFbX2M
NQZtqON/TPlT0NJv1Vvc54YNXvVmutBqtEzyBzmcKsV9s4LIavlJcL387/Ct
UDuCE5oesL1pwbh5nGbUKx1IHc1pJPVtxehue+TFRk/8lrge2UU8Cn3mHU3K
hXD8cDEwNq6aBsEkeGQzJoNw551bwI9js4gdo7/kIBsCs0UPLluiib07qXCR
Qj6JoLx2f1+L8zTuil8cKazTh0BtRWrC0X58j9Jpl4nxx/Zrj82Dsm3Q6lk1
/5TujPxHT18yy8/h94IsqxVpCK7OJ5tamJXgZxd1R3JpEH5tZfilmQ3jIcqu
phxwQDjJssPjtAXEeNyeHfXZu2/VY3SST2cwIO8nmkkXA8kSg1+x7JMgj7Ey
IqEOwabEot/G50nIn0iUf02ZgNqbSrtvQhsRaUs3URGRTdC/fGvE73AnnnI6
i1L9KcVXIlG3oeEh+D29nj88GQiDpsAXGnJzCGIlW35C/R5Jju1lGsxT4H5P
J/PlsTvEyN/iQn47/uqRX8wpyQTv4vPn6fyjuExC2TbiHg3X5ZpqqZ065M1H
PGNL2fOBALlamc/d4KAaaDEyN8BhEfZqK/dfkGORDq0ZDiWQike8Sq2cw48r
KoI7ZWngDKIKPkkIR/XZq6xjSdFw93njl7g2izfPVg26KVxw+/rIyjLZPCQP
qb3CjSSwGI+0bgpOIUt+o1m4wQrMAjqWny/1g1V4pPunWgT4m6wfNOe04t4L
10q9Ez5gvv6Cnde/Ew2v3oRwsyVDyHdv0Yk78JyYLfzYj5NYPbJgfEgrF+Fe
u3Sy3q7IPqe5j1d0GJT7/jBEBwbBurNWInqPv3kVo4aopwKweXPK5NRAJLRG
MqYTRrLx+cq1Mh25cVAqKvoS6FzA+9sv1w6l4Lsc7Esf5wrmvzFHBGvrIc0o
evCpfRIUbfo3feqnsKD7auNsiQuojJ8c7vv5G7mBawHxulGQPSwjtGhWD72N
7RTvjhzQHRgpdizsgPSUdoxbSSrhZpDkV+/YFhisrcqrD72Fos7KwPSiP2aE
YuV8mUMgsEhF/Ku0B7WMiV/20gUp+j6v1/eNY5zuTDovSQrEzqlYC3oX4E1t
R1mxhiVhtG056sS1ItzejGSovONIoP/J6ak9PI/hL139hp4ReLcicbYutgxD
BzRkd/sjkEnrNfpyZwLS5p+MT58NJ1AG7/41thgD5fyFJ+Z8CZChpzagOjiA
ldcy1+R+puPys+RPv3N7YVoU9FgjJgVnTEoeD3e34EfUfNPNR8VgSgy91sy/
x2vcKdzekvFQZq0k5PD34VFYipOHSybhf0XVLl4=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 0.9995279693039415}, {-0.09922242497073958, 
          0.17696362273988409`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"tauf\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against tauf\"", TraditionalForm],
  PlotRange->{{0, 0.9995279693039415}, {-0.09922242497073958, 
    0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
Npmtr6ENpAHGm5rI
  "],
 CellLabel->
  "Out[172]=",ExpressionUUID->"abb46b09-a95b-45f7-9498-79806a1a6358"],

Cell[BoxData[
 RowBox[{"-", "0.06028718517069637`"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
/sVrpKENpAHI+5sD
  "],
 CellLabel->
  "Out[176]=",ExpressionUUID->"0d7d329d-7c66-4a8f-ace7-8cb6e5ca3545"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
ukKUyg==
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
ukKUyg==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0.44590387160943357`, 
            0.9999957973624373}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0.44590387160943357`, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0.44590387160943357`, 
           0.9999957973624373}, {-0.09922242497073958, 0.17696362273988409`}},
           "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0.44590387160943357`, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1: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
ukKUyg==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0.44590387160943357`, 
         0.9999957973624373}, {-0.09922242497073958, 0.17696362273988409`}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {0.44590387160943357`, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"wm\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0.44590387160943357`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against wm\"", TraditionalForm],
  PlotRange->{{0.44590387160943357`, 
   0.9999957973624373}, {-0.09922242497073958, 0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
jlgZqKENpAHI6Zsc
  "],
 CellLabel->
  "Out[179]=",ExpressionUUID->"74ec1ea6-ae90-41a6-a958-34b8f8958a05"],

Cell[BoxData["0.23076929096877197`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
XsIboqENpAHHF5rP
  "],
 CellLabel->
  "Out[183]=",ExpressionUUID->"63cd9bdf-d57c-4b50-b47c-a995dfb5dde8"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1:eJwVl3c4lY8bxqUlqVSKioZKSUYUyrhlRAspWykjUl9lhJSMKBqSvUf23qPI
kWzJyN7nOMOxjpWU0e/8/jrX+8+53ut5n+e+P59DJg+1zFlZWFgurGVh+f/v
zoTHpaZOEzB9s8h9cP4ZQT2s40hrEQV5nr+09DsJ8JRct6FkuhcS2q6nNtOL
cJs8mhUdOgzK0UgDacV8xDfO67RQ6OBWuVfJ9z0Q1jeT51t0aRgbdEj7MBgH
zd6J70ue4+h390ldHa+EJi93f0vhCLYUq+xZVo/HzV0lCRcmxvHkANE8ie6L
iV1RwU95yfi3/6fLcmYZQhe5XMcdGSgNkK3cWxELRWOxQ1vihrBWUv6293M7
2F4xZnH7N4R1bzs3174MRFtzvCTXuyEYmV31/V31kZCifk403WUS7PUT8fKh
DwkmO1aEeYcoyGi8d+ezUzBq+Ro4xp+RMcJt/rD8ZRGuePoL7LpARvePsLJ0
0WSC0aVjFU85+mGz0nIiiuCHwQR7PtaBXhS/6LSYWleBy0ELN4V6GeATu2hp
X20LezZuYr0lBUst5XNJVZ4EPvWkM/wLVFzulHmipPIVt4w/qb/eMgJP2wQD
yT8BBA+FpRDRZ8NYZ/Z40e+uF8orYu4Ifu2Guli96jhnHrj+iWPjTSL+kFNb
3uq7I1neSixmxxTIC+9C+c2KUGdox620lYpV/sTMidKP4NQ2oi8WElH6KyVM
WPM5FBMGxiV/jEIsijXIr+8OnnnvFw760IPBLUpLqksZIEu+XWGzncKhh2ai
19+5IWN598CTo2Tsv2e3xNWYhGd39RRYn43Bb5vJ1XjXfPi7BEpG6tMRVSoi
/TA6FgkEv0+r4wMYWScu2+3kjttD5hG0SiK26Z6rOVsaDjWVYZ20NirOaxyk
7fV5B2shy1DuiCkE/vSTJVcFwPf8rS293wfhlmwt62F8B1mvS3fc/EKC2a6Q
G8G73oJu1bZiUTcC0SfX1d43JoPtwQ9nm2YKFpoF4xxmckAtpVW07aSg485v
6eQIPxg/XbG+3UNC2h/j4/P1RXjf6BBjSSYhJ7r9k9y+LLyh3O54fJUKitfj
Lg7bWBQE7pQwVR9CRbrWKcnKcHhw3SZt1Z7EPQ7ezNbUeIjDWfOvwBjasWWG
XTgHDqRIjs+JwwjUTDW1WcmE3tB/A7tvkzC5FKY7sZiHKoWBDSd5B3BG2ei8
tsoHKERsNz/bT0P+6sXRfqFWHKFFlrefJMH3cpphqvcHsMu6fipOnYD920w/
YuNTLPw7nyfVTMY2DXu2JLs43LgoOWcnOghRg7uWxqt+hN5bO1ZESQxo2i/r
L9e74ypFLUJfYAqt/jdU9TReomS8dxNPEw0+Fw/IxxlG4O8620axklFon1bz
r3KJRqNel+ZsIh1kO5OlgrfRGGlxT1s9Ssd8dX2rdeQ7eD5S7GNnft9e1pC9
hzcGYX8dS8svGhHLi1cVP7lHYrCQ/9IZLRLO3X+r9JPdDPTVUsOm2REsGcV+
2NSWS5htC9yfco+M2pDkG2s6cnEpXoVKDJ+AwOPrKhMHE3Gjy2CbFHUUbVYP
XX9rBkIsLNpFY2oSA5JaQ5QSH+RcVTG3vEaB+l05XfqREOiELSb9rh3AZup8
k8rODBiURFdMCvbhSeu0eiZnPJ7v/GanlEIBzyHN87sdgyF+9Pzbd6e6cb74
x/GA1kSM2/s40sXoOMy/6BGjkIrAwVWfmK2jGPvvV5lrRAwukNofWGZS8dP8
Wp+ybwZa19dyJj2aQiy/Yr+MnBfUTraT79rToDhdrKQ88Q2xKccivFcm0X+w
8pOtqyd6a+3yJTaTkf9Gx/G5RjwukTqeVwZPoqRw+iQfNwGv//MlCnBPwXjB
MVLr7mmCFz3m0/kY5v5p3PeTuxFL0OnlmGpY14N0S40E36cZkPz9KJVXYgSZ
XJckLN4EQnnpyzcJByJi1q/RPPO0ELYKRr9aT/aDVth3QaCpEMspIgX9VXSk
2WpLhx78AKklX3X14HFoH5juGvPNxIz0HdFULwqK5wLUbBL9sd7x8O7foMA6
SUSsrsiekKFwynzbwwHMtW8XNjHMxUSYz6zuDBWshxhZXk6x+Dy0w+alMRlP
/eUceQ7+h1ER8txT93bcoDjbcNGeER7VbE/0P07D4uS+nIKcTELln6+nV8SI
2Fp59losKQ37R9etCe+nwPLdi4vN2h5wM63lbDMZRpimWeDSxVgkJZ6uiKga
wf6fBtrGXan4VdUR77dxDEqktYJreEoJ7a0lhRSRIbjuvTKV9iKfwMauEnOJ
ue9p7pELzceq0XMtS+TADSr2VJ94H/ExFB8O1nbKD9PBJ/rNWH6xgMDXM7j/
Wc4k5MSOPo2lR+Fw8Xr+dJVhiH9Zsycrvgq9a/rZ+4+RMaAi4RTMnoycZ6Nj
fsmDmOQQj3MS98La4xq/hLqYfaRazmaT4wa/Z6dFz12nwPjGkRG3R8mgul4d
2jxKQYR06B3JwSRYtrQeTfKhgbYyFPDSLg11HhtSnoe2YnT/+bBv7L4Y87lw
bW0BCVM/K3pSrqVih5Iim/V9Ms4dmttbbxUAkZEr35ZZKLi1eKtX5VMQYoQb
grt06fi1rbT3ZWkALmRdiVFRoeDeYLlvXcgbhJcLu2raT2BqmUj090uBpplh
TAWDjq1nrAd1/XQIJucezf3lG8BynyWbSEQOYv3b6923juFxsOPynFYSsn79
ENj+cAxsO7nJTpYvCZGUd7fLl3pQ9HsDfe10Alb2yFmEjozBLDVS7ihHAqae
bdq3r3kUR6te/ZQYT0JBrNvzsIcM6Kw/qWf0ogSZ3tPnkoJG0a/f5lx6PgVr
nBMobHlkHHNMEtDVDkTLDmrE+l2jCPsZ0W1CT4XcTg2x/J8M5En5x2/39EfJ
f4tTq3N0mPlsyBHfEoKA4gKu+u/jsGtdiXRuKCWEbxFcuriegcrAaxtWM1+j
ZkrtSIkYGZWu4kIKkgRUvJV7Nd9Si4r/nC3WLOvCpOjCi1Rm/ma35xRlRkej
Stbhd0g6FT1Jk+1TC3cIoRG5axdeTqEzVOujcWkpFvbRHiZ/GIPgjdmEtXFv
sFu1PsPrwjB2bOg/a++UiObX3PvWSkyie1iY83JmEvZefHQlRmEYn7YLCut1
VIHnT83i4AgZREOF+JwoL4hv16swcSXD8Nvmgi8b43HwSMOnQiYf1fHHF4Q8
LcC5rW/fdclQMGcbd/3ehDd08WxtRg0DEio+z/8w+3nC7Sd79Z9hOKxGfH1z
5Q06A886tKgzcOu2dNywViRu/5tzbKCRQYrgrHp6xQvtp7/YrCqPIVTgblZO
YiJCqIZ+MtsmceTENZU1xwPQeTR/6srmYQzKutyVCw9CS8bwwefb/5+H3/cQ
W14TguT2CjixUnD78WDlk/ZMMAKGLxiZ0qCt/Kupz9UVk1J/y25Zj6PtWVmQ
EO016oItz6g1E7HjoeUrEnckDCRY59kmaeiPL5dzDwyDYvFqZvTCKD4m/L0b
GGgBg+PfckpayHhEavvD+zQX/J+IXxjJTD6RMOHJV7+H40c4f6k/6cYG//wd
bb4pKLOdufv27RhcqZlL9xzuEayFBscvPyaDW7E58t2vQrh0Vw63WUxALWNs
i2K5P8ZI3DjHz8DB+HDnat8SAid/83m3RQrO+be+ipX3IgR1mRjK64+icbOr
9fFtNui9VnExNYoCq9s2hZEsFvg6weW1rYUG028KJK7DReBpueyQYUrHeZ3W
4q1yxSBZj2YT7o9h/+IZjxuvimEd2bxzSGEA2l6FTzeRPiL79X0juXVjqI25
8pPfIphgWNBXfjJ4AkcCinc8s4nFtLeQGj+ViuLC7FX53ZYIbJgdj19Pxv3K
gCfstMeI6t5ec4t9CiEkahjvxShI3b/6M/g1GQW/CpeL3IpQpp0q9ediDz6l
2fnxe1RAX8cgiZzD5J/2bZl2r98iR3fTD99AEl6sUxbfQcvC8RHNUyemf+BW
wDV0xOfBs2TQg1FLR0yqvDiRGAmOrMNDPo+HUbz/qu90fR5Wn21eK9k2jCxV
9i5OJTsCF3ErLqTSUZlUms5i+gB/73qHB28jgXWIfOa2YzQ8rHiUjFR78M15
k9TP+NuEjZWtye9dKbB5HnnuWUA94aTa3AxvDg2psqWw1ojGMP2m93/rqNB7
/ufCvfY8WCjYfTe7MYGrPGNhYTnlODbf7uO/kwzGEwFVZfkqbC0Pfn5OqA8h
KqO3hF7kAIHU7RTDUVjtfsrDo/MGtrLtxBj5MSzKf5Xz9g1HAo+w0OX1Y4hl
9fyqqxuHsPt6p1gcxxFwRzV3J28wfHaF525k+sB/MVSP8O+fcFstMd9Ucgyb
jlEcUrdF4LQyn8pIZjeOZizFxH8twPeXD71VhxmItZfYZHO0DFfe3S88yN6K
A/TScn+xegx7pr4dqJ2Ao0vKJ1NOD8ym3mkc7CYj0qrEVaXbH4Kv7x7d1UqD
TPUI7oxbgFHh9fGxCB1OdSJHhYJjcf2loV39zknk1rBTxcZCMftz/T0DI+Zz
npiHpmwsCMa0b6vHRpBQ4NUseyEN5dMfuEakhiG6h9u09GsuysN98wWDRkA8
9VX6s/RrgkAK27bp0BGYH0ktYE9n8huf4LWP/w3hxzw7f8hAFPpr6WGay6PQ
/7vpcVKuPaHqn3iJnA8FOtWUff07YgnEfsuMX8/HcEn9StMj6zSw0ko6+lPG
QJRozT2p/Aovf0NE9cIEFMI3HeLZE4wNfJVW29spCJsr5NS2T8TiwEQ0lTlf
3gDtl/QAN/xhMfY3nx/GU+XPLPzV6chaUZn50MbAfxaKDfeFMyG9tXX7bctO
xB2h/L7pn4LoHhm3ulymH8VwVlsWbyeIdXHvVNQehH8Ddf+tKS/4DzdmbLrA
wPKAITHOwIvAceKsLdsNEs4YOqkrOnrA9c6E8uDSFNzCCSML3/xRf31vdZ4J
CQFeGk6/YwJhGdah4ic/iOZZsYvaEn4gd5KTIpj7Px4YcZ/tWA7h7dqiph/i
Q2g419X3xT0OKa5PadbHKfhksqGoI7OAwCq5JnbVtBc1I5Ky31WTccKkT1P1
BwnHSKaHjD95EPYOlBh63pxCZc01vUTWMoL05GrLjRAS/rj5l3ymRaLgz8Iu
s3A6LBLHv/FQPRG7nBrw2KUZPaT3abMfcyE0o9dZkzIB60klq7H+XDyr3M9/
kW8CxR3W9smztYRHmjLvTI3GIeXzITbojRvq8/J5MzhJ+PiwkONH7gGC1Mmf
/znfn4RYeuLJtLTPqBLgvuBTNwBO9qgaQ65c3HpuMiPeQMabG39jK+qZ/nNp
qjr04zA623lyPIhWhHkH0She+xF8UlkaLxH0hPyYeJKLLhUJcn9MDuZ6E2Z/
8Rj+tRqHxf713af4G7E9Qjt9K30YX4RbRMQ8xLHBSjX2dewYbJP3868tToBb
q0dNxJdJpJTu8nx91QdFwmt1m3SIcOoMtd28Mxp3nlgf8DlEQVWoCle2w0tI
q+OoViTTZ180lGUmJYCSef3LencGlC8cZBhcKScoaklcqfgzgN/v2ab4W2Pw
vJM7Y2p+EpzSRjFNwkmY1l1gW2kbQaHGf8LDnmlQFWOXZ5OiIKs2z5s2GImW
D2Js7bs7sbl8z3P35SBMB0m5ayY0oyyi4K/nDxs82KWrnzfcgw8FTXWzuxOg
NrQ9ds95pv/s0ZPXkilC700tPSumH/4z/Dh7hLsac6nmLzZuGMPD2RMpxZpp
4Li7mV/ag8lvU8Jza/0bCMMP/J5WlnXBUdJkn61SKuwnVAfyypnz67xK8mt+
i016GxUOxo2CEnK8/PXZd7D8TyhXqZUKw2Cr/Ww+OXBPaqkuo03htiPFKpAS
h6q4rpMDGuNMnhccsfPOhSxP9mvOtT3o/P3y7Rf1BHAZFPj1nR+EzV/vXwX1
nvg7ZGCgHERG1as+b7UN5YRTQc8j1XTIOBAn/feBxiv01LlHmttNoa9SILdd
IJ+gnjevL3eOjFvGAd9tsiMIgQ1+/xbih3Fb/vwHba5I9HbteDthQ8OuypSa
F4G+mPKWc9kbOwnq5uil1gvRsN7dJ5PNRkG+pET9xukneGwcFi+pwMBb0ykr
3TUF8PZ/eeRkRz9Enjsprs1NRMLaqt0vKiZhwyLxMDDyIxJYjaWlp8aRsu2c
Z1PQN9Ts2ROz/vcoTBR6NCLNivFMzKbXjGMMqy3GzYSuD2gM/lDRcYQMJ/OQ
X+bww5sSLzXlKAYcOhXdJmuKoK0W+vQblQTJPzqq/RGFeJTHfzIskQpqKreH
xEg8tLT9SwrlJ5CyI3DvgHwEDos7qrT2DaPr/tbZDUNJODl8LC3YbZz5v+zp
e2y80Bkml53hQkcjsXXbe0E/BHb8d0qoiYiXhGf+M+1v8fdgjuYX/V7UEvfv
v/+Jeb8MtxOf9IgQU3aZ8/8dBz2f57MUdzKTxxc25/TGEdp5lq9mV07BLukF
7+ZKf7R2PRYcYOZzW4ZsH+8Hd+x/TXmi/ZgIPp5sv+KBAjyv3Bade58Czlrz
4Y0CgdhKGTxiE0OEyS3Od3v2x2CwOUH4mVgHrhMNP6ZzJWJFc9+Zg6Qx2Oyh
9+0fj8SfQ27CxplT+H14WbrUowA9P3HMXZqOl3QVsrhxCUq227GNaU4g/PDp
LQoXo1Gzq5RxlvlcLTiWV/k5F05bb80SZXrxPOHx3hpHK5z7YBRoGzYOthmj
OWpWLNRYfzx4cb8bhrYdBjW3KrGBa6lYt60N8a75jxvffcLFDC3Ne48ZSLy2
2/+VSCGhLMOmp47Jlz/vXgsXFalEbDm/TawAGc98iokWmi/xt8vYqqSHioMi
PLYhNm7IjTA5CFsmL/8NcmPRNyZ4kjJyXC53gYNVyWGorwoi33Jc+UQn8SX0
psPFkyX4wbXe3s/3J4xFTBfsfFLxcEuv0tGAYZi8zW6Ks48jCDTwvuQ4QIV5
2TxfrtgTgjiPU/wlFzLeelnMa2clE9wCxso+MflY9+07a2+dJChXVtTuvt6H
6rKDBnI5oTBIT66vZu5/N3nX/OWwUORYCNof5ifjASUiMCi4FJ7GjV/XB5Kx
XmcgwqkoHHXePJG+WiQc9/ZwXP2dA7borIiH2fVYD7oTKSgXLzO9h8yn+hD0
aGlEKeUu4UH8VXutKzQ8TveRKdnvDeKat+URQnS0b7id4hJtDofattIfK/1o
Fj9rH9dRAekCKzO5d8O48cg/qVEkjsDRFfntplQvqlaMByzHc7D6auc7r7Pj
SDT67u79qgxCR/YFLRKYeaJqXzR+Kh5c574zbsSM4Kr92LS2cxrWJdX5ujPn
GSO6hkC7FIwvhqdEZwvp8C8d/XtxVzx63Roirn8bx45gz0TPr8kg1Tn5yYt3
oT9gd/rDg4VgSUqxCNcfRijXlEdE/FfoaG6uZt1Gg3qRkvfOF1/QfzU6h096
FD0zXiMSTz9isAnNN/iGEP94vH56oBD2Wc9ct1+i4rXzkZu32l7B/bMsa5oL
CTpj8zsmq2PgXCJx6YnsKDqOR+jcXW9GeKuqVfDfzBh64uz39yen4/Q+7qj4
lVEo6XG/6g1NRa+9k6FAfgcCRGuvDNEKUFAkJL7Bm4xXU2t4die+QUYGp1bD
7xEYvzN99mAlCe2tf1/rCI4g14bn+ARnEeHK5JBK4doJyFI+LO+rCcHn0n9x
Bv/RsW9Y+vv5NZ9BYnfgbGe0YGmiIbE/Mhb7WX5JzGVQIXBXvMTtVjju29da
zw2Motu7LWDt1Sx422jZJq8hQfRs3Y5NT8rh1u6ouTupEWtrJjmW24Nhtl6P
82wABYm/BsccDhXD4bL/pYXyCQiQczmThQMwW8D+ZYU4ghnJ/zQ1mmxRpB/S
tMpHg8iGmzIfpnKh5lNzO1NhApef/RKNVHSDAWp8rd5O4MrVBon5hlqCZzSF
Kls4DqsFdgPbZl/oy8ZV2/FOQOWA9LEhj2Q0Ci34BCqNwnR5CxLUH6FXWveF
xFYSNLawuT85lIwQjoMyK7FkXL9yzNllbQB4zRd0p8oYkIlWFDAPK4TYiyPC
3NOTkJutKuJ77Y9cGf741lYGLrO9EvopfZdgWdj5azWAiK3VPGdl/5bCr1s9
9hSzP3muG67ObkuGRDyJSJZk4J9LZcq/gRgcoQXtUNlEw6fv42cLL7gi9c+p
CStmPh6pP92Xb+uDihuWz417mXl84ZBtcEAuftyd/LE4NYlzuxRGucLTmHAR
sSaqdQzrvy8/HdxVhO9zaf3lze344GK7/3Hbd8g+4D0ktETD0Vg6d6ZzIpzz
IveTI5j+1h6weGJzBNxmKmxGG1qw2viUIiRZhbpDrIQO/yHIJ2eZef/nB45V
RsOeqwysT1XU58pyxKMc0ZeVMXTcWYmueij3E+zWC6kmsYPYVfxNZv/ZOFjY
z5h2tE3CiMUoX5FkCmexzwoG6oPYs37Sr0svgckZ7513tjN95dL4b7Ff95BP
0imLj2ag4fQO8sMVHYJyzO5i/pNTsL84W1Tfq0mYonOLPdQagWMkj6CtyFOC
86H6XKVtA5h4vSjoJvMNFfu9h3g3jCIgZcDDNSYBoq09/WIKI7j0ivV6z+VI
eAXeGsw+RMdG8YpPYqYBmFqOspSRGUX1um039tpl4cCGlYj2bBJ8zt7dZfWj
CPuHqeK93lQc8NO/96y0AhxcliYx/5GhxN7fc1agFMJlGXOWp0axLzzmA+1I
DmGLbk16bvwYilqPEbhiM6GrVXg1OJ6ME3/F9ht2RiHx1OD3qGAitOM6ifoN
WUhSu0blDx7EU0EbzalHyVB4If4zZieT11UFMwJsvPGuTHD3XBEVF3pf1ljU
ZIOxace6B1WTaPrpZbPe4ANYon/7BjxpRTL1dRWhqRoKRmYHD2b1gsD3Kf+i
Qz7GvltvC0khYaE4M6aRKxaXBNis+PWYPi0QtSBVEgCtnOJpGpPnvx9z5zMM
uIyQkoQJj9RJHFGaOVGsmAodWe7jhuIk/HxvmvLcJw3TFf5ipn5DcDSyKG/q
zMd8Q2+aQtUo/gZyf3/Z44nDac91yp0mENlQeV1LIAHsO9KebGTyceGTaNFr
3aHQJ4q0XKaPYs0xW/+emmActNLe73a4HQq7tg++VA3CFFmZWFDwE/6aZXkZ
nxPA/6+T23x1CJxV5Zd6LPMhlzJMy9KdQP4T+yvC9qW4qz8ndFl3EPJPVsea
8xPgb5/4iO07Hav2L3g+Z4Th3KKx5OQL5v0lVYRv40khmCUTU5RGyVAr8hDV
sQ7FWSPjdy01JGRyt8XuWY3B3383HVJ39+Ayv1bf2rgMOBnKtvoPtKO8/ZjP
BesXaJsOedDITwWZmNk+E/YMj8P3St+7z4BAPXux1V4/nNi49CtvhozTkeds
znj4I9mE/OqdwjjKGaM756Zfo9PzmKPtIyqcb1zY8ac7BV0/q5Y0iKPYtuVh
Xds1EwL7ciOnYdxP2Grpudp8zUaglA3dvZyO+Cebr3EeqCD4JzsvEt70wWXf
39VTbOEYduRVb6qewLqH+jHR5v6o4tl8MzWPgvQlxdOs/xIRUa2lTYqZhLC7
s+LpU2WYr11SFnKlYeeum33tgUUwVW9W7Owewcqmm1V3GBkI/f54lbeVhM2i
mh9ifHNgxqZ56lRzA7YneFTddfwKT85a3+CdYzDyTL5btS4NR84mmNMdmPzy
srhi/GkU1jAeGEt5U0D/lhg+vvYFCjpUTLYy8/33wtRBi/ps7K5srrj1exzV
44y1yXXRzDt4OmH1cQy+57b2/zzwAX9PnXMtfsBAy9xQ6U3HfKwRti3fL0rH
Skdpc86NVAQb68Xfqh+EsFb38v/vtUCrW1NpiIZLVNVPlzK2o7uhZf3UCQpc
2gtYfI8HobVp+XlIKgOP73FM7rIvR2ChkFnQZxrsj58I2ufsQDCKSrZT0O2F
ncgTU2nVEJikcZdsX6Xj0riNj82dACxupjhNFo1iiSXHzSarFra8h8I3KlPg
ZufO+ftwGKii4vMbD4zi7UDjEw3lZFDfxO4SZB+GZ/J0xKp6Ej4NNflxXaWh
lhwsFmWXi8XdV1rVCMz8iTX3kYhLheaN1aFODQqqt7HaE61fEQxleOV7HOm4
Gdfn3cUeBvJTF8qOi0T4X34zGFHjj+7bR7/8kBxDY3O0mm5VPOH9z51nj4rR
ME3b4T2sno3r96cOijtOYfA5RxW/xzeY8U8lNfNMwbM52MbiAQGG4bqVkrx0
5CjwsVl+fgvdJpOXz5n7ufXGH1Lz9kxw2Eqxywi0Qv+xjfc3nVqITK3F+CAV
kglD+0XnHyGDPpV75AoDRResLa7rBGOJlV1oX9Ek4hllRxY3VeKgcsjxOHEq
PCamxGtbiggkpJ+u4qPijLrUquA/P+hdq7x3ZPsg7pxJ4XsnFw3/auFc9loi
rBcLN+eWPYPZAQrj8t0+5Fs4tDubZiJn+Jhf+fYu9IqdDjz9lwAra9PqbXv6
YVuX2vDmQBhEvUZD+YUmEK20Lr277jWMngxdVb9PAsvGV4SzubFYFuxcDlVh
8ozqTGkMyRsZDZNJsl9oEDZYXCcZ+wQ+ek75iVUTGHfsPWUpV4ivnNanaewT
KDdZe+ubYRoGvfOfXPjTBcuVVn/3vgR0Ji3vF6qnQts1KvfIXDgm7GvaPeNo
2FRW2NXwKoFwSTimz0qKin/EUp0K2wfoUf125xbrKIxZgn3vTkeDg9PqU+eh
MdSd8CuIiHVE58vw5perk1Ab9LYzTU5BgQbZ9vapflT+15CmaPURTV+vx2/a
MwaPurMr30/mwXLM2pKaSEeyumJdTE0o6LO81vfqGOCRVz3WpfgFM5eXf8sy
fYf78foEskIcMpJDj5YtkvBESFBB4nQ4livtQldXmsFlp+u41TEHLHtmqtdt
psI726XKdDoX5b8rE8pl2uAitmbpcGsFfgwKZP2QYvo7ycnZrSQTlUeGY+5S
epg9JRbw4mESxLp36CQuDSAt3fLrQfFABAXI72GXmcKbE1f81L98hLZpuGjb
Dxq0Cz/4hwvo4cqO52y6jd0YGuRkeyafhvjvg3OJ3kTsOiPtqR0fgcFXB5X1
e4fwcHT3n7g9sfDsqeCOLW3AU2X3us05AfjBUfpL/FgXuG5UTZ9wLyA87fU7
muNORLbd+Q7v1Sy81rqcs3kLBReD2Pv8bb6hMfzobnXvcSwqxVXvLi0AWZO6
O6uNmbcd9d6HrvljryqXvPklpu9Pb9RYWsyFjuhF41D+ESw/l+Ktbw0hPKL+
Lv8tRYbG4S0utsIpmMyVX9r8iYGtTryvnW/eIBhn+5R/nx5DkrmjxhZiFiE6
rib2sRkd67J034qwvkCEUaakjMUoGm94FgXNpeFg4N3TKVtHcf0OR/7Xc49B
XGfO4L1LQdnNz1PrYiIw2+aTOJpGB9ecVv+saDB4v0vf15isxwO+2hXH0K+o
mfmoF7E8hPb7n7iFOj0Jbu/VzQSCGXikqJZt4p1M8B1vubBpaRQbdnPdu5D/
At61/0Udi2X2p+iuc+X/omGkZCyr9JGBV+kaeQMSgTg9KzFsZDKKi9eMiti1
08Bv+ottI5PfKw+s88SOD4Tn+tRd/ONUJLMOjEcuWUHWfMsfikkvDs90sM8/
SEcdJ73MaL4XtHviKsZBiVgYpigrOPRCMUjI1XrtRzg11QXMnCBidPiIbYms
K0FzxN9GLLEFDtdfHWJUfMNtxQXLiUeDkGlV3qgR/xlth3wbz5tQQT9aUrlh
SwAULkx8Expk5usSvwFZshQSp4y4+yOY+czuLHtkOJfAWsb5r1J8BFeK9zdt
P2oLJ2JD2phxJfYIkd3mBlQJl3l6u5RnGZh9ea36l9IHdPo69Oi30kDyfpiw
bkMposuwzdq3AwSrfkMD62QInNjjFl7ejvwNA/aRO+Nhdlhq/NfcCOIWxlg3
fixB3h5hzxf1zP66L1Yn/sAdwqv3vAo0ydCMZ5F0r0mA3TdTAVbSMPrVx67v
NchH+3FegcZjw5ig+GkeYM73ZRJPzjHKML50RK+/mJSBvb3Gyd90KSjlUBJ7
l5EL/dSkt9rhRDTv5JG97ZVAKDpqY1H2aBQswl6cK38fgtrqzSnE9K3DPuLh
Oq+C4N9f7u0tO4D83y6ZhdcToZhIVr/J7JM3/jlPaJaecJG9lEFh+qHVlRNZ
TTzOqJx3O6zIOoS6f3e2bZPNgVpz7VqHA5P4VfLgS6pcONKlL0X/6ZjCrZWg
pdmIcBxvSFnbJNgNg333ah6PpyJ0W/o/BtNveGi9UmHHInCG88aXIhMaAlsP
3TedywT/FrMQHqb/5z8R6V8TFY6w60sk6QkSwnWNPxlN1kD61eiFno/tuOOt
dtzZtBQC3cl3HVbJuHj5k3R4vDvSfmgyhXcc9/3+rp1iuYxM+jEJDgsKisbW
DwRL+yHpTGb3ysNxaPIZGKs9eQUtlr0NVibjCLinmEHZlobD1/MbKp5M4HrJ
21ipLUlIYu0RKfhLQkfvDC/3fX+w+X3vLNenIvfKx8j+2idovuJy/uFpIhIK
mw9uKkmHQWuTTHbwOOouOl6vlY6F3oAE+4kDVOzQunDseH0e8havz5CZ+avz
Y4N1Sq4pfm3RufFVZhI862xXzR8GQHlL0+lMOwqii5q648cd8PRJdZCw6f/9
XE1s55lsVEuaR23YQ4aRibiTAymVANXLs/NTo0gb8i827kkjJAW8PJuhRkR9
o7V/0Z5cmHCnJpe9HMO9zdUjCU6xkNT5b+TiHiJk/j3v33mjDutSpOKelpMx
L6Spn2RZjqT+iZiuMBKORzH0/9WmoeT4fK1GPh3Ui88y95eng3xGWcMjcAQj
R30Jy/zJWOg2vehZM4jb59JOxtgVQ735Yo78nW7wLhUOMKbcCUb2qSut/QNY
wx61PepNKp4VOKk/Z0zCLJI/MzQwG7vYrWPNS2mIaA/y+HQjH/lEm8WkMiLi
3n/OmCzOwYWrnkPcEr2Y46lND5h9hbRHsomsSuNIf/3vUVNAKJR2nlrQ6x1F
2cesq5uckxDtbt06vmsQZmd/+f3j08CJ19L7HhSSUSowTUuYj4Bnf5zLESZv
xQm8wdS2KHBoS94oXiKDbW9pXVphPHqsDYVNh6Ywf05MMTQrFh5/oj3ti4Yh
vSPvvvS/ELBmfVm2D51E58jid6fNPtiQIBJ3+30vHpT7PHQ1+YqFk+Im55m+
zloTweJg/xn2VSa1wutGkCCmMhB2inmvLcZOPfwUaCw6J2d2+4H1tv67qM4O
POKQzzQYsSJ0Xtrg9FJiEv8Wopy75D5gfOjBdrl6EoqdnFunwqMhIrvF9aje
JDge7FXVWqyAgsHse6uMKfwT2d5y4kccSrJ/PiDwEtEV+teYyncdmV+72kUY
w3Cls379wZ4GxdsFLe1Mv3D0cN9lrpTA9HJWguRvKmxUGLHfzUIRVcEj8aSS
gd4WkTEGXyGOl1ItpOe7kKPt5LW55TxhmKB46VpbHyQmO7eEsSbDb02gr6AM
Ec7lYhcsG9IhFp6ojYp+KOqtbHoREkuIDB8cU2gdwXSofZnd1xgU5L98v3qA
iIGudSoiA9FYu5f+tfLaGLSNB6JT00KgW1zwZ/PLKdQlDYwPEsPAUhB+3Xhg
HEp9niErn5Jhsp1moX5tAEF5ZgGah5ug92uCHjZChP65Xy8OqAUin218q9sM
DYfmrnwTZc2D9An2ewqohYWKsvm5ji5wK+yL+Cc3AuXnExsZ8jk4kD2bEcTk
t5q8Nf1eMwHgp2jP7ivrR+rGkmTnY6FgKVw+ZK5IwyuByHq/qrMEN0trw3le
Epr3bvljmJ2A8uluKcFaBiQZ6byZjTlQVE2JTphh3vu9v+/OXSgA/9H2Lxrr
u2F7+Kvut43v4UXL6jSXoaIz3T4+8EsUeE/wD55n5rtNYdGBmtdZ0Dxx9+Ra
DqY/11WyDrIkwc/PXVrmbDNY7faprvJbwI+D4qiWTYXIPNv295Vv4NBk8JzF
ngwPs1RPhmAQeMyn9riUTkLe7PCLkKfpUCAff7k3gAGzc1yKQu+jEN/HtcDG
7J/vm05oiz54hxO7dw1OOVJAqNQ9HcbzGbTOJ+VzjRScwpmdI+0RhLLTMiV0
2zH8Iq7dsqxfSLiUS8h9L0jDjmIV731DUfivfbDR3IGBDwu3F/ayFMH7UZN/
0kEKoi6PX5xV9Qc9O0mWa5IEZzELtTMWRVjn7jWc/XYKRc3JMadXvmL59tP1
FfM09E3aN+TJuEDLR6HfdeckJF6acLi8dmfue5PH+h1MX3Bpacg5+gahFUYV
bb5EbLn0dk4v5wNzv/lKstWG8VHL6ZDcYD5491ScW3xFRvipbqcTH31g9XpN
qhb7JLKIpYf4HcPxuVxFQCediIBDz8w28dniaS/1TZHsKI48XvSuKg3GVQei
WZQIDRZyg0uqPAWYVi52j95HRmT1T8Xwbd9wnNTu/TWajDuWM7K2i4mIbDjz
TYE+gjJbQZqGeTgE+W4XXm4gQ2Ls5W+58WKCnNN3SfqvMeww1vjvUkcatFfE
bC45jKLNM7vwZnUloeRd3Rsr5VFkELwPBSm64fvT0HcJC/34pWv0K+lpAbq3
JtTHWNKg/ql74cB8CGRkfh86vX4Yyzu3T+hPVIJnqenv3q3jcBDXeKh8IgcO
pfcmN1vTMC/5yJSuGosb5cfWFhuOIpeu99U1JA2xDQ8PbR8eha2TibHUeDSO
BG+Xs9LrheXHHfnbvwUhLPtvuGIiFanilZL/DCMwWkSnnCwn4u6dW0KXvD9g
cZPfVdqGbixMTvlF7fwEUkxHM9tuGnQPFC9kPYtj8uXamcDjP7EvrzT9nvMr
QkKw77G0gy0wHdvyo8SzBAklajKLd2nIut0t/f1zLdMzjT/kakyCktGUoN2X
D666aB/XmRHYXlc+8sJTCutEJMTj1Zh+GEleYnG+ipDLSandp0kw8mZzEtDy
J5QbZTnJSxJx5uieZ5fF4mEi3BBZ10aCQVhVwBa2aBT9zHeXSpkEm87SgTO2
Ofj6otDtMCcV7xWkPIjzH2EUK3W348gAXD9qbRz//R5jHULBXB/6cf6fKedx
jkpMVF3M8NhPwhH+y2mXdlVhjN6hMmvegqMiC8ruSQY42+PSahRFxaLC1rjD
Xfn4cdWVlWVhGIJ3rnu9d4+CvEj2T8+uYcxee+Ebk+1DSCgmBFkpEHFjbJpz
7TZHgo58zQhjDwmbXf9oeTD579yiksUN5RHcVvfaU7euBhsc3/n1MUhgPJa4
NFx4HwsCb4RDRWnQudLBwWGbBSqjZZvQ+T6YfGd/72LyCtGCKwpXBQchekz1
72JAIWR/mWgLevQhy4UytutdIT4SO7K0KkbgGv7b4p1eAtqCS93SBUbwWSRC
ePVFLkLPWe7bGzuIV1uPzAes/0iweJMVfzmcDkrig+bF4+9wPO4U39uT7dig
+HshZv0PVDTnTbyomUDyZdP+PW0pSFs8+Wz+AwVGdwrCTdSYPmgbnCzc14cO
lTfTCwEfUUoT7rwqy0AAh6ldSPsrDI9wmAaPTyGnbWL+q0w5TpLuyjRk9SNo
I9HlDm8YVMuOvn4wQseOW/5vE38GEGzX/Kco4D+CyohYw36PHBR/X+fsETGK
PDuKTF2eL+qSCb0B5pPAwWeC415VOJHbuXSOvxPCBxsD/MKycfz0rKOSygiC
Gg0lbf4ko/uv19UCrWG4be25la70Ed6h0Rp3eQaRtNxW3oRqvA2Lf7pvOxXc
qtWHRUrjcchc04+dhYHAO+aKykx/Vtutr2hST4GIwAv9oHWZhHkXR59CFzpC
IjWp8kJBMHuozDBfN4kzxfkSlg0FSKIIS73eOYqGxtSl+ynO6HQyvsylQsaj
xz/tp1k+4IaZicZe5zG0jSpG+eysxMyDxneFo1OQuHaKTSr2FeGhbfTKwMIE
qK6pDxOv22Jorsg3k8lT5NWOhEPNgfCq6ey6GEPH46MrD7kYH6GjIEgJARWE
Z9Ejf5PzCVM+590/S40ghbJfwMcwBvZep0LaA8fw8b7xIc5bmYSFx3LJSa+H
IHvj0EhZ42NMrn7SuzgyjteJth36yeFoEPCYvn9hFI/6Flwf5L3D7Y4fLkNC
Q+hhGAp5bIrBo6IjFkRRCr50c3dmVUZh3E6Hr0eCASV8O5G9jpnHNn5SqtnM
fQk4O0EOSYLtNpnu7JkxDN0K0yzgS0bB1oNXwvYSsTnZ48lG7hjY6pYxDEtG
cGt7xi0DrnQI2lxvF7w6jgQvPlp1fBFh2WGrn9qpEVwWf6e5a6YSbRc3idVM
diHssuhn0mgkwl33av+4PoAoIfb5S9x3seC96e/oNA2Sd/n0HdT8QV2zsSgu
bARz9psPFX8tQCGHVPI9qwkc28jVPuKfBH7aFwsrxx58moq/IpydBJLhxlxT
ISrEdg21PXF1xGdHveJIGg1Ggnqx9aRYwouOs1674+h4f9z8wsq3XBAZ6sMS
zHyo23dCiJKZhNue8WcPnx7BzSsLjr2cvuB3VwwzDxmCzoZ713E6E9G18bFn
P4+h8Naf1os/PDAtXlVM+TsOoYsjvV/uxUPtznWhlSoS5NX9auy3h6BBPKZq
31wbfly/GSMpnAWOvUQCxxEarrIKf9z6fgeoNl8H/s304mPQKp9hsB8MYklK
Dxm94GKZ4U+KjIJBZZtY3Z9unLuTSOSmR6BcZHe0vPsUHo3kj6WPFEFcY9e7
s+6d4LpzJ5TA5wspnk1+vMtjkDsWHbo/1Q+vXZxvPyLQoXdYc/1l70yczljQ
DXebBMPu+p99X31Rq0+vbWkbR0nk74g0u0TYtykzHllPwf7PcnZwJ9MX1vfv
STOiQo9uk/zhaw4hxXdUZmR0FI6/F25ZEW9DYL3do8s+QxhXTTEKPRoDeu3h
Z2wCJDQcznDIRQo2dAQbnhDvBpVvb965jdnQ0mhyzmcw59vQ+a3C2p3wOtP2
fJN8H87+TeCvkXlDqHByrpCtGwXJoXvQKTCe6R+3ilnGqCCuszZcHYzH6anx
gHgq831cHzjv3veRYLPj8UniyCi4pg5ecpVLR58Avexe6gR+GeifNPqSBxHW
z+0nlShwKY9Ss07Oxrlgfpk78514nzjVcka5AjP37h/jt5uAiGS2ZLBOGhJS
TXUlMulQjst+G+BbQPgfuhaTrg==
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1:eJwVl3c4lY8bxqUlqVSKioZKSUYUyrhlRAspWykjUl9lhJSMKBqSvUf23qPI
kWzJyN7nOMOxjpWU0e/8/jrX+8+53ut5n+e+P59DJg+1zFlZWFgurGVh+f/v
zoTHpaZOEzB9s8h9cP4ZQT2s40hrEQV5nr+09DsJ8JRct6FkuhcS2q6nNtOL
cJs8mhUdOgzK0UgDacV8xDfO67RQ6OBWuVfJ9z0Q1jeT51t0aRgbdEj7MBgH
zd6J70ue4+h390ldHa+EJi93f0vhCLYUq+xZVo/HzV0lCRcmxvHkANE8ie6L
iV1RwU95yfi3/6fLcmYZQhe5XMcdGSgNkK3cWxELRWOxQ1vihrBWUv6293M7
2F4xZnH7N4R1bzs3174MRFtzvCTXuyEYmV31/V31kZCifk403WUS7PUT8fKh
DwkmO1aEeYcoyGi8d+ezUzBq+Ro4xp+RMcJt/rD8ZRGuePoL7LpARvePsLJ0
0WSC0aVjFU85+mGz0nIiiuCHwQR7PtaBXhS/6LSYWleBy0ELN4V6GeATu2hp
X20LezZuYr0lBUst5XNJVZ4EPvWkM/wLVFzulHmipPIVt4w/qb/eMgJP2wQD
yT8BBA+FpRDRZ8NYZ/Z40e+uF8orYu4Ifu2Guli96jhnHrj+iWPjTSL+kFNb
3uq7I1neSixmxxTIC+9C+c2KUGdox620lYpV/sTMidKP4NQ2oi8WElH6KyVM
WPM5FBMGxiV/jEIsijXIr+8OnnnvFw760IPBLUpLqksZIEu+XWGzncKhh2ai
19+5IWN598CTo2Tsv2e3xNWYhGd39RRYn43Bb5vJ1XjXfPi7BEpG6tMRVSoi
/TA6FgkEv0+r4wMYWScu2+3kjttD5hG0SiK26Z6rOVsaDjWVYZ20NirOaxyk
7fV5B2shy1DuiCkE/vSTJVcFwPf8rS293wfhlmwt62F8B1mvS3fc/EKC2a6Q
G8G73oJu1bZiUTcC0SfX1d43JoPtwQ9nm2YKFpoF4xxmckAtpVW07aSg485v
6eQIPxg/XbG+3UNC2h/j4/P1RXjf6BBjSSYhJ7r9k9y+LLyh3O54fJUKitfj
Lg7bWBQE7pQwVR9CRbrWKcnKcHhw3SZt1Z7EPQ7ezNbUeIjDWfOvwBjasWWG
XTgHDqRIjs+JwwjUTDW1WcmE3tB/A7tvkzC5FKY7sZiHKoWBDSd5B3BG2ei8
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
TXUlMulQjst+G+BbQPgfuhaTrg==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 0.9983238426073141}, {-0.09922242497073958, 
             0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 0.9983238426073141}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1:eJwVl3c4lY8bxqUlqVSKioZKSUYUyrhlRAspWykjUl9lhJSMKBqSvUf23qPI
kWzJyN7nOMOxjpWU0e/8/jrX+8+53ut5n+e+P59DJg+1zFlZWFgurGVh+f/v
zoTHpaZOEzB9s8h9cP4ZQT2s40hrEQV5nr+09DsJ8JRct6FkuhcS2q6nNtOL
cJs8mhUdOgzK0UgDacV8xDfO67RQ6OBWuVfJ9z0Q1jeT51t0aRgbdEj7MBgH
zd6J70ue4+h390ldHa+EJi93f0vhCLYUq+xZVo/HzV0lCRcmxvHkANE8ie6L
iV1RwU95yfi3/6fLcmYZQhe5XMcdGSgNkK3cWxELRWOxQ1vihrBWUv6293M7
2F4xZnH7N4R1bzs3174MRFtzvCTXuyEYmV31/V31kZCifk403WUS7PUT8fKh
DwkmO1aEeYcoyGi8d+ezUzBq+Ro4xp+RMcJt/rD8ZRGuePoL7LpARvePsLJ0
0WSC0aVjFU85+mGz0nIiiuCHwQR7PtaBXhS/6LSYWleBy0ELN4V6GeATu2hp
X20LezZuYr0lBUst5XNJVZ4EPvWkM/wLVFzulHmipPIVt4w/qb/eMgJP2wQD
yT8BBA+FpRDRZ8NYZ/Z40e+uF8orYu4Ifu2Guli96jhnHrj+iWPjTSL+kFNb
3uq7I1neSixmxxTIC+9C+c2KUGdox620lYpV/sTMidKP4NQ2oi8WElH6KyVM
WPM5FBMGxiV/jEIsijXIr+8OnnnvFw760IPBLUpLqksZIEu+XWGzncKhh2ai
19+5IWN598CTo2Tsv2e3xNWYhGd39RRYn43Bb5vJ1XjXfPi7BEpG6tMRVSoi
/TA6FgkEv0+r4wMYWScu2+3kjttD5hG0SiK26Z6rOVsaDjWVYZ20NirOaxyk
7fV5B2shy1DuiCkE/vSTJVcFwPf8rS293wfhlmwt62F8B1mvS3fc/EKC2a6Q
G8G73oJu1bZiUTcC0SfX1d43JoPtwQ9nm2YKFpoF4xxmckAtpVW07aSg485v
6eQIPxg/XbG+3UNC2h/j4/P1RXjf6BBjSSYhJ7r9k9y+LLyh3O54fJUKitfj
Lg7bWBQE7pQwVR9CRbrWKcnKcHhw3SZt1Z7EPQ7ezNbUeIjDWfOvwBjasWWG
XTgHDqRIjs+JwwjUTDW1WcmE3tB/A7tvkzC5FKY7sZiHKoWBDSd5B3BG2ei8
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
TXUlMulQjst+G+BbQPgfuhaTrg==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 0.9983238426073141}, {-0.09922242497073958, 
          0.17696362273988409`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"wf\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against wf\"", TraditionalForm],
  PlotRange->{{0, 0.9983238426073141}, {-0.09922242497073958, 
    0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
9nIq1dAG0gDGgJrL
  "],
 CellLabel->
  "Out[186]=",ExpressionUUID->"72ed6b02-68fe-4ba3-b400-cd46c1299a05"],

Cell[BoxData[
 RowBox[{"-", "0.14813547224561174`"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
TvperqENpAHMP5ua
  "],
 CellLabel->
  "Out[190]=",ExpressionUUID->"3b71c8ee-ad48-44c7-a9b3-84b192607eed"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
oVhacUhkaAXxf5uE4eo=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
oVhacUhkaAXxf5uE4eo=
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{45.93291105588634, 
            249.9923567291352}, {-0.09922242497073958, 0.17696362273988409`}},
            "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {45.93291105588634, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{45.93291105588634, 
           249.9923567291352}, {-0.09922242497073958, 0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {45.93291105588634, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1: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
oVhacUhkaAXxf5uE4eo=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{45.93291105588634, 
         249.9923567291352}, {-0.09922242497073958, 0.17696362273988409`}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {45.93291105588634, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"k\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{45.93291105588634, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against k\"", TraditionalForm],
  PlotRange->{{45.93291105588634, 249.9923567291352}, {-0.09922242497073958, 
   0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
FtCbpaENpAHFApqi
  "],
 CellLabel->
  "Out[193]=",ExpressionUUID->"00a1b17c-4caa-4b88-b61a-133b4b7b5a96"],

Cell[BoxData[
 RowBox[{"-", "0.0626026207628633`"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
rro7R0MbSAMAzSebvQ==
  "],
 CellLabel->
  "Out[197]=",ExpressionUUID->"2571b0fb-ce9b-497b-a114-b79c5b8a4218"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{1.2512515777747895`, 
            7.2471609565673845`}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {1.2512515777747895`, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{1.2512515777747895`, 
           7.2471609565673845`}, {-0.09922242497073958, 
           0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {1.2512515777747895`, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{1.2512515777747895`, 
         7.2471609565673845`}, {-0.09922242497073958, 0.17696362273988409`}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {1.2512515777747895`, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"rr\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{1.2512515777747895`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against rr\"", TraditionalForm],
  PlotRange->{{1.2512515777747895`, 
   7.2471609565673845`}, {-0.09922242497073958, 0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
Pjdnj4Y2kAYAzsCb8A==
  "],
 CellLabel->
  "Out[200]=",ExpressionUUID->"14df3356-e196-4c76-a55b-41f923bd0dfa"],

Cell[BoxData["0.2287715020645784`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
NlDcr6ENpAHGhZra
  "],
 CellLabel->
  "Out[204]=",ExpressionUUID->"4e5cc96d-1fad-4aee-92cd-95d7e3753f76"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
SDBKJRe2Bg0vek/1QyylKJAQXE76H5uQbg8=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
SDBKJRe2Bg0vek/1QyylKJAQXE76H5uQbg8=
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 0.29428566118225136`}, {-0.09922242497073958, 
             0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 0.29428566118225136`}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1: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
SDBKJRe2Bg0vek/1QyylKJAQXE76H5uQbg8=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 0.29428566118225136`}, {-0.09922242497073958, 
          0.17696362273988409`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"am\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against am\"", TraditionalForm],
  PlotRange->{{0, 0.29428566118225136`}, {-0.09922242497073958, 
    0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
LvtzT0MbSAMAz2ycGg==
  "],
 CellLabel->
  "Out[207]=",ExpressionUUID->"cb59664e-79bf-4bbe-a717-bf2b8ea8f9c4"],

Cell[BoxData[
 RowBox[{"-", "0.5715775238331169`"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
bgt7qKENpAHLdJuH
  "],
 CellLabel->
  "Out[211]=",ExpressionUUID->"5569616e-1147-4167-bd40-e6b1f275318e"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
k+tOgbNvy/ipjVx0OmXmP66pJIa0JTxyoseQRriw+0vZQXFY9qA7YzOW76st
J1jnYaZhnnavfzcUi/tWji0FIpwv+paoFQnr9AfnHs5VQqY8kO59bD9eC9wy
uno6C/l7wz92GjZhSeil1oxMFI78sEtX46lD9syDCtvAFDxcUvIYe14JEwvN
J8KzEbgQx/t+iz0f+jF0uQer/MHsx1RppFGOZIFKoS3VUJz7r7BHMbcFuhrq
Z+RcvPFxssBN/2YXVn7Me4XTF+P5V7OD/UcHcf9Y4UrGm2hojdnuerZVCJac
0lQDK2fi/LGQfXlPOqH1fV9rkVMRNh8McqWrkJDxtE+kuaQODF07Gm3ERzCd
1hKnMpiLiEk/jRaOzzBRvsrl6CSM3Ke3fkzeJBAbNrVGZqWARku57LM/q6Hm
QmXBfceHcGtWWWHN7cbFE8xvbvLHwjIpJi0juwePgqt991FFYCq4WVLk5DSo
7q0du2iSBUuv5iXmmHF8lBR2GF+KweOm6zfLGSpgG3Nn9+yfjygoDZfjzxrA
lS0t2lN7K+Flod+zo7cdXBw3U+QYqtE1OTkTd7YcJ/hWrtonPILElzPxapyt
WJXcH83Zmwuyy1Kn+bwmwKOh/O6jfTi6HOZLyXsa8Pu2o2dkpitxfLJ/5MfJ
Btz9/pN25wFz4nLd+cO6ip2gsf17x2Gb/6790/iW8V83niq+Y66nqMWe2WHR
y+mdWDATlBvLf46Y9zxcp1/045589969Jhlw/U/fb7W3E5rN1B9tNJ2x+6Th
UPaOPpw7KfNv1TcfGj8Mh3ZX1iLDZvo7g0c+DFXIQs+a18A25I+ex4M4ZPx4
PtOwVYsSvlDeTcdsuPRZyoVUJsF5P9eSL2UMkaSxzPlF7ium41+0rZ7yQOHt
6QyvWz3YJfVnJZKyFVZTm2x20S1IvKk1xNyZhLZQEb7vzmNQ08gL0byRje75
wKjZC23ovub2c8U3Bsw1DylHiibgu1frVSDJGSSFyTnloEFkdc4tVVwqw/l1
HdvOi1Xw3z1uo3E0GD/qzjrvOVsAOnUf9/guX8Lu1yWXOZ5GVIZGqQ45ZIF8
qJeDQqgKOa+mL9XneKKMNWw9RakdOP6GZ/ZdNbL/q9ypn14L3uNNvl7Bmei7
MtLQxDS8nSOqQsZ/E3FYICVV+XEr7Pb3q6dKxyBIJ+bXRdI4EtY7y1pQg/Kd
OyLL06vBKFPDyVcaC6Hw2Y6xbd/x09CRurrtz+8CC16bbHs/H7fjQ3+KdEJn
wev2yNFOBIYpfbl8xh8BM4OrNpH1uFiYK6jfmIe9TvWPA7Z9vbEpee15khWu
rj0X/5Tcj5dmXaY/ybwxIt8YZiHfhc5vUuGu9JW4HUdNarlZDsHb56mEo5wJ
MY29nPt0u/DFNtkoXtkESg33n9OqtWFqszuOvc0PbxSfGhVTdMLsxIbRoYUY
yI41m+r1FIF4EzH5LzGXCDz2MkhavwpJ02zcrqqROKapzR82nomY50/YadXT
iZmClrlLju0Qv8s++anJDFVeSQFnlmvxId6k+2FiCBJqthhOB5LwcnDF9kWO
Bxztnlr7n6hE/4LqGYc9kTDstt986diNz32MPRmV4fgn0dET5NoAaVSdzqRw
hcN/SoFqazVI9BWdmwpMQCyx4OEYPolR9WClPNZE/C52sz/M2A2aRAfL3YyR
iOl0jo0Xb4f6wTT1R4dSQTP7J3QXVyTi3rF+rYktIBpGtKh/Xm7FTQEPJYZf
lVjtMnLbsuxF8M1zJRPfwpCXXPKkKyUX4Weol+QYdWHz2VHCvbobQrqsD1/f
8MHRd2+Xbt5twaIpDXthRR5+aP10p+rowsndh0iTPgk4dOGqmJ1mE4rnY+V5
MxPQETXW4tz3DfwMo52WtuZoo9xlo/2gA2o8D6IaJqIIBv5s8Wn7dnw8pXN9
oyobfC3PRfPJhlDPcvrMdHoCPvTf8VF8XIPH8ivmA7SegOIvZYiO4d4uA2Vc
SMfauJZHsmE/8tX/dsi2OoDsuoLm14MknJGdHPhsEIvlmczg+6PtuKzoVWt6
MBAC/V4K/hoEWpUfRwrxZkCYY2/5G/FKKJDzxuz/SIdBh2P2SbG1iPHfZFUN
8MKzm1aqorsqcYjsF0dCWDgC8mYXDu4uhZhG/DjjTCgyhfZO6ZBt7+Nk7vfU
yQJ4LPzpXdVqxCENjSCC1RNfxjrv/prvgsTJiCC2ZC98t7i5E8tTeMCpRHnT
JR0jkiGZZGYTWHil/JelwhNyT69Q3ChrQ1HYn9CUV/H4ONty17pvAqZ/1zMD
egohRFX9ntEkHw9mjBO9K7KI3l9eeWp76mD+Z0X92fhTxKz8fvnzeRdmZZLU
gk5Eop7ppbX+xVY0cqa9zkYSpuKkCCmpBnxhPZIjtjsTxMnJlxH7KvC4saeq
3NCeuPhTwelNexVE/8Vx1F5yIyItUmv/dLZj4nXfiIVfLDL+ZkcbDNRinMJQ
dXMkFkZ7HJhtQzvwwPaF1WGWGOKe33Kcbc4YDs0fl7OVSEXjQ6vME1okLD96
eFZtm3MHw2oFRKlaYFMWfsMwMRM0Lo/L+iha8TF+vv3i1XKsFD/3FmnqBJ9Q
plDAvRRQLJxOC4/MxtXoTHdfzzzif1xSGTo=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
k+tOgbNvy/ipjVx0OmXmP66pJIa0JTxyoseQRriw+0vZQXFY9qA7YzOW76st
J1jnYaZhnnavfzcUi/tWji0FIpwv+paoFQnr9AfnHs5VQqY8kO59bD9eC9wy
uno6C/l7wz92GjZhSeil1oxMFI78sEtX46lD9syDCtvAFDxcUvIYe14JEwvN
J8KzEbgQx/t+iz0f+jF0uQer/MHsx1RppFGOZIFKoS3VUJz7r7BHMbcFuhrq
Z+RcvPFxssBN/2YXVn7Me4XTF+P5V7OD/UcHcf9Y4UrGm2hojdnuerZVCJac
0lQDK2fi/LGQfXlPOqH1fV9rkVMRNh8McqWrkJDxtE+kuaQODF07Gm3ERzCd
1hKnMpiLiEk/jRaOzzBRvsrl6CSM3Ke3fkzeJBAbNrVGZqWARku57LM/q6Hm
QmXBfceHcGtWWWHN7cbFE8xvbvLHwjIpJi0juwePgqt991FFYCq4WVLk5DSo
7q0du2iSBUuv5iXmmHF8lBR2GF+KweOm6zfLGSpgG3Nn9+yfjygoDZfjzxrA
lS0t2lN7K+Flod+zo7cdXBw3U+QYqtE1OTkTd7YcJ/hWrtonPILElzPxapyt
WJXcH83Zmwuyy1Kn+bwmwKOh/O6jfTi6HOZLyXsa8Pu2o2dkpitxfLJ/5MfJ
Btz9/pN25wFz4nLd+cO6ip2gsf17x2Gb/6790/iW8V83niq+Y66nqMWe2WHR
y+mdWDATlBvLf46Y9zxcp1/045589969Jhlw/U/fb7W3E5rN1B9tNJ2x+6Th
UPaOPpw7KfNv1TcfGj8Mh3ZX1iLDZvo7g0c+DFXIQs+a18A25I+ex4M4ZPx4
PtOwVYsSvlDeTcdsuPRZyoVUJsF5P9eSL2UMkaSxzPlF7ium41+0rZ7yQOHt
6QyvWz3YJfVnJZKyFVZTm2x20S1IvKk1xNyZhLZQEb7vzmNQ08gL0byRje75
wKjZC23ovub2c8U3Bsw1DylHiibgu1frVSDJGSSFyTnloEFkdc4tVVwqw/l1
HdvOi1Xw3z1uo3E0GD/qzjrvOVsAOnUf9/guX8Lu1yWXOZ5GVIZGqQ45ZIF8
qJeDQqgKOa+mL9XneKKMNWw9RakdOP6GZ/ZdNbL/q9ypn14L3uNNvl7Bmei7
MtLQxDS8nSOqQsZ/E3FYICVV+XEr7Pb3q6dKxyBIJ+bXRdI4EtY7y1pQg/Kd
OyLL06vBKFPDyVcaC6Hw2Y6xbd/x09CRurrtz+8CC16bbHs/H7fjQ3+KdEJn
wev2yNFOBIYpfbl8xh8BM4OrNpH1uFiYK6jfmIe9TvWPA7Z9vbEpee15khWu
rj0X/5Tcj5dmXaY/ybwxIt8YZiHfhc5vUuGu9JW4HUdNarlZDsHb56mEo5wJ
MY29nPt0u/DFNtkoXtkESg33n9OqtWFqszuOvc0PbxSfGhVTdMLsxIbRoYUY
yI41m+r1FIF4EzH5LzGXCDz2MkhavwpJ02zcrqqROKapzR82nomY50/YadXT
iZmClrlLju0Qv8s++anJDFVeSQFnlmvxId6k+2FiCBJqthhOB5LwcnDF9kWO
Bxztnlr7n6hE/4LqGYc9kTDstt986diNz32MPRmV4fgn0dET5NoAaVSdzqRw
hcN/SoFqazVI9BWdmwpMQCyx4OEYPolR9WClPNZE/C52sz/M2A2aRAfL3YyR
iOl0jo0Xb4f6wTT1R4dSQTP7J3QXVyTi3rF+rYktIBpGtKh/Xm7FTQEPJYZf
lVjtMnLbsuxF8M1zJRPfwpCXXPKkKyUX4Weol+QYdWHz2VHCvbobQrqsD1/f
8MHRd2+Xbt5twaIpDXthRR5+aP10p+rowsndh0iTPgk4dOGqmJ1mE4rnY+V5
MxPQETXW4tz3DfwMo52WtuZoo9xlo/2gA2o8D6IaJqIIBv5s8Wn7dnw8pXN9
oyobfC3PRfPJhlDPcvrMdHoCPvTf8VF8XIPH8ivmA7SegOIvZYiO4d4uA2Vc
SMfauJZHsmE/8tX/dsi2OoDsuoLm14MknJGdHPhsEIvlmczg+6PtuKzoVWt6
MBAC/V4K/hoEWpUfRwrxZkCYY2/5G/FKKJDzxuz/SIdBh2P2SbG1iPHfZFUN
8MKzm1aqorsqcYjsF0dCWDgC8mYXDu4uhZhG/DjjTCgyhfZO6ZBt7+Nk7vfU
yQJ4LPzpXdVqxCENjSCC1RNfxjrv/prvgsTJiCC2ZC98t7i5E8tTeMCpRHnT
JR0jkiGZZGYTWHil/JelwhNyT69Q3ChrQ1HYn9CUV/H4ONty17pvAqZ/1zMD
egohRFX9ntEkHw9mjBO9K7KI3l9eeWp76mD+Z0X92fhTxKz8fvnzeRdmZZLU
gk5Eop7ppbX+xVY0cqa9zkYSpuKkCCmpBnxhPZIjtjsTxMnJlxH7KvC4saeq
3NCeuPhTwelNexVE/8Vx1F5yIyItUmv/dLZj4nXfiIVfLDL+ZkcbDNRinMJQ
dXMkFkZ7HJhtQzvwwPaF1WGWGOKe33Kcbc4YDs0fl7OVSEXjQ6vME1okLD96
eFZtm3MHw2oFRKlaYFMWfsMwMRM0Lo/L+iha8TF+vv3i1XKsFD/3FmnqBJ9Q
plDAvRRQLJxOC4/MxtXoTHdfzzzif1xSGTo=
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 0.7764319439929982}, {-0.09922242497073958, 
             0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 0.7764319439929982}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1: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
k+tOgbNvy/ipjVx0OmXmP66pJIa0JTxyoseQRriw+0vZQXFY9qA7YzOW76st
J1jnYaZhnnavfzcUi/tWji0FIpwv+paoFQnr9AfnHs5VQqY8kO59bD9eC9wy
uno6C/l7wz92GjZhSeil1oxMFI78sEtX46lD9syDCtvAFDxcUvIYe14JEwvN
J8KzEbgQx/t+iz0f+jF0uQer/MHsx1RppFGOZIFKoS3VUJz7r7BHMbcFuhrq
Z+RcvPFxssBN/2YXVn7Me4XTF+P5V7OD/UcHcf9Y4UrGm2hojdnuerZVCJac
0lQDK2fi/LGQfXlPOqH1fV9rkVMRNh8McqWrkJDxtE+kuaQODF07Gm3ERzCd
1hKnMpiLiEk/jRaOzzBRvsrl6CSM3Ke3fkzeJBAbNrVGZqWARku57LM/q6Hm
QmXBfceHcGtWWWHN7cbFE8xvbvLHwjIpJi0juwePgqt991FFYCq4WVLk5DSo
7q0du2iSBUuv5iXmmHF8lBR2GF+KweOm6zfLGSpgG3Nn9+yfjygoDZfjzxrA
lS0t2lN7K+Flod+zo7cdXBw3U+QYqtE1OTkTd7YcJ/hWrtonPILElzPxapyt
WJXcH83Zmwuyy1Kn+bwmwKOh/O6jfTi6HOZLyXsa8Pu2o2dkpitxfLJ/5MfJ
Btz9/pN25wFz4nLd+cO6ip2gsf17x2Gb/6790/iW8V83niq+Y66nqMWe2WHR
y+mdWDATlBvLf46Y9zxcp1/045589969Jhlw/U/fb7W3E5rN1B9tNJ2x+6Th
UPaOPpw7KfNv1TcfGj8Mh3ZX1iLDZvo7g0c+DFXIQs+a18A25I+ex4M4ZPx4
PtOwVYsSvlDeTcdsuPRZyoVUJsF5P9eSL2UMkaSxzPlF7ium41+0rZ7yQOHt
6QyvWz3YJfVnJZKyFVZTm2x20S1IvKk1xNyZhLZQEb7vzmNQ08gL0byRje75
wKjZC23ovub2c8U3Bsw1DylHiibgu1frVSDJGSSFyTnloEFkdc4tVVwqw/l1
HdvOi1Xw3z1uo3E0GD/qzjrvOVsAOnUf9/guX8Lu1yWXOZ5GVIZGqQ45ZIF8
qJeDQqgKOa+mL9XneKKMNWw9RakdOP6GZ/ZdNbL/q9ypn14L3uNNvl7Bmei7
MtLQxDS8nSOqQsZ/E3FYICVV+XEr7Pb3q6dKxyBIJ+bXRdI4EtY7y1pQg/Kd
OyLL06vBKFPDyVcaC6Hw2Y6xbd/x09CRurrtz+8CC16bbHs/H7fjQ3+KdEJn
wev2yNFOBIYpfbl8xh8BM4OrNpH1uFiYK6jfmIe9TvWPA7Z9vbEpee15khWu
rj0X/5Tcj5dmXaY/ybwxIt8YZiHfhc5vUuGu9JW4HUdNarlZDsHb56mEo5wJ
MY29nPt0u/DFNtkoXtkESg33n9OqtWFqszuOvc0PbxSfGhVTdMLsxIbRoYUY
yI41m+r1FIF4EzH5LzGXCDz2MkhavwpJ02zcrqqROKapzR82nomY50/YadXT
iZmClrlLju0Qv8s++anJDFVeSQFnlmvxId6k+2FiCBJqthhOB5LwcnDF9kWO
Bxztnlr7n6hE/4LqGYc9kTDstt986diNz32MPRmV4fgn0dET5NoAaVSdzqRw
hcN/SoFqazVI9BWdmwpMQCyx4OEYPolR9WClPNZE/C52sz/M2A2aRAfL3YyR
iOl0jo0Xb4f6wTT1R4dSQTP7J3QXVyTi3rF+rYktIBpGtKh/Xm7FTQEPJYZf
lVjtMnLbsuxF8M1zJRPfwpCXXPKkKyUX4Weol+QYdWHz2VHCvbobQrqsD1/f
8MHRd2+Xbt5twaIpDXthRR5+aP10p+rowsndh0iTPgk4dOGqmJ1mE4rnY+V5
MxPQETXW4tz3DfwMo52WtuZoo9xlo/2gA2o8D6IaJqIIBv5s8Wn7dnw8pXN9
oyobfC3PRfPJhlDPcvrMdHoCPvTf8VF8XIPH8ivmA7SegOIvZYiO4d4uA2Vc
SMfauJZHsmE/8tX/dsi2OoDsuoLm14MknJGdHPhsEIvlmczg+6PtuKzoVWt6
MBAC/V4K/hoEWpUfRwrxZkCYY2/5G/FKKJDzxuz/SIdBh2P2SbG1iPHfZFUN
8MKzm1aqorsqcYjsF0dCWDgC8mYXDu4uhZhG/DjjTCgyhfZO6ZBt7+Nk7vfU
yQJ4LPzpXdVqxCENjSCC1RNfxjrv/prvgsTJiCC2ZC98t7i5E8tTeMCpRHnT
JR0jkiGZZGYTWHil/JelwhNyT69Q3ChrQ1HYn9CUV/H4ONty17pvAqZ/1zMD
egohRFX9ntEkHw9mjBO9K7KI3l9eeWp76mD+Z0X92fhTxKz8fvnzeRdmZZLU
gk5Eop7ppbX+xVY0cqa9zkYSpuKkCCmpBnxhPZIjtjsTxMnJlxH7KvC4saeq
3NCeuPhTwelNexVE/8Vx1F5yIyItUmv/dLZj4nXfiIVfLDL+ZkcbDNRinMJQ
dXMkFkZ7HJhtQzvwwPaF1WGWGOKe33Kcbc4YDs0fl7OVSEXjQ6vME1okLD96
eFZtm3MHw2oFRKlaYFMWfsMwMRM0Lo/L+iha8TF+vv3i1XKsFD/3FmnqBJ9Q
plDAvRRQLJxOC4/MxtXoTHdfzzzif1xSGTo=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 0.7764319439929982}, {-0.09922242497073958, 
          0.17696362273988409`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"af\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against af\"", TraditionalForm],
  PlotRange->{{0, 0.7764319439929982}, {-0.09922242497073958, 
    0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
dnzEoKkNpAHH35ru
  "],
 CellLabel->
  "Out[214]=",ExpressionUUID->"3780760d-ff35-4ec3-9142-8afad0e87062"],

Cell[BoxData["0.2836281937031842`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
/lfDrKkNpAHLD5tI
  "],
 CellLabel->
  "Out[218]=",ExpressionUUID->"24d0e5f8-3c23-4d92-bb55-cfd857c4ec08"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
A49QmpCvYiLOvFkntZTqh0REmrOXazbhf7LxHDU=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
A49QmpCvYiLOvFkntZTqh0REmrOXazbhf7LxHDU=
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 0.8367215615756346}, {-0.09922242497073958, 
             0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 0.8367215615756346}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1:eJwVmWc4l/8bhkVSSiQKGaGkhR9RKa4ySpPMiiQtSdmzZIfsvffee4+v+bX3
3iuEIsnK+vu/el49x/Ecn899X9d5Hg+7urbsa1ISEpJbZCQk/3/mMF7gz93T
i5dOa8dP/v1MiJ15cm1zfykybZdln3QTYMqb6Fmr2w4BBYv/Ds7kYnBjWipn
Jh6Tp4OfXhHLwoLfP/Vagy4cl3xXwdLoDZqtZXMh1irMDhslegxHQClsuXnd
NxWDVo4J23MV4BKQFfVeLwdVniTj5sMoXDUQEWc2GYIp29jr2BlXmH5yHF93
/4wd1g7zzZRiHG4TXmgRIaDI63oFU1k4jr2wHRo36wCZkKiawxd9rA8uprML
dGOvc/fBmq/esH63l5ybsRsqrx64rlZFEkSYTM/03ugEZd3PKFF/bYKJ316G
UeUUJDe8e1Fo4os8J073IxmtmDj+Wrv0ay6+uVNa+l3uRW9zQHESbxzh7Q3q
X9bVLdDdaj0XQnAHr86q0Of4QuTZdL+d31sGrRNNi6+83cHCd0fDoFoPw69+
N8pUjmGjtXQptsqWYLz5ALGNFbjXfc1UXLIcSWxc2xYRPbDVi34qtO5FWHzw
PtOPhoi9rwzX3N/YgVEqbdnVl4iHfHW352gycdaAkn/YsQzr3xNanZ9YoYk8
XYSY1orvKy7+HK9y4WcdNa4s64NtjpiUn0WR0Lp1e5H8RzuKluMDLsp8gcnT
8N81K+ngCyH1cR94AYdogV/D+6oxTCW+cXsjGVUNge1/OvPArv2KV87FEuf3
NAe92BoA6zv9DbqGWIQKLn0TG4iFO7X6gyiLLBBuknvsv1KEkCKeK9qh4TiS
QB4/caMZE3v5r/eaWCGBI4D3558mUCsJE68WBYI4WRN/lq0PN6VPTjM5usDl
7g1cHWuFd4f79e9VXvBz833ifacdlnEfr1s/fwFyn8DpqxMVeEXvJ+9L74z1
2b7vlCr14DWVk3JriENXdtQgs3syVlrORhgtpqM3Q+635dFEdL1YvRIX5A56
6s/PTp1sQuL6c+6/dblwmLGnf/87EOmhnQUiJ1LhpsCn80GjDpN2hj2H9MKh
29CgItrYhrIk2f+EKgJh4H2mT6YiEe8OMae0JUThU6yKw/UDuegE1SLlxXSc
ceojmOwrg7dMwkvdrRRQGJT+rL0ejV8bAUo/1zJB88tOSlGhBIISKjcVJD3w
tLwnp1E4D1nbd34Mnm+D7R4e/WaebLjeS1ROcPAAMluIN3ayYOCc4j7W8Al+
Kkd15WVrQC1tsD9WPwK/ptkPBNwfA+/TNxrPt90Jd9+cot7fXgcZg80nm3VW
uDku8fqPUCTaPOVvP5b+iok9Ap99NUPheIdNNEI5CFyDx8i3jTKhcEnKs8o8
FGSk4j3xbR74rq++ke0cioWDx+lFmYvwt7qu7WOwCy59zfANybREP6kfEyeF
D5JlmY/x7M7r5toDsQKrYJDo5M99U2yA8Htn8Q7KV1BNV7Lych7Ahkq4x4H2
DALJ6wvnHKjyUeMXJ7+nKwMkb96SnJGtBJehnOTPkzGocTN/7O1ag3ZNbYtV
GW8o7Nx9KeZPwJCQ7MhkviO0fq12lvD34eEbEaWZU3643GjCEsZbjoNTf5sk
jybDZL5Xuv1VLUzbfj9MoYnCYiS/aTpnGRjYZW4eM/bFyrsD1lErQbiZ18zt
1RYDZZKLNRP9XeDkWLMOu5EA8e3oiSDNNsx+WC62CArDPc7HN5fGa9Dx+tGA
hGsyOo3bfXx3cyCcQ2zwmogdvPjMJBw88iH2O09c4mcl/nB5CQc1JGPwZEWB
noUtTIcbL+eWDiHLSdH4i3QU/jja97NQNSE/5/cFluME6FUruafTjOD5inGw
7JtLhOWthfMirycxKf3eXUQ+nJChWznCJpiBJA3paNdPyciod8xtvtSOFLq7
Am+dvHGj4dj9Do9UhJHvkRH8lAPBHV0qS+8yTOcM3OJqysHTi/coR+53IlFP
4Yr/SQ8o25zNJHcqhALb755Z1xQEa2s7FvR3I2/JS0o3xhNRH51//qobwsdY
Hr7aXAPCeVuW456OOVjqPHJRXTkDkyc4OSVvVoGUfSHVziQczHu0BcfedeKT
p4gxw8kPKIubnLKM6oD8pJku3fRnwo+ADzdZD01g7deJ9Oz0FMKPGI8rm0OV
OFxx9VH4eCKqZ5ndQunroOFic6dFwRqGR5J4hx/lI0DmlffGnXDsE4n/eJmt
GawdTxWe9ySAbstY91TCGMTHyc7uYSgiaOVdUrfwnYAF0/35RJssgqKT92E+
pnIkWgWvtJyphjbf0VaqsVAwVp9zC4r0h93rGGqt6gmw8FY+F13LJujZZKgJ
d4VAhO/0p/CZEHxr2V6KiysAf8kextSoKhwtSjp4oncUQ5ICJr6Ucbh+59Uv
G6Yu/DrEH2HCb4eR1jeihe8rsHO7dL9uuiU0NDgcdL+l47n8qQlLnTj0JARf
YrjWgKAr/i+EhmMhaZr7SpCsC9NbI15f9RPRnzvARCxvxw/WmwGVlK5oV2Og
mdnfhfmOsr74RwmQVqLK/XQkA8LsS0x1ml7IEGed9rzaCtU11X7JAh8I5Y5v
RannYJm6qP9rkRfe3OVpnpmswrvhUtdaPye0DJBzCIm1Yn5zbMzTPR4+WtdC
WMS7cFjw47CSuyLBRfZsGrUNEZsDGvt5gtLxoZ3ChU1+BIa+xptLsrGI7thL
4zzTgf1Hj3830fhKULX1WHlaX4bc1X0zZL+jsc109VfTfA5eJQSLnD4UDbrM
REVSrmycrrLvEJiLxdkTfJI9kQQokl94rGKTj+a3pI4vS7sw+KTdrOhmPDRP
rv9SudeNM8axXEoK3mi/1u2yMJiFgI6gXvWZBGDz0F0btVhkXvaMOmLriYhT
t/WHmHvxynFfOj+VH/ZmMddFTYxBv20r2Ky+iJDO/eQp15FSVHg/2red8g3x
ulUG5j/7UGHBf/6GEAFjt4yZ/Y37UfbB7O2eTSUQe68auM60Iq0zPTclNBQ3
Sg5gz+F+9MX+6pxfeUHw3gjpbzQqRre/bOTzoiK0FryfF0vvxFn5P9FkEU6w
bX5Z0DRXCdp9g1cNTGIwzva473JjC3pHL9LcS4mFmXedyHHNZBQcOXvxcVcV
jHiedYVwj2BM+UZUeogdblnLsjrt8oty5cHsEooohJUWjj6mbUctR1S236ds
FDWEspf9q8eSXoTcu58O+ERRlvBMgggBSccv67v9TNbZR3PvyhCMtoPKne47
IU9GwigwqBGqalciRmWDwaRcUl2mFY3xIJqqT/ftUHfmPeYDifDnepOaHhOD
A9nSjzbTy3Hq3CPJPdxesDxiccafpw3D183fiAT6gDxQc/YAc/NuHjYyjrV+
I1xaG5yjDEyEmuFwhWlnCu4HZtpO5HZAQWK5acDCAiJRo0IUTe1o/1zsc376
Gy70Do+KXMoArbaG/fjxYDzkNKTc+6AUg1GlIlbeAdA4/8Pf5nI1IqP/vfH2
fgtlcebroWId0BlvX2f+lIErTXfzeIdqwSegzpD18B1OX9iyCrBuxz7PLNp2
13isypw6dy6pGxZTKRvvjN4R3sp2hIhz9uC4WEuwy3IO9E/nNVQtlUMqeZZK
rNQTSWvWNYspkzgZFWhW7ZpPWMrdqqI90Alhzzb7cFE7gjdVpe+zQyNoOGjx
kZtaF7Gr2vNefF3QVNPNCSZ5C1+SskzPzXK8rLwxTseZi3ih3xJuN+NwU7Et
77BIHhZfK19XCm4C65qgtbx93i6/3ubi982Agl3OpwPjkQiP8n+mKtiBmrD7
HRxvfQmiW0HX9qq74ZRXHu1n3XBwXw8IZKWqRV5O2rboMQ14G8w+PuYwhPcV
XqaU04Ygm4y/OPi4En7jUwHMd0JwV7yAPFTSH9nLOZu5lrmITEm6rl9bhIJE
fXcO6zKIV25q8+W1o6uTOkX/mzP67vGkSF5vh81eCX7a6VQcFs8ar2aog6rX
I3RFZUKs7h/pM8EuhCWI8o+NBeNnqx3LJ6VW5LE+cP1dlwkyksVhmxN1SL1N
2UMjrk/Ya9Qry6pZjorYoiSSl1qglPsvtuKyLUhHvguqGYeiIdWoJ4isE5Vm
By53RKkR0t7139MizkL3S7DwZ686AhlxUSlUOwgJ14vwUToUrrOa4XNMBDz+
sn7rXWcmJkM3PtAJleEBw2xAQHopsv7Q2kXt7uGCKddtCdEqVDlkHVbWroef
5A/V8zbp+Hg3SPbHnlZoHvvEwKDohJ95pzJDFtqxJlou4uAaiGE3nqzvR1oQ
TmpbrqQUgUhWJu6dqE54vbidcZTZFy6RHaKTJCb4EDZlHdhYAEcX76vMBrt7
cmbSKIE6CBGjrsY1LgScTt4IiyrPxqQhsecJTwXCDQQO6J4uRs9MqWKW/Vew
zRSVevLVQT3/8nE9tkwYm8cXvKSxRli1/nm27TIEa+ZbSPZ6Yv0FS06nUTmu
7XbSi7m3AEXY6eL7dTCp5Tl93jccHYZ/OJ2H+5BBpJzim/XHnZHt5UGpCmRk
8lnLXA/H2cfR8c7uSYjOtmu5fisRPvQbrjJrzeBlPP6yqDwDktY/C3IZhzH2
X/mVwivfCAcTeuK+tbfh9amEbMokH/Q9vjbA3tmH5r+UHH5DIRg+xq7M+nwC
T/4dMIzNMCC4mKudUBkYgWL15IlB2nDCmc/3+8i0q3H34f0mnY+JmIXHkbY7
RIwJtGVckLDHuHByiOneLtwIPMDOwOiL5dzqU1LvuhGwlEOjsHuO1H6pH1v7
W8HspfB1xssSFkrWET9IM/BJopCEozoJWhxt20PJRHx4K1b//mIKssoG3Vwu
tO3m/uTqM894dO7ZueXo2w7bMJpqjbwjhA9HSPm0Y/rgWT/Fqjpvh9J1j0JV
5k5sDimPRTy1I5xOWEnrDx6HoLLJQzFja+i/9667WhIPy0DCxEqlJxz7HS7U
famFl520yWqYN56H5+Vu7+ZHyx++OwoC7jjPXaRxNm4Ac95B7/efSSe4XG/8
60XdiHrhnoESqwj0rhuuRNlNoUB9X25XSjZBX8ryzrBPFIgTQtcbb8ehvGeI
3HesD2fGX7I/L7AmPLf3Xoq+P4UK4qPHMaTFBAaqVv4Nm3GsW3rmF04Hg93Y
J1OzYARvY+YqGaZswSMde0cnOBh9426JfyIzMJopbBfK146Pv8Q1Zwcz8Gp6
Mn35wCzyuj4axP2pISg1iJCJ7q/FZUePcB8nS9RP9nVzt7YiUjvnUHMGG4HP
/52K7MMy8CXFXEhMLERKudaF+UPNoKEMISrTZWBrRrB5v24snOT/hZfVhSPJ
Mmp7x7MG3Z0M6dZjmgR5LYytlI6hQHJjLv+sLWY9PJKa1PoQLbKufjLDgRD7
8Gba9qNyvGUl7/2PowHlvG7TxHUiSi628vBZ88Pb7+g7Je5u6MWxcpDlRSNw
0F2AtbwW8UX0tt8eOKI+O+KoyGY1TLr99Q4eDcUVoUs1pZ4VqPKXpEsz+opv
P9iv29pVYdumvjglNhpCXkUPErqGIHHr5MLT+6WEaGniMCN5H1bd9s9ztIWB
JlH79+XaKtBcUQlruhiL+1PrJ8dF25Aj/eHiqG0iykkMmIL1epFak+kwPRwM
X2nHJ3RHW3GwlPGL1aYP3oWoez5P6EVxUPY/22Zd7MibXDBiyIdHdlPtn2PR
+BKx+dvxbTc2GR+Lyl7LxZEbad5EvkbsKEf+OXW8GkNNF155nm6G9p9z8Xky
ibg2WaIoyDAF1fmLS2Se9YTip1EnZ+pSYCykfkJPPAFfj0S2afyoxtvuB+Pu
Lc4QTOjgVCctw6Qfd+m3qy6IH9dTIr4fgrKvJut+x3QIBmh5S1ycgJrxpKb3
ZARkOWI2jWXLd3n+7IS+QwayOI66LL3pQvfqV+eSh9GQvXxpu12xBbr/HJaz
62yxpZ1vPxY+hSr7AQepfaUE03p8Pna6E2wRV/5pSdtDmOb0TbnQCQxUcGV0
cmURBJx9GDU6+qD63KtRNy2I0Bmbejrdqg9qojc9FOiCkdHlyFFzoBn0FfFE
G29XPPfsJVBohmDqYOhG261QRNUdtFw5UI4sIYE6it+mkCo8dmZOLBXOL+c1
lfZkw7E240TFYA94vpiIkWXEIKxqwlu3pQG6JALa3sG7Hmvm++IsWRniqYVt
m3wqEXnCRzEo0hXqN/qkg1/loYHXsDRCqx3brc9bCD0eeDPb2yi/UQyT137L
r+GOo0+a/vvwMBZG3WKWv4i5OGSVft5utRhC64q3B4NyUIK+WUvKNkwlHLcW
mIhC4UNJJtWQbsTTejMNiQZhZl4m5VNvB3reH/6zbyQWCo+/pP3kTIRTPmUS
o64daLFq+fppKRrG2qjdzrpjlTLv5x1ZIr4SPnsudjrDIJHgY7LciJoxVtb3
BRmYc6eguctUAT4J8yXP1Qh88iu516I1sMvjKwfT+yMIi3OLcbg1CP1YG+aD
FZ7YY6fta5+Yifbk6wPMHlY4dPbUIotENlgY0tzzhrJBm5Pd8D27HzQ1r0cp
uLwxWj26Tym3DeqqNC6MrGFwaWFZjowkQm5MOTKJLgYuxZ8y8+YqoMs4M8A6
F4xUa7VKvq8ZWOXcvFJknY03otf0Ooqy8HVG8jv/83zkSP34yGpYhEDOS1Q3
7oRijHpF5R9pLarPzmZWFO72TVavhND7DnyJNmQiGmuiw+joE+tzVti/qLI0
lRoOVu+ZHIoDQVDW63pKVK3AbblD2mEjjoiyyDJscClAwHaElyPnJGIeHfO0
58khGAX+12Et0IyON48CeXd79lycVe+qTg8+O+aNvZX5isnLYUFnRWNxkodB
z0/XEmZuG2Ao6cTSPx9LkifPCRoy1AGMMo04RCpuNDJQBalHzcpPXyeixP+Z
0Z0L+RjzNf82OtqG5zwvV/QdEyAx/s+jrWMC6s5pTREGEQQGjhgqPvVmvC7+
y5LBZ0rgcCJ+ivEag7Pd278KqXGE+Zz5LlKGVCg5u3x0UIzFYSr7kmn2PlQX
n3wqku6P/ZzuSY+6OtD7nf7vvQB/3GX775z07TJoTQZ5+/gWISXSZ0/QnXaQ
Kw4FmeQG7vb8vxGB5lZwO1gbb6+mQ6ImJ6zOKg7kmDEZ98lAu8N3UUaPQfjo
bEyIx78hvHz6blXqUwUMkxyv5bM6gJx/SvBRQRk696nFm4e+xgKNwIUjr+PQ
wn/VIKKrDJqdN/+t7Z6fvI5nbANPBGFVw5rWTbQHVVvPhzTm0kGnovOnSawf
MSqNVg72xWimXz7obNSDvNsGuXP/RUF4TlctcMQeDwxmfyuYJcIyuvMyLV0D
wnj3EKbv+uKXgdJ/Je5V8Cz68e8OfRSyslquMVJ0gNbXNsa2PA7eBUNsXQ0R
GPQ6lqR9Mgdecn1SOiVJ8Kebtw6KKsdHshYSPvEmPMwVdzhqUwKyqT3urOKl
6Fu0mxD4FAnvjRIOl6QSRBnO1f0eysH65IF9Q2RF+GZ26plquz0eG1+ysqat
heLsX9pf1WEQ5JXbCppuQRd3kOIb8lcEwfU9+6h669EXYcA6GJeE7cUDq/Pn
UiH++Lh9v38C3BMXmCfO18CLt+b+yHQ2Ln5Vny+OL4b9/B6GYzFOOBzNFhfY
n4HnLi8/a23Fgt9+o5HQ9B0ZugzcP2lyCXEZbo0RDARcn/TYPEH0g1nYb1W5
yyU4MXql8eaeQlBcYDxGstWCjZ/1MYPB4ZA6IWC1sdYKrjf8+ZaqgfCuDSDP
u1CLXod2L7IHqTiRJnmO26UcvFdraQ+YlmJh70GW3sJmkBF/Hdrs9AWNHbUx
l2UdYpaHZ43Y83Am3uQk+bY3uL5n0MRd9IJSRZi1mnIWFoU+yEg36aHmH+ep
ogv94Nn37JrHfAbEiWfZo2vace/zMm+wmCXe8Hsx80pN4f6DeoG/9TUEWREn
o9HiXZ5eoXyq1+KK5oiopjyHbkiyXTkzYh2HWiej86/IWvBykwrRD3Vg/3zH
tU61EtJU+61M2eNQl9X+zrIzF3L3z5iZk3lha2eN+ZlGJa6FinG9DsjBDbVb
Xgah7RD5U5XL8s0TGrOmDYzR3bi33/58x5U3hMJJyfETPRk4XM1w9fq/ItB/
FVl/G+oPBjnl7T/UcRBlK/zb/bkaO+YV8TtDYcj5eMLN5GMXChrnrubcssAo
H30LNUk/TtVdGsjSc0SoicLL0qB4fL3FrufrlYHuMgNt5tRkCNPf+EG367WW
3ul7bb4lgLxx89MwfS5k5TlYBAay4GGux2rY3gjT/XRhS6WROB0+czzFLAZ3
bv8oI3s6glOdXmvnDgYhyn96H9Vunm83fJo8L1QFb7KGj4W7eSgal/rK4YM7
uL5JH6cWGAV5gtgTulRjFG5fFBcPJ+DFVmiVtkgHqsXJmKh4akGfV3mN9WoE
orkDiEErjVAhUckSG3+JO4pjgzqdrWAk/+Xe8zgaV59euHSrJAcf7s6t8i2/
g0xh14skqWHUX6L9rr2lSNAsP0w/mDkIgzt/cuv6ZQiyF2/xLXGPwjiY4awe
zyfCtRdOw9NTpfj5be2s5bVK3EZ2n+lCMbzih6wtwqLBdOnLA6XOXty1J5Xr
uxeMQ6dWfMOS8kDBX1bA99IL77pyr+wtqEH1Xmp5Jv1UrG6YyPiR1cDx6ht6
zeZcnJWzNz4j1ww29yfvPheVQfaW7VDm7v6IUw72XeUqAsN1OapTo1M4ERjm
MX0qnWAg33Vy4EABctvOEOjCUxDVG6RV0pyHc//4WJW7Q5DHhffai3lQiOge
e1KfigKlUw4/Nmvw6ayuzLxOHOLdmffgQSPmbp9N9tJ1AK+m4frwqyLc6v9K
fEtMw1MapzB1nmE0ddjpkj/1gMWdc98WZQoRN/WtitBUjdPB1vetq2NBYCnI
umOUBXVFxscEzkCs5KWENdCF418gb7SAWD66uEJWLud74ZdWtJnqvw40nrFi
Ufa6h5UBj30z9OE4Jb54Lk8sARQ40LAq4oUOt5fxXxwToe8q8ohzLRDGKm9L
m7qzkLh9g8+johz/vI83fu2zRe2bNl1NKR8E11fIyXJFY4n1ys7da0TkmIby
Pur1x1G/Zj8K9mbsOaPn2Uf0RXr9X71Llh24QX9k+OttH4TdPcU5618LT5ni
zOTCaCTFNOvF7fcCTVXp3T6NLEgX8G0Y7c5xlqnB/YsGRei/embgU3I5RE23
Z1uyoiHoTVB5xrg7vwY2DIXJAaBis2G+wTmKw7FlgdQM8QTzS+Rs5fKtkMq1
5lX86A+Cpmr4a/kGpBxvD2fcDsNZwX9y/56W4x6H7ABZRDKeDAtdJG1tQ2nn
GcdbH23AwD2vM1NTju9jKZ2LAZ/x4AOf8If0XHDVUeZpMrmjbc1aqUazD5eC
hXUFrT3xsbyapVp+BKULP44u/f6GiAMH/nT4NsNM/hbtem881H9EM6oID4Oa
Sru2/ZE6IXTQ/N9kVRT0ZB9b6JanYath+LmP3BSiTA8+omErI9TdeCCqqj8A
8xP/tv/bHwgda+4J9dFY7NV+Ehb62hOv/uq4GIR2IGlD7BLpTgxuWyp8s9VM
w0UrM7FL/xXD39PtLVPGMI7SPxvo9M7FowcnDiuqtWHrwLOqFwvJSN1USk6I
jMFBXhmPMNd0WOxrUVx+EoEj0dZVb4zLQalpWLS/MBYqtnFvqvYm4rHQVtri
eCdOfs0rm/sUAuOeyCPsqbmYqYwJnCOzwWkQPmScyMbqyvzJt3VpcDKNljrd
XIbquQWyuNpQFHVp3d/ir4er8OHBDjYPpP/pF2lf6Ebr0kjRM+Ms2HX26mTQ
N2Orq6glXT4Bq0q/RCicK3FRtnfz//u6OT4uMPKlAnenbhfcTT6CFG+1gwVN
RJh3ZpO4cvuAqzzxhopxJQzfHfpFb1CK4YJRyp/WPTDgPudzwsyIcPm4SoLG
o17o85i+vHLbD09+T54k6tfg7pyuo+4LL3ydK38t1BuNDZJ0S93UGrRP72zm
KpXDUt+KZpUzAC9ZAr6khafDeajBVFpil1OuikbR9oXANu530PYup1P/7DB6
apaPmu++fCH6u3y532uQxLgAFOGvHQUiEvDuGbfDf7u8V01NajD20Z5Qak0r
Q33YHc8iBhx6KAOQEWJi+DJlAp73nIaDiJ6Y0eQI+kTbg4aWUCmlqijCsevp
l7I36/F7mtZh9GEaQq6mOh+4l4nhL4eqOKwr4XSVbkL0SjZsW3x132oR8K9N
J59DOxHpN1j2axQ6Y2Ns2fziLm8dll8fbzmSgvy4mlXl+hg8MdR1qFTc9eZp
p2CiZjOEokdYef/qQIeBIiSqJBe5tz6+lVP0xRWOLYXMe2WIWig+tXagAg0d
q6Ttu/1r/XOev6Y1l7DPgSvNzbMTgg8vb5/dcUfhnRoeTsoivBCMZ3ERCYXU
Sdmc5fQWfFzLOZhR/Bmji0QeMsUOZL016jR7mYITRPuT+p5l6Oe75H3pHwHV
XVYfvCUroFebUO/EFoAAjjdj+i29CBXfm9Rb+w3RczGaEW8GQUJhT7iaEY7T
t6fFtC474vrtxaKwcQessrctxSrW4uLTtb1C4aZ4tE+rsvFLIeaM+//TEMnB
+bEvHeE07ShVJ1OtVE7EN5bzORf3VEFjq83TaiAa8+z8GrQmjVCwCMk4tRSI
JrFnz5V/fseB4pyeevtogvl9GydylmLsjBUplulpoVo7NpZ+uQrPSXxd3/wO
ReTBf2ReKy2oPeeeHRRujDa9BRMvmzZIDTvov4yLx5+TV//K9hFQ8aE+UUwz
EsH5NbXHWgmwrr261XghE9GzhWcHIrMR91CsNozojyphl1NUelVgEL19pkes
BL3O0kYeP8px3JA8+vuNCHD/lQ8ipvfB9PzZGwKXAtFFYTFNaVwKOn0l48PG
6SBymD35U0KEQ5p51cvfGfglEVq6vqcd5nx7NjjbytAcBubYmixMjpuYWean
QKuSb8Jolztv2PB52WjHQr9gpnhxqxaJSRrlJ/m9MSTGfm9vdCmczt13f1gS
ifxlg0UPqVEo5Hh4BnI9RujeFdt9WkUYGabZ/1k0EYdEX0t67fiCXvCKrUJU
EMYOCinHWvZA+8ex9QjGcOg4jhOTdXf7UcKq9mC6Fxy0KLnzvoyBTr7q9zmr
bIKkhEcGMb0Vafo3uxy2U9E3VLLqb9iEOz6UA566lfhpQT/pVuaBNfGI6mNF
2WginQ7OjW0FdVedA/sjT7B7rD3rNPUH/W8K6Y21DEx1jVTkX2rB5pfLzHVt
foRQopBGYlA1pDmpzPUuxmOGItd89XoJDpswfzN7Jk+wsS3aKusdR+xrY2mq
sVSC6lVzBt5dH9mbquTMQ2oDsg+jnev7m9Agb5vrs5SIpPYOL7mIMci9OJRV
LmyIqCRqJvnP/Sh+Vji/NywIn7cFu0d8OkC3JDv4h9cXuYOK7X2fAqDFUrNl
7F+Oy3pKZovqfeh8X3D8fLct4T/9ZrLzbGPQEZNKU3eII3SQtc2quUdg3zG6
d7eybCAbkkWX2dUJGl564dKdUNi6Ssy1LhbCPkk6c0jAe3fuuFm/mybhziOV
XEqFRKhGBOW8O92BCra9tqD1IBA4BdSI91wQRzo0F7yhiTM8QfG2MiXgXOyi
/KuVhNmYQdXZ7+WYfscv+dwnBl9e/0kg5++CmM95i49kkTg1rjlXntSGH6On
9PKvWxBeCBoSK0mjYSRnz75QVokPrF8j/L0yca1NgkI6qhBjS8Nz6xt5mDmd
X7GPygv58+3iL+nz4bzB8fS7UBH4DOszvL2mcJfS7Pqp0QzCJA3VfTW2dtzP
Y206cloP9z4skUWM9oDx/HfLpaHbhGA1v6ykvhb8+fqoelncAwGR4uuUpwIw
7qAdvXdfEZbli7Pjd/2AoDmo/PRjHIbNSE6773p91r4hg+CjUaiqLJOzmCpD
xMosKUVkPu75cPqztRWi+j1fLb+WFezYKo4xpXRAJopEyIoYjTOLKU94rFIx
+HBWjulpFsSIg4Q8NW/8nHSXYds9X0Mf+tOtC9Uo6QolvxObDKV7b0waPItR
dEiczyV5d/6eaRXe4h1Fy1GG62p20QSF6HIF+12uJrloR7P1Txtjoittn9uK
wenIH6ho74PIMkY/tep6ZK2ap+TIxaDv59ol+UsDcPJMN53WsMXeMfpeq10O
1Lx/LrWJwQwvH/15xOdRj9qdF9TU19MhMv3flsxkHpbztUoSRAIxUVZ/dHWx
AqpbPht/ggIREbxvblmoC09PvCMaziUg6Ydlfb5tLhim+y8HnAlC4s4JFog3
wLuN/f3LpRQc3pdbXZ4fsctnPIN7QnbfX4tRffkiDIFKzwtUfhHxRLwx4vTZ
SLxwkOI2e1kE6UUBXi+z3X29V3AlMMoKZ4fbTisUjOG9+z+yeZJ74J56RX96
ow65s+RDvlfc4XPyilXVjzLIsDx9LmVqD+OscLq2xWB4vRNLnqROxLm5YzO0
f+ohl+8cfpkqFiLbG7m6v7vQ1b/IfPy9J6Inqr/XN0Ui435k8GCNKXSrrYW0
PH0RndNy8kB+Etr+Hq38+TACtXeM5WquhMP9GomajGcjaGVvneGuy8SNhpOj
07faodi872N8xkuc3Z5cMPYaBMNeve3X2l7oN78YWajSidDcpt6oOSOs8x74
xn7CbdfPpfiOCqYhib2J/7t4G1TU+U2MxhMIh3nGznwjH0PiiGfe875EQlQ6
zRnhh9Goa/jomcuYgQ2urBoKnXy8O1g9EW0Sjk3jGFPaS1G4tvNl8Kh8LVQI
9+zfhOTi73mZJ7EapfCF67Xo5Gxwhyw82alJBI/4FTzOz8TUnc8prKVJKFyU
em9rUIyJ066ETY442O1dzKXe7oGacOKFMP08aLMkO9l194B5I2doYd6KMOn2
4Lf/7UbsoQw5EuKUgN7/9nPrRJThVTBHir932q4HNXe+aS5EUKePdYF8Fvqn
2NtX89sQ4VaY/Ctvl4uKVqcYNHqxxFCT5PXHHo84ez7ML1Uh6duOTpOXPzZi
3tGY/6hAcWTqgwNmsbgtZ0X7YbUKr64uu++wSENNK1hheaQRRVy/p6P/BsFR
+eSaoHk9IricME8dgutlEv1HzYjYz1RUm5gThRHVnI8/d/nhrzCfmH9qOPiX
0kUEyutwhTbz/ZUdPyT9ksx2GIpF98Rao8lBR7Bybzet7smGVqmjtoV6OU6m
vd/TdKcUpMQgEiODQnRH+4Y5tKQjmk9yKOC/ZPz78KXuhzoR0mtmcSm97gi7
Mt7hcrcdOodEU55OaBJ0fUTUXZn8sLMSYtYj4gGhz87hafZlyDMxa5sPDEXZ
iVm76eh2HNJiui27Vob3ap8X7c+nY4fnSOu55ggkOFNKSiZ3oMf/3/MpFjmU
iDHfD78dBIsZ0vJmykT48B/zqVRPhLG1Ff1r8WgMXo2/1ubXAl3JhfDGV/5o
WxV3+GnXhf5WntkFlhwcvS130sOqHekKJnYHW28SykcyRup2siDwq5sqgDQO
fE2O4fnDXjAr5bulUZ+EfOFzVeRWIxB7vHXAxi+cIGl+IoK6tRa//Q2K9cvD
cJe295ylhDOGevZK8gyFQo+5OKymshUKz4dCExL9oHeYQuHvud18iR2aGx4L
wCsbqyFjowqID9j6bRXEofiJlNsTkQT4ZL7ykuFsAqum8p1C5jI8EV62YZPy
BokN51bAl36wL92v5CXNBEfnO5/jd6vxVlLitXBXD56Ctnv/zzZIfPlJsSCa
jvdVMhqkBZkgZu4ZtFv0QnGfmZT5bv8mUOTHmZ3xh9yc9dLOehfsuYLr3Kuu
Eo4nSE5mPK9BCxPVunJaNETJb44wPyiA0EISc0pDOtzXW8zvzHWD9t0/F+Fb
2dARzrruSNYHPc5ypUoKN3iUqW1Kv/dHd5JBlHdJCNj693Y2qtdANyeXjfgt
FdmiPx3MDepxqraCdJgkFsy8OhTEa90g1T9xe5vjLV5+ebayoFwGnr/7j7hV
OOGRy3hrhVg7rF8l2C6c9UEsRQ2f1qFeiL7itPH7lASDFTMWI51wvBKmEzvv
FoLUr8Shg3I5aDxwToFXywUhTstqv77Wg1ChdCmAoRB6BkK3ZNt68B8Ej050
BhGYuiXSBGMnsTxGRrX5JIfgGVqwI/k8G7R5kg4nRkJwdcokxJuvDB4raitM
JLlIE9XyDd6sQci9uTt/bnuCU2HfvZtvGmHG91ZK8G0uKppIFeneFiG3JS7s
0lY5WoJEVFTVujDwy6A+85o5XG/prJC/ioTAV/VD5t+scLltg1mGGIVc89b6
9NNOaG8IOmBp2w2qu85Lj9M9INyyY2rvHIFIWRN2keEsbLR9ivv7tRuB//Wa
nIt0hKLfxpTP0RqkjhWxcxgHgmj99l3552p4sX9+dYBFDwU82x4HbxBxynDN
oarIF3xUasNBTfV4KzK8cZshG+EuR23E4osQXN0hFkhdCSH5oKW71tl4obF4
XW8tBhd+GxEbr5WhWO/stPTrQDgyvjiYZDAGgdmvqyJzeQS9qMj5tpFa0D6X
/nC3KxFCrEVzEefG0W6blvOsuoLwXpm++PNrbyQTHNh9xCyRqHfEMDFqlyuU
VJZjP2UjL6vhnnlNJR4W9K6w/fVDNdXA90uLCdg8euTnk58VuOj3omPWsw5G
/NLaEufSsX13K+u9RRP+Cum8nLkdDuFtQW2Zo37ImHlcbuGXiPebmTOP2nuh
Z6L+/PJcKPRfj4ZkPm+HRiRt1pFKHxSRLznKsFcjgb9CaEc5CO0Xpd9wqRDx
5oXq+bsOHvAyvZF2TTIRK7/m3UOOFoDKu5btr3MmlNjyVlI/R+BfOavv0YQu
nMgsSnpnZk9oVY4xrhXOwMtZquZ823w4XM/uirAJR6pa75XGwhr4/CfyZaAk
H5PJTdEKA1mo/vojaVRvCHpyEqdsbC8jviG835k4jKjg7xskZg/QeJMpYCau
ASoO+024ZD0JtZzXxb/u5qfgacbP9/ii4EB3pop6qQFPA6q8qPaHouDscnmS
OQH7FTfYBPXS8YmorjM9HQ23G5etx/5G4ne0Y1Gg+yAsImUp5lbd0DQ8cGht
rQQ3d17ScB+qQMxvKd3y9gac4riXeJe+CkN/9Yn/2fbgNM+KhFXsUyiOZl6j
bcnB2o3DEZw9u7lYZ0/c0CjG2Rdydm5WIRg69qnlgVs//jyycQ1LcyRcdFjL
likcg/zsbxoyamNCvxCPeR9nLQ5arMta7/JfLem3zgccFVB7aMdYu5eItiOB
575Td2LBUODuaM57XGgQnFfbvX/F+12HDumlwpAzpiPwYTvUGyndzNXtYV5+
+S7XfCN4z9z+t+aVgwRuBfmt3Hakmk/O0rvkoN9JbkclgwCLwNW3Lo+jEZTH
IdN5qAaFPEEXt212+THX+XTR+U7YHz7114s8kqDNVb8yxWSLyRitljVuFyz8
u6fTIeGLfWKrK2HkzdjQ0Hwt/asLcfdeDjK2x8MqsE0ylsITKi+yA9WlMsDL
/3yetmiXnySdfq94RYKWsnJb/1YpvA691PfrtEdyOLX+baEypLf//Ft+rRTn
iEyfHfsr4UMxZv6COQBS+5+dezs2BFpVT+eYDi8C3/r8k96UKlQEhSsPWqdD
OsmeIH8sBpn6k9dqM13x9uZCSVJPAnDy89k5uyocWxZYaVol4uLJBi/3gDRs
eH97sv/HN/g0KAvprsdBZvlONVd5LCwP96kmiUfi6OoIo0l7AGI320ubUI3x
LMZKOqdqHL9dzclTFAX1Sm/1tfZoeL94LSax68/H9jAtsO39Dh4umyc+e1MI
/02RGGlTFsEvWGZK9LwPzuUd/H3qRh8E87IENOqzcaaLdL/NtyLUNyRsvI83
Q/HJgvwWyXLoGHYY/CbxwPeD/K26ZBlo/yEW4ni0AqIm93e6qSYg8Oi//ZfD
7QnBDVe/37lTjymLBO0YOT2Yfj7anxiWhe/bXdHsLd4ouGsbXiLVDsPTW9p0
C5GotnDai7EZED6HTvyLyyJMSWjb2f74jvhJVi5H5TAkhg9JHG+aQOT75+w0
qimE2Av3cxMnq3Fdnn2iuMEQbnU5F8bbiPgWo9f1JG6X70m+R0X/3v3egRUL
rUwXzH50Pr3V0Y2+BeXz1gfCwFgutqBrXYCS3uPdqRUhUJ6THjXMqoY4Ks+l
7XWEK4kVTZxFJeK8rv787heLtJ24VoXk2F3uCpDJZokD1aiJpE7vAA7GWZtS
HA8DZf9hW4HTdVA9kqz6lC4Jj7p+3VLo+I5oO5bp6qhcwiHVBYXi/iTc43eR
od/1jrj/zm9pUrUi4B5v4fiPYBwWkpIRfDWCkPOUf+8efwM3kQERomQHhN6w
PDGS8sSMWvaekOx6LBkcZM8rzwZLYbZ5rm4MzlDQdU54xmJQ+kKi/HIVCuaj
7l9Mi4Ua818hF5VU8NGPtJtaGOOr/IfpGflBqJx9HF43Hk7ooOBhXrckwo37
9a2tygw4m30vFwgoRO2Jc+cnU2IhzBgl8za5D8/urxj307hCOtC1tEInA4r7
3snhUgoipg+nf/hpiRzV9bY7zdbYECe9cDCrBefvTPSXvIuC48aZh7/1+yH6
0J1ocMQPiRcofbJ2uaJZ7lmY0MVUZMm/6cg82YAHpBcjD7vRwk3tqlHprQpE
+myzKPu64xDlkZEljT7QkSxyxAaHQHHE8v4DpnYIv4gZOz4TBFYxgwPSdZHQ
mciaTZrIhT/DMYoX8W2ge/HCn8Diike1m7JXV5ohcibUnzXBHSsqaWb/jeXg
MacM+T2HFCjxkfP4PmzFgr7c+olyV7A/Yl5vyB5AfvBqUKJ+DMZIfOUrbJJh
sL6Z5tudh8R9riQaZv14PKMb51GeTmi8qdkZuOtnxqsrqppjaiA88Fy7Xvj/
/xnxKv6nw8Bj+ydEYLIQ9ZzJRhmIx8P8qPiFzTZMsTBlClOk4Xgg0YP78Cie
1XdXln20ImgLZ6ucF6zH1X/RHMRrTgRrfrGFgKVyjBv1Dpt4R6EriN3qF1UU
xvZ+VN4ejsJ7uocddTudeGyhZXbsRCRBNPfjOPiIoJs/eddCJAkJiywXmP6k
Y/npkwsqJZkIahl4FBxRB/PSEKmPcWmwMKQadOsrgFvMfKugRBmGrj2QXXOM
A49QmpCvYiLOvFkntZTqh0REmrOXazbhf7LxHDU=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 0.8367215615756346}, {-0.09922242497073958, 
          0.17696362273988409`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"esm\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against esm\"", TraditionalForm],
  PlotRange->{{0, 0.8367215615756346}, {-0.09922242497073958, 
    0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
zi5U0dQG0gDG8JrL
  "],
 CellLabel->
  "Out[221]=",ExpressionUUID->"583f29f9-c6e3-46c8-bf74-ad26016ce16f"],

Cell[BoxData[
 RowBox[{"-", "0.5555598812001343`"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
1lmorqkNpAHGWpq/
  "],
 CellLabel->
  "Out[225]=",ExpressionUUID->"5958f466-f242-4e67-aa95-fdce421bfefe"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
sUyxz8opSHMedPGt68a16EwPP888wv8A9RhiaA==
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
sUyxz8opSHMedPGt68a16EwPP888wv8A9RhiaA==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 0.9596550969505153}, {-0.09922242497073958, 
             0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 0.9596550969505153}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1: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
sUyxz8opSHMedPGt68a16EwPP888wv8A9RhiaA==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 0.9596550969505153}, {-0.09922242497073958, 
          0.17696362273988409`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"esf\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against esf\"", TraditionalForm],
  PlotRange->{{0, 0.9596550969505153}, {-0.09922242497073958, 
    0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
3lHhpakNpAHKbZtF
  "],
 CellLabel->
  "Out[228]=",ExpressionUUID->"388ebaa2-aff9-42bc-957d-a5ca4d40bd16"],

Cell[BoxData["0.1554033200158619`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
3n/UR1MbSAMAzMybmw==
  "],
 CellLabel->
  "Out[232]=",ExpressionUUID->"3da2fb57-f2be-4f30-888b-f36e4f17e953"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
4v8AFBpisA==
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{
          Annotation[{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]], 
            Point[CompressedData["
1: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
4v8AFBpisA==
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 203.0925103187796}, {-0.09922242497073958, 
             0.17696362273988409`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              PointSize[Small]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 203.0925103187796}, {-0.09922242497073958, 
            0.17696362273988409`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             PointSize[Small]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{
       Annotation[{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          PointSize[Small]], 
         Point[CompressedData["
1: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
4v8AFBpisA==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 203.0925103187796}, {-0.09922242497073958, 
          0.17696362273988409`}}, "Frame" -> {{False, False}, {False, False}},
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           PointSize[Small]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"AR\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness (\[Lambda]) against AR\"", TraditionalForm],
  PlotRange->{{0, 203.0925103187796}, {-0.09922242497073958, 
    0.17696362273988409`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
VinO0dQG0gDGdprO
  "],
 CellLabel->
  "Out[235]=",ExpressionUUID->"80cea9e9-6186-4f0d-862c-b3fb33b10646"],

Cell[BoxData[
 RowBox[{"-", "0.11027360806421932`"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
jtmYp6kNpAHJ9JtG
  "],
 CellLabel->
  "Out[239]=",ExpressionUUID->"42a1b8a7-da71-4f87-b143-a2e56b0add67"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"0.6`\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"4\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 240, 1, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.9138983154980183`*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"c2cfff69-ad8d-46cf-8975-3f429e6bb8cf"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"0.6`\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"15\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 240, 2, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.913898315514866*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"c7a4922d-2673-47c8-8e27-2bf5e4cb50c4"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"0.6`\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"16\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 240, 3, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.913898315522682*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"fca614c4-8df6-4e0d-b2f5-e6b12a36ed47"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 240, 4, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.9138983155313387`*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"80f7cbe0-bddc-46c8-a0af-066604ec5e0f"],

Cell[BoxData[
 GraphicsBox[{{}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"cm\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Graph of fitness (\[Lambda]) against cm\"", TraditionalForm],
  PlotRange->{{-1, 1}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
/mI2U1MbSAMAzFmbjg==
  "],
 CellLabel->
  "Out[242]=",ExpressionUUID->"3a5c2362-e4a6-44fc-b842-19ad7c95e86f"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     FractionBox[
      RowBox[{"0.02198048420831479`", " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{
              RowBox[{"-", "0.007068753591314844`"}], " ", 
              RowBox[{"(", 
                TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], "+", 
            RowBox[{"0.12436445498817042`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", 
                    
                    RowBox[{
                    "0.6`", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "+", 
                  TemplateBox[{"1673"}, "OutputSizeLimit`Skeleton"]}], 
                ")"}]}], "+", 
            RowBox[{"0.08949346502716508`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", 
                    
                    RowBox[{
                    "0.6`", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "-", 
                  
                  RowBox[{
                   "0.6`", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}], "+", 
                  TemplateBox[{"1671"}, "OutputSizeLimit`Skeleton"]}], 
                ")"}]}], "+", 
            TemplateBox[{"939"}, "OutputSizeLimit`Skeleton"], "+", 
            RowBox[{"0.1270816106964898`", " ", 
              RowBox[{"(", 
                TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], "+", 
            RowBox[{"0.05144185464415006`", " ", 
              RowBox[{"(", 
                RowBox[{
                  TemplateBox[{"1671"}, "OutputSizeLimit`Skeleton"], "+", 
                  RowBox[{"837", " ", 
                    
                    RowBox[{
                    "0.6`", "\[LeftDoubleBracket]", "3995", 
                    "\[RightDoubleBracket]"}]}], "-", 
                  
                  RowBox[{
                   "0.6`", "\[LeftDoubleBracket]", "3997", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], "-", 
            RowBox[{"0.0803005426856816`", " ", 
              RowBox[{"(", 
                RowBox[{
                  TemplateBox[{"1673"}, "OutputSizeLimit`Skeleton"], "+", 
                  RowBox[{"837", " ", 
                    
                    RowBox[{
                    "0.6`", "\[LeftDoubleBracket]", "3997", 
                    "\[RightDoubleBracket]"}]}]}], ")"}]}]}], ")"}]}], 
      SqrtBox[
       RowBox[{
         RowBox[{
           RowBox[{"Conjugate", "[", 
             
             RowBox[{"0.6`", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}], "]"}], " ", 
           RowBox[{"(", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], "+", 
         RowBox[{
           RowBox[{"Conjugate", "[", 
             
             RowBox[{"0.6`", "\[LeftDoubleBracket]", "15", 
               "\[RightDoubleBracket]"}], "]"}], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"-", 
                 
                 RowBox[{
                  "0.6`", "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}]}], "+", 
               TemplateBox[{"1673"}, "OutputSizeLimit`Skeleton"]}], ")"}]}], 
         "+", 
         RowBox[{
           RowBox[{"Conjugate", "[", 
             
             RowBox[{"0.6`", "\[LeftDoubleBracket]", "16", 
               "\[RightDoubleBracket]"}], "]"}], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"-", 
                 
                 RowBox[{
                  "0.6`", "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}]}], "-", 
               
               RowBox[{
                "0.6`", "\[LeftDoubleBracket]", "15", 
                 "\[RightDoubleBracket]"}], "+", 
               TemplateBox[{"1671"}, "OutputSizeLimit`Skeleton"]}], ")"}]}], 
         "+", 
         TemplateBox[{"832"}, "OutputSizeLimit`Skeleton"], "+", 
         RowBox[{
           RowBox[{"Conjugate", "[", 
             
             RowBox[{"0.6`", "\[LeftDoubleBracket]", "3980", 
               "\[RightDoubleBracket]"}], "]"}], " ", 
           RowBox[{"(", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], "+", 
         RowBox[{
           RowBox[{"Conjugate", "[", 
             
             RowBox[{"0.6`", "\[LeftDoubleBracket]", "3995", 
               "\[RightDoubleBracket]"}], "]"}], " ", 
           RowBox[{"(", 
             RowBox[{
               TemplateBox[{"1671"}, "OutputSizeLimit`Skeleton"], "+", 
               RowBox[{"837", " ", 
                 
                 RowBox[{
                  "0.6`", "\[LeftDoubleBracket]", "3995", 
                   "\[RightDoubleBracket]"}]}], "-", 
               
               RowBox[{
                "0.6`", "\[LeftDoubleBracket]", "3997", 
                 "\[RightDoubleBracket]"}]}], ")"}]}], "+", 
         RowBox[{
           RowBox[{"Conjugate", "[", 
             
             RowBox[{"0.6`", "\[LeftDoubleBracket]", "3997", 
               "\[RightDoubleBracket]"}], "]"}], " ", 
           RowBox[{"(", 
             RowBox[{
               TemplateBox[{"1673"}, "OutputSizeLimit`Skeleton"], "+", 
               RowBox[{"837", " ", 
                 
                 RowBox[{
                  "0.6`", "\[LeftDoubleBracket]", "3997", 
                   "\[RightDoubleBracket]"}]}]}], ")"}]}]}]]], Short[#, 8]& ],
    "line" -> 246, "sessionID" -> 32287345106460008461, "byteCount" -> 
   236537840, "size" -> 8, "stored" -> False, "expr" -> Missing["NotStored"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
vqPeqa0NpAHK2ptZ
  "],
 CellLabel->
  "Out[246]=",ExpressionUUID->"9914bb23-0a50-4c99-a0d2-470aa6ec22b5"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"1\\\", \\\"\[LeftDoubleBracket]\
\\\", \\\"4\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of \
object.\"", 2, 247, 5, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.913898332375394*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"c4fa40bb-f20d-45da-9528-5dd1303cdd7b"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"1\\\", \\\"\[LeftDoubleBracket]\
\\\", \\\"15\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of \
object.\"", 2, 247, 6, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.913898332383521*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"cdf0c9e6-5afd-4382-9ece-4651aa5310b7"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"1\\\", \\\"\[LeftDoubleBracket]\
\\\", \\\"16\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of \
object.\"", 2, 247, 7, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.91389833239312*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"0a297380-2d98-49a8-83cd-6745ba0d0a22"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 247, 8, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.913898332402067*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"53cdf556-e50b-4493-b636-b088263e7fd4"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"1.`16.\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"4\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 249, 9, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.9138983334651012`*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"1bc12185-ee7a-438e-8c2d-f4f88cb77f9b"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"1.`16.\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"15\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 249, 10, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.913898333475711*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"3c3553a5-98cb-48ba-8ed4-e390728d17be"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"1.`16.\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"16\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 249, 11, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.913898333488481*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"4e2588d7-2078-493b-a1d9-29c6cfd8f712"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 249, 12, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.9138983334972878`*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"a782d37c-d2ad-4c67-95b9-431348488433"],

Cell[BoxData[
 GraphicsBox[{{}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"z\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"\[Lambda]\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Graph of fitness (\[Lambda]) against z\"", TraditionalForm],
  PlotRange->{{-1, 1}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
NmHfpq0NpAHFyJq+
  "],
 CellLabel->
  "Out[249]=",ExpressionUUID->"f4e98dcb-8765-498e-bec9-69c78db35216"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"1.`\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"4\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 252, 13, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.913898334137199*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"dae0c649-dd76-4eea-8787-3c9f4268ca24"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"1.`\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"15\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 252, 14, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.913898334359067*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"9e7ccee8-79c0-42bb-9d73-6f7a70953c43"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"1.`\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"16\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 252, 15, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.9138983345804977`*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"2340c5b3-b2b7-4592-9c10-a3d74feca2c4"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 252, 16, 32287345106460008461, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913888284313135*^9, 3.9138883767207127`*^9, 
  3.913891233386545*^9, 3.9138958764365873`*^9, 3.91389626379067*^9, 
  3.913896941304871*^9, 3.913898334804612*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"90ed65ea-6519-4714-a017-317d4b78993f"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     FractionBox[
      RowBox[{"0.02198048420831479`", " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{
              RowBox[{"-", "0.007068753591314844`"}], " ", 
              RowBox[{"(", 
                TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], "+", 
            RowBox[{"0.12436445498817042`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", 
                    
                    RowBox[{
                    "1", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "+", 
                  TemplateBox[{"1673"}, "OutputSizeLimit`Skeleton"]}], 
                ")"}]}], "+", 
            RowBox[{"0.08949346502716508`", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", 
                    
                    RowBox[{
                    "1", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "-", 
                  
                  RowBox[{
                   "1", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}], "+", 
                  TemplateBox[{"1671"}, "OutputSizeLimit`Skeleton"]}], 
                ")"}]}], "+", 
            TemplateBox[{"939"}, "OutputSizeLimit`Skeleton"], "+", 
            RowBox[{"0.1270816106964898`", " ", 
              RowBox[{"(", 
                TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], "+", 
            RowBox[{"0.05144185464415006`", " ", 
              RowBox[{"(", 
                RowBox[{
                  TemplateBox[{"1671"}, "OutputSizeLimit`Skeleton"], "+", 
                  RowBox[{"837", " ", 
                    
                    RowBox[{
                    "1", "\[LeftDoubleBracket]", "3995", 
                    "\[RightDoubleBracket]"}]}], "-", 
                  
                  RowBox[{
                   "1", "\[LeftDoubleBracket]", "3997", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], "-", 
            RowBox[{"0.0803005426856816`", " ", 
              RowBox[{"(", 
                RowBox[{
                  TemplateBox[{"1673"}, "OutputSizeLimit`Skeleton"], "+", 
                  RowBox[{"837", " ", 
                    
                    RowBox[{
                    "1", "\[LeftDoubleBracket]", "3997", 
                    "\[RightDoubleBracket]"}]}]}], ")"}]}]}], ")"}]}], 
      SqrtBox[
       RowBox[{
         RowBox[{
           RowBox[{"Conjugate", "[", 
             
             RowBox[{"1", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}], "]"}], " ", 
           RowBox[{"(", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], "+", 
         RowBox[{
           RowBox[{"Conjugate", "[", 
             
             RowBox[{"1", "\[LeftDoubleBracket]", "15", 
               "\[RightDoubleBracket]"}], "]"}], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"-", 
                 
                 RowBox[{
                  "1", "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}]}], "+", 
               TemplateBox[{"1673"}, "OutputSizeLimit`Skeleton"]}], ")"}]}], 
         "+", 
         RowBox[{
           RowBox[{"Conjugate", "[", 
             
             RowBox[{"1", "\[LeftDoubleBracket]", "16", 
               "\[RightDoubleBracket]"}], "]"}], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"-", 
                 
                 RowBox[{
                  "1", "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}]}], "-", 
               
               RowBox[{
                "1", "\[LeftDoubleBracket]", "15", "\[RightDoubleBracket]"}], 
               "+", 
               TemplateBox[{"1671"}, "OutputSizeLimit`Skeleton"]}], ")"}]}], 
         "+", 
         RowBox[{
           RowBox[{"Conjugate", "[", 
             
             RowBox[{"1", "\[LeftDoubleBracket]", "18", 
               "\[RightDoubleBracket]"}], "]"}], " ", 
           RowBox[{"(", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], "+", 
         TemplateBox[{"830"}, "OutputSizeLimit`Skeleton"], "+", 
         RowBox[{
           TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], " ", 
           TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], "+", 
         RowBox[{
           RowBox[{"Conjugate", "[", 
             
             RowBox[{"1", "\[LeftDoubleBracket]", "3980", 
               "\[RightDoubleBracket]"}], "]"}], " ", 
           RowBox[{"(", 
             RowBox[{
               TemplateBox[{"1669"}, "OutputSizeLimit`Skeleton"], "+", 
               RowBox[{"837", " ", 
                 
                 RowBox[{
                  "1", "\[LeftDoubleBracket]", "3980", 
                   "\[RightDoubleBracket]"}]}], "-", 
               
               RowBox[{
                "1", "\[LeftDoubleBracket]", "3995", 
                 "\[RightDoubleBracket]"}], "-", 
               
               RowBox[{
                "1", "\[LeftDoubleBracket]", "3997", 
                 "\[RightDoubleBracket]"}]}], ")"}]}], "+", 
         RowBox[{
           RowBox[{"Conjugate", "[", 
             
             RowBox[{"1", "\[LeftDoubleBracket]", "3995", 
               "\[RightDoubleBracket]"}], "]"}], " ", 
           RowBox[{"(", 
             RowBox[{
               TemplateBox[{"1671"}, "OutputSizeLimit`Skeleton"], "+", 
               RowBox[{"837", " ", 
                 
                 RowBox[{
                  "1", "\[LeftDoubleBracket]", "3995", 
                   "\[RightDoubleBracket]"}]}], "-", 
               
               RowBox[{
                "1", "\[LeftDoubleBracket]", "3997", 
                 "\[RightDoubleBracket]"}]}], ")"}]}], "+", 
         RowBox[{
           RowBox[{"Conjugate", "[", 
             
             RowBox[{"1", "\[LeftDoubleBracket]", "3997", 
               "\[RightDoubleBracket]"}], "]"}], " ", 
           RowBox[{"(", 
             RowBox[{
               TemplateBox[{"1673"}, "OutputSizeLimit`Skeleton"], "+", 
               RowBox[{"837", " ", 
                 
                 RowBox[{
                  "1", "\[LeftDoubleBracket]", "3997", 
                   "\[RightDoubleBracket]"}]}]}], ")"}]}]}]]], Short[#, 8]& ],
    "line" -> 253, "sessionID" -> 32287345106460008461, "byteCount" -> 
   236537840, "size" -> 8, "stored" -> False, "expr" -> Missing["NotStored"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
vuHCo6cNpAHIppr4
  "],
 CellLabel->
  "Out[253]=",ExpressionUUID->"f926fba3-17ec-4487-94b1-2274f59d2010"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Parameter\"\>", "\<\"Correlation\"\>"},
    {"\<\"mum\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.1735\"\>",
        ShowStringCharacters->False],
       0.17353281834111592`,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"muf\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.6284\"\>",
        ShowStringCharacters->False],
       0.6284217031772167,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"mm\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"-0.2279\"\>",
        ShowStringCharacters->False],
       -0.2279426059759987,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"mf\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.1128\"\>",
        ShowStringCharacters->False],
       0.11278568280936568`,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"sigjm\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"-0.1271\"\>",
        ShowStringCharacters->False],
       -0.127120928842348,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"sigjf\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.3183\"\>",
        ShowStringCharacters->False],
       0.3183351638026506,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"taum\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"-0.0122\"\>",
        ShowStringCharacters->False],
       -0.012237721492876831`,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"tauf\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"-0.0603\"\>",
        ShowStringCharacters->False],
       -0.06028718517069637,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"wm\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.2308\"\>",
        ShowStringCharacters->False],
       0.23076929096877197`,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"wf\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"-0.1481\"\>",
        ShowStringCharacters->False],
       -0.14813547224561174`,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"k\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"-0.0626\"\>",
        ShowStringCharacters->False],
       -0.0626026207628633,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"rr\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.2288\"\>",
        ShowStringCharacters->False],
       0.2287715020645784,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"am\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"-0.5716\"\>",
        ShowStringCharacters->False],
       -0.5715775238331169,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"af\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.2836\"\>",
        ShowStringCharacters->False],
       0.2836281937031842,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"esm\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"-0.5556\"\>",
        ShowStringCharacters->False],
       -0.5555598812001343,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"esf\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.1554\"\>",
        ShowStringCharacters->False],
       0.1554033200158619,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]},
    {"\<\"AR\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"-0.1103\"\>",
        ShowStringCharacters->False],
       -0.11027360806421932`,
       AutoDelete->True],
      NumberForm[#, {5, 4}]& ]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{"."}}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOIj5+64LtV463guMWA+iK7QSX0EomVy3VYsA9KflnBu
A9EfTh8qWg2k/d7t3A+i5z+zZ1kLpOu89rqA6L/lW51OAWmzj1pxIJrZ8Vj8
JSCtf8B2D4iOvMtzD0QfC+FTuwykeR/WOIDoSc684leA9IkdnYYg+t4LFVsQ
XcN4vfU6kP6+dtlhEP2Gy+wRiI7sXL7rJpDetWGb3S0gvWpLidFtIK0isZlP
XvOtY22mtCuInqAo4Q+iL3mqp4Loc/kz20G0o4etpQKQjml+FgOiu5ivNYFo
AeVVK1WBNJOnoqMakNbzmuUDonP7VDapA2nZtLpvmkD6wItbalpAelVDeDWI
3qLMp6cNpAHGq5q1
  "],
 CellLabel->
  "Out[256]=",ExpressionUUID->"44fd4e2d-2b22-4c15-9850-853317cd4565"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{1, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"13.3 for Mac OS X x86 (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c4404a48-13d8-4bb5-b49a-615d2d04e13c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 60478, 1536, 5365, "Input",ExpressionUUID->"b0ce1a5a-86b3-4e8c-a1fa-fdef13b32ee8"],
Cell[60881, 1551, 1825, 32, 30, "Input",ExpressionUUID->"e3625209-14b1-4e71-8063-043d237357fe"],
Cell[62709, 1585, 9517, 130, 30, "Input",ExpressionUUID->"13b9a033-e19c-4159-9969-c33a027ea7ff"],
Cell[72229, 1717, 200, 4, 30, "Input",ExpressionUUID->"a8f9d536-634c-4df7-927f-f4f7acadbfd5"],
Cell[72432, 1723, 1809, 25, 30, "Input",ExpressionUUID->"29b4fc3c-bbec-489f-b144-10443ffdeba3"],
Cell[74244, 1750, 249, 4, 30, "Input",ExpressionUUID->"940c6407-f07b-474e-8235-fea91dd5baf9"],
Cell[CellGroupData[{
Cell[74518, 1758, 129967, 3154, 8998, "Input",ExpressionUUID->"05f0c121-2440-46d1-9cf0-6f10e502826d"],
Cell[204488, 4914, 60397, 1058, 241, "Output",ExpressionUUID->"96a8e302-1d9c-4700-bd3e-1c9c88dcde14"],
Cell[264888, 5974, 556, 11, 34, "Output",ExpressionUUID->"85f00a71-a4e5-4cb7-933e-80a08c9fa226"],
Cell[265447, 5987, 60336, 1057, 244, "Output",ExpressionUUID->"589f1fab-74da-45cd-a33d-3c7316e35ae3"],
Cell[325786, 7046, 555, 11, 34, "Output",ExpressionUUID->"e7d9ca3f-03b2-42a3-bfe6-82f0fd2a9501"],
Cell[326344, 7059, 60406, 1057, 244, "Output",ExpressionUUID->"c82e5f62-f5ec-41dc-96d0-1ce207949cc2"],
Cell[386753, 8118, 572, 12, 34, "Output",ExpressionUUID->"485e2260-1402-45ee-8552-f4f879d5d9e6"],
Cell[387328, 8132, 60471, 1061, 248, "Output",ExpressionUUID->"a24b350c-352e-499b-8335-3847a16ee3c1"],
Cell[447802, 9195, 556, 11, 34, "Output",ExpressionUUID->"56c3f7e5-e2cf-4e65-89a2-7d2f6a1879a0"],
Cell[448361, 9208, 60404, 1057, 241, "Output",ExpressionUUID->"2a065d00-9660-44d6-b8a5-d90e39b0dff2"],
Cell[508768, 10267, 575, 12, 34, "Output",ExpressionUUID->"e99fce21-604b-4580-a53e-1072b59ba73b"],
Cell[509346, 10281, 60328, 1057, 244, "Output",ExpressionUUID->"71d870da-c728-4f26-bc91-e7b01a30cde0"],
Cell[569677, 11340, 559, 11, 34, "Output",ExpressionUUID->"f21b0f82-4e85-4e38-af1b-9c7b9003426a"],
Cell[570239, 11353, 60386, 1057, 241, "Output",ExpressionUUID->"d9c9ffa3-ee30-48ee-b2a5-cd33cd9e9aa1"],
Cell[630628, 12412, 574, 12, 34, "Output",ExpressionUUID->"a5b08077-415e-4c76-b103-eb7e6f8d5e71"],
Cell[631205, 12426, 60374, 1057, 244, "Output",ExpressionUUID->"abb46b09-a95b-45f7-9498-79806a1a6358"],
Cell[691582, 13485, 573, 12, 34, "Output",ExpressionUUID->"0d7d329d-7c66-4a8f-ace7-8cb6e5ca3545"],
Cell[692158, 13499, 60467, 1061, 245, "Output",ExpressionUUID->"74ec1ea6-ae90-41a6-a958-34b8f8958a05"],
Cell[752628, 14562, 556, 11, 34, "Output",ExpressionUUID->"63cd9bdf-d57c-4b50-b47c-a995dfb5dde8"],
Cell[753187, 14575, 60334, 1057, 249, "Output",ExpressionUUID->"72ed6b02-68fe-4ba3-b400-cd46c1299a05"],
Cell[813524, 15634, 573, 12, 34, "Output",ExpressionUUID->"3b71c8ee-ad48-44c7-a9b3-84b192607eed"],
Cell[814100, 15648, 61192, 1072, 252, "Output",ExpressionUUID->"00a1b17c-4caa-4b88-b61a-133b4b7b5a96"],
Cell[875295, 16722, 576, 12, 34, "Output",ExpressionUUID->"2571b0fb-ce9b-497b-a114-b79c5b8a4218"],
Cell[875874, 16736, 61172, 1071, 251, "Output",ExpressionUUID->"14df3356-e196-4c76-a55b-41f923bd0dfa"],
Cell[937049, 17809, 555, 11, 34, "Output",ExpressionUUID->"4e5cc96d-1fad-4aee-92cd-95d7e3753f76"],
Cell[937607, 17822, 60370, 1057, 246, "Output",ExpressionUUID->"cb59664e-79bf-4bbe-a717-bf2b8ea8f9c4"],
Cell[997980, 18881, 572, 12, 34, "Output",ExpressionUUID->"5569616e-1147-4167-bd40-e6b1f275318e"],
Cell[998555, 18895, 60358, 1057, 250, "Output",ExpressionUUID->"3780760d-ff35-4ec3-9142-8afad0e87062"],
Cell[1058916, 19954, 555, 11, 34, "Output",ExpressionUUID->"24d0e5f8-3c23-4d92-bb55-cfd857c4ec08"],
Cell[1059474, 19967, 60372, 1057, 243, "Output",ExpressionUUID->"583f29f9-c6e3-46c8-bf74-ad26016ce16f"],
Cell[1119849, 21026, 572, 12, 34, "Output",ExpressionUUID->"5958f466-f242-4e67-aa95-fdce421bfefe"],
Cell[1120424, 21040, 60372, 1057, 246, "Output",ExpressionUUID->"388ebaa2-aff9-42bc-957d-a5ca4d40bd16"],
Cell[1180799, 22099, 559, 11, 34, "Output",ExpressionUUID->"3da2fb57-f2be-4f30-888b-f36e4f17e953"],
Cell[1181361, 22112, 61014, 1069, 246, "Output",ExpressionUUID->"80cea9e9-6186-4f0d-862c-b3fb33b10646"],
Cell[1242378, 23183, 573, 12, 34, "Output",ExpressionUUID->"42a1b8a7-da71-4f87-b143-a2e56b0add67"],
Cell[1242954, 23197, 595, 12, 28, "Message",ExpressionUUID->"c2cfff69-ad8d-46cf-8975-3f429e6bb8cf"],
Cell[1243552, 23211, 594, 12, 28, "Message",ExpressionUUID->"c7a4922d-2673-47c8-8e27-2bf5e4cb50c4"],
Cell[1244149, 23225, 594, 12, 28, "Message",ExpressionUUID->"fca614c4-8df6-4e0d-b2f5-e6b12a36ed47"],
Cell[1244746, 23239, 594, 12, 28, "Message",ExpressionUUID->"80f7cbe0-bddc-46c8-a0af-066604ec5e0f"],
Cell[1245343, 23253, 3861, 104, 258, "Output",ExpressionUUID->"3a5c2362-e4a6-44fc-b842-19ad7c95e86f"],
Cell[1249207, 23359, 6248, 153, 135, "Output",ExpressionUUID->"9914bb23-0a50-4c99-a0d2-470aa6ec22b5"],
Cell[1255458, 23514, 590, 12, 28, "Message",ExpressionUUID->"c4fa40bb-f20d-45da-9528-5dd1303cdd7b"],
Cell[1256051, 23528, 591, 12, 28, "Message",ExpressionUUID->"cdf0c9e6-5afd-4382-9ece-4651aa5310b7"],
Cell[1256645, 23542, 590, 12, 28, "Message",ExpressionUUID->"0a297380-2d98-49a8-83cd-6745ba0d0a22"],
Cell[1257238, 23556, 592, 12, 28, "Message",ExpressionUUID->"53cdf556-e50b-4493-b636-b088263e7fd4"],
Cell[1257833, 23570, 597, 12, 28, "Message",ExpressionUUID->"1bc12185-ee7a-438e-8c2d-f4f88cb77f9b"],
Cell[1258433, 23584, 597, 12, 28, "Message",ExpressionUUID->"3c3553a5-98cb-48ba-8ed4-e390728d17be"],
Cell[1259033, 23598, 597, 12, 28, "Message",ExpressionUUID->"4e2588d7-2078-493b-a1d9-29c6cfd8f712"],
Cell[1259633, 23612, 595, 12, 28, "Message",ExpressionUUID->"a782d37c-d2ad-4c67-95b9-431348488433"],
Cell[1260231, 23626, 3855, 104, 263, "Output",ExpressionUUID->"f4e98dcb-8765-498e-bec9-69c78db35216"],
Cell[1264089, 23732, 593, 12, 28, "Message",ExpressionUUID->"dae0c649-dd76-4eea-8787-3c9f4268ca24"],
Cell[1264685, 23746, 594, 12, 28, "Message",ExpressionUUID->"9e7ccee8-79c0-42bb-9d73-6f7a70953c43"],
Cell[1265282, 23760, 596, 12, 28, "Message",ExpressionUUID->"2340c5b3-b2b7-4592-9c10-a3d74feca2c4"],
Cell[1265881, 23774, 593, 12, 28, "Message",ExpressionUUID->"90ed65ea-6519-4714-a017-317d4b78993f"],
Cell[1266477, 23788, 7132, 177, 153, "Output",ExpressionUUID->"f926fba3-17ec-4487-94b1-2274f59d2010"],
Cell[1273612, 23967, 4628, 157, 355, "Output",ExpressionUUID->"44fd4e2d-2b22-4c15-9850-853317cd4565"]
}, Open  ]]
}
]
*)

